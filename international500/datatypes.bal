// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

@r5:DataTypeDefinition {
    name: "MonetaryComponent",
    baseType: (),
    elements: {
    
        "amount": {
            name: "amount",
            dataType: r5:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Explicit value amount to be used.",
            path: "MonetaryComponent.amount"
        },    
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.",
            path: "MonetaryComponent.code"
        },    
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Factor used for calculating this component.",
            path: "MonetaryComponent.factor"
        },    
        "'type": {
            name: "'type",
            dataType: MonetaryComponentType,
            min: 1,
            max: 1,
            isArray: false,
            description: "base | surcharge | deduction | discount | tax | informational.",
            path: "MonetaryComponent.type"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MonetaryComponent record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Money amount?;
    r5:CodeableConcept code?;
    decimal factor?;
    MonetaryComponentType 'type;
|};

public enum MonetaryComponentType {
    CODE_MONETARYCOMPONENTTYPE_SURCHARGE = "surcharge",
    CODE_MONETARYCOMPONENTTYPE_DEDUCTION = "deduction",
    CODE_MONETARYCOMPONENTTYPE_DISCOUNT = "discount",
    CODE_MONETARYCOMPONENTTYPE_TAX = "tax",
    CODE_MONETARYCOMPONENTTYPE_INFORMATIONAL = "informational",
    CODE_MONETARYCOMPONENTTYPE_BASE = "base"
};

public enum ElementdefinitionDeConstraintSeverity {
    CODE_ELEMENTDEFINITIONDECONSTRAINTSEVERITY_WARNING = "warning",
    CODE_ELEMENTDEFINITIONDECONSTRAINTSEVERITY_ERROR = "error"
};

public enum ElementdefinitionDeTypeVersioning {
    CODE_ELEMENTDEFINITIONDETYPEVERSIONING_EITHER = "either",
    CODE_ELEMENTDEFINITIONDETYPEVERSIONING_INDEPENDENT = "independent",
    CODE_ELEMENTDEFINITIONDETYPEVERSIONING_SPECIFIC = "specific"
};

public enum ElementdefinitionDeBindingStrength {
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_EXTENSIBLE = "extensible",
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_REQUIRED = "required",
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_PREFERRED = "preferred",
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_EXAMPLE = "example"
};

public enum ElementdefinitionDeBindingAdditionalPurpose {
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_CANDIDATE = "candidate",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_CURRENT = "current",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_COMPONENT = "component",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_UI = "ui",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_STARTER = "starter",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_MAXIMUM = "maximum",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_MINIMUM = "minimum",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_EXTENSIBLE = "extensible",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_REQUIRED = "required",
    CODE_ELEMENTDEFINITIONDEBINDINGADDITIONALPURPOSE_PREFERRED = "preferred"
};

public enum ElementdefinitionDeSlicingRules {
    CODE_ELEMENTDEFINITIONDESLICINGRULES_CLOSED = "closed",
    CODE_ELEMENTDEFINITIONDESLICINGRULES_OPENATEND = "openAtEnd",
    CODE_ELEMENTDEFINITIONDESLICINGRULES_OPEN = "open"
};

public enum ElementdefinitionDeTypeAggregation {
    CODE_ELEMENTDEFINITIONDETYPEAGGREGATION_CONTAINED = "contained",
    CODE_ELEMENTDEFINITIONDETYPEAGGREGATION_BUNDLED = "bundled",
    CODE_ELEMENTDEFINITIONDETYPEAGGREGATION_REFERENCED = "referenced"
};

public enum ElementdefinitionDeRepresentation {
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_XMLTEXT = "xmlText",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_CDATEXT = "cdaText",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_XMLATTR = "xmlAttr",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_TYPEATTR = "typeAttr",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_XHTML = "xhtml"
};

public enum ElementdefinitionDeSlicingDiscriminatorType {
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_PROFILE = "profile",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_EXISTS = "exists",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_POSITION = "position",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_TYPE = "type",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_VALUE = "value"
};


@r5:DataTypeDefinition {
    name: "DataType",
    baseType: (),
    elements: {
        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DataType record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
|};


@r5:DataTypeDefinition {
    name: "Availability",
    baseType: (),
    elements: {
    
        "notAvailableTime": {
            name: "notAvailableTime",
            dataType: r5:Element,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Not available during this time due to provided reason.",
            path: "Availability.notAvailableTime"
        },    
        "allDay": {
            name: "allDay",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Always available? i.e. 24 hour service.",
            path: "Availability.availableTime.allDay"
        },    
        "availableTime": {
            name: "availableTime",
            dataType: r5:Element,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Times the {item} is available.",
            path: "Availability.availableTime"
        },    
        "availableEndTime": {
            name: "availableEndTime",
            dataType: r5:time,
            min: 0,
            max: 1,
            isArray: false,
            description: "Closing time of day (ignored if allDay = true).",
            path: "Availability.availableTime.availableEndTime"
        },    
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reason presented to the user explaining why time not available.",
            path: "Availability.notAvailableTime.description"
        },    
        "during": {
            name: "during",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Service not available during this period.",
            path: "Availability.notAvailableTime.during"
        },    
        "daysOfWeek": {
            name: "daysOfWeek",
            dataType: AvailabilityAvailableTimeDaysOfWeek,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "mon | tue | wed | thu | fri | sat | sun.",
            path: "Availability.availableTime.daysOfWeek"
        },    
        "availableStartTime": {
            name: "availableStartTime",
            dataType: r5:time,
            min: 0,
            max: 1,
            isArray: false,
            description: "Opening time of day (ignored if allDay = true).",
            path: "Availability.availableTime.availableStartTime"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type Availability record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Element[] notAvailableTime?;
    boolean allDay?;
    r5:Element[] availableTime?;
    r5:time availableEndTime?;
    string description?;
    r5:Period during?;
    AvailabilityAvailableTimeDaysOfWeek[] daysOfWeek?;
    r5:time availableStartTime?;
|};

public enum AvailabilityAvailableTimeDaysOfWeek {
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_THU = "thu",
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_TUE = "tue",
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_WED = "wed",
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_SAT = "sat",
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_FRI = "fri",
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_MON = "mon",
    CODE_AVAILABILITYAVAILABLETIMEDAYSOFWEEK_SUN = "sun"
};


@r5:DataTypeDefinition {
    name: "ExtendedContactDetail",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Period that this contact was valid for usage.",
            path: "ExtendedContactDetail.period"
        },    
        "address": {
            name: "address",
            dataType: r5:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Address for the contact.",
            path: "ExtendedContactDetail.address"
        },    
        "purpose": {
            name: "purpose",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose/type of contact.",
            path: "ExtendedContactDetail.purpose"
        },    
        "organization": {
            name: "organization",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "This contact detail is handled/monitored by a specific organization. If the name is provided in the contact, then it is referring to the named individual within this organization.",
            path: "ExtendedContactDetail.organization"
        },    
        "name": {
            name: "name",
            dataType: r5:HumanName,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The name of an individual to contact, some types of contact detail are usually blank.",
            path: "ExtendedContactDetail.name"
        },    
        "telecom": {
            name: "telecom",
            dataType: r5:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The contact details application for the purpose defined.",
            path: "ExtendedContactDetail.telecom"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ExtendedContactDetail record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Period period?;
    r5:Address address?;
    r5:CodeableConcept purpose?;
    r5:Reference organization?;
    r5:HumanName[] name?;
    r5:ContactPoint[] telecom?;
|};


@r5:DataTypeDefinition {
    name: "RatioRange",
    baseType: (),
    elements: {
    
        "lowNumerator": {
            name: "lowNumerator",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the low limit numerator.",
            path: "RatioRange.lowNumerator"
        },    
        "highNumerator": {
            name: "highNumerator",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the high limit numerator.",
            path: "RatioRange.highNumerator"
        },    
        "denominator": {
            name: "denominator",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the denominator.",
            path: "RatioRange.denominator"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RatioRange record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Quantity lowNumerator?;
    r5:Quantity highNumerator?;
    r5:Quantity denominator?;
|};


@r5:DataTypeDefinition {
    name: "PrimitiveType",
    baseType: (),
    elements: {
        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PrimitiveType record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
|};


@r5:DataTypeDefinition {
    name: "MarketingStatus",
    baseType: (),
    elements: {
    
        "country": {
            name: "country",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The country in which the marketing authorization has been granted shall be specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.",
            path: "MarketingStatus.country"
        },    
        "dateRange": {
            name: "dateRange",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when the Medicinal Product is placed on the market by the Marketing Authorization Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.",
            path: "MarketingStatus.dateRange"
        },    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MarketingStatus.modifierExtension"
        },    
        "jurisdiction": {
            name: "jurisdiction",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where a Medicines Regulatory Agency has granted a marketing authorization for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified.",
            path: "MarketingStatus.jurisdiction"
        },    
        "status": {
            name: "status",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples.",
            path: "MarketingStatus.status"
        },    
        "restoreDate": {
            name: "restoreDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when the Medicinal Product is placed on the market by the Marketing Authorization Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.",
            path: "MarketingStatus.restoreDate"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type MarketingStatus record {|
    *r5:MarketingStatus;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:CodeableConcept country?;
    r5:Period dateRange?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept jurisdiction?;
    r5:CodeableConcept status;
    r5:dateTime restoreDate?;
|};


@r5:DataTypeDefinition {
    name: "VirtualServiceDetail",
    baseType: (),
    elements: {
    
        "sessionKey": {
            name: "sessionKey",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Session Key required by the virtual service.",
            path: "VirtualServiceDetail.sessionKey"
        },    
        "addressUrl": {
            name: "addressUrl",
            dataType: r5:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "What address or number needs to be used for a user to connect to the virtual service to join. The channelType informs as to which datatype is appropriate to use (requires knowledge of the specific type).",
            path: "VirtualServiceDetail.address[x]"
        },    
        "additionalInfo": {
            name: "additionalInfo",
            dataType: r5:urlType,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Address to see alternative connection details.",
            path: "VirtualServiceDetail.additionalInfo"
        },    
        "channelType": {
            name: "channelType",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of virtual service to connect to (i.e. Teams, Zoom, Specific VMR technology, WhatsApp).",
            path: "VirtualServiceDetail.channelType"
        },    
        "maxParticipants": {
            name: "maxParticipants",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Maximum number of participants supported by the virtual service.",
            path: "VirtualServiceDetail.maxParticipants"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type VirtualServiceDetail record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string sessionKey?;
    r5:urlType addressUrl?;
    r5:urlType[] additionalInfo?;
    r5:Coding channelType?;
    r5:positiveInt maxParticipants?;
|};


@r5:DataTypeDefinition {
    name: "ProductShelfLife",
    baseType: (),
    elements: {
    
        "periodDuration": {
            name: "periodDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.",
            path: "ProductShelfLife.period[x]"
        },    
        "specialPrecautionsForStorage": {
            name: "specialPrecautionsForStorage",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
            path: "ProductShelfLife.specialPrecautionsForStorage"
        },    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ProductShelfLife.modifierExtension"
        },    
        "'type": {
            name: "'type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
            path: "ProductShelfLife.type"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ProductShelfLife record {|
    *r5:ProductShelfLife;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Duration periodDuration?;
    r5:CodeableConcept[] specialPrecautionsForStorage?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept 'type?;
|};


@r5:DataTypeDefinition {
    name: "Base",
    baseType: (),
    elements: {
        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type Base record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
|};


@r5:DataTypeDefinition {
    name: "CodeableReference",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a resource the provides exact details about the information being referenced.",
            path: "CodeableReference.reference"
        },    
        "concept": {
            name: "concept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a concept - e.g. the information is identified by its general class to the degree of precision found in the terminology.",
            path: "CodeableReference.concept"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CodeableReference record {|
    *r5:CodeableReference;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Reference reference?;
    r5:CodeableConcept concept?;
|};


@r5:DataTypeDefinition {
    name: "BackboneType",
    baseType: (),
    elements: {
    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BackboneType.modifierExtension"
        }        },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BackboneType record {|
    *r5:Element;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r5:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r5:Extension[] modifierExtension?;
|};


