// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_APPOINTMENT = "http://hl7.org/fhir/StructureDefinition/Appointment";
public const RESOURCE_NAME_APPOINTMENT = "Appointment";

# FHIR Appointment resource record.
#
# + resourceType - The type of the resource describes
# + serviceType - The specific service that is to be performed during this appointment.
# + note - Additional notes/comments about the appointment.
# + reason - The reason that this appointment is being scheduled. This is more clinical than administrative. This can be coded, or as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + specialty - The specialty of a practitioner that would be required to perform the service requested in this appointment.
# + virtualService - Connection details of a virtual service (e.g. conference call).
# + subject - The patient or group associated with the appointment, if they are to be present (usually) then they should also be included in the participant backbone element.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - The brief description of the appointment as would be shown on a subject line in a meeting request, or appointment list. Detailed or expanded information should be put in the note field.
# + language - The base language in which the resource is written.
# + requestedPeriod - A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within. The duration (usually in minutes) could also be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time. However, in other situations the duration may be calculated by the scheduling system.
# + minutesDuration - Number of minutes that the appointment is to take. This can be less than the duration between the start and end times. For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work. Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end.
# + slot - The slots from the participants' schedules that will be filled by the appointment.
# + recurrenceId - The sequence number that identifies a specific appointment in a recurring pattern.
# + participant - List of participants involved in the appointment.
# + serviceCategory - A broad categorization of the service that is to be performed during this appointment.
# + recurrenceTemplate - The details of the recurrence pattern or template that is used to generate recurring appointments.
# + end - Date/Time that the appointment is to conclude.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + 'class - Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.
# + basedOn - The request this appointment is allocated to assess (e.g. incoming referral or procedure request).
# + cancellationDate - The date/time describing when the appointment was cancelled.
# + appointmentType - The style of appointment or patient that has been booked in the slot (not service type).
# + identifier - This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).
# + cancellationReason - The coded reason for the appointment being cancelled. This is often used in reporting/billing/futher processing to determine if further actions are required, or specific fees apply.
# + created - The date that this appointment was initially created. This could be different to the meta.lastModified value on the initial entry, as this could have been before the resource was created on the FHIR server, and should remain unchanged over the lifespan of the appointment.
# + replaces - Appointment replaced by this Appointment in cases where there is a cancellation, the details of the cancellation can be found in the cancellationReason property (on the referenced resource).
# + 'start - Date/Time that the appointment is to take place.
# + supportingInformation - Additional information to support the appointment provided when making the appointment.
# + priority - The priority of the appointment. Can be used to make informed decisions if needing to re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9 as lowest priority).
# + previousAppointment - The previous appointment in a series of related appointments.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + occurrenceChanged - This appointment varies from the recurring pattern.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + account - The set of accounts that is expected to be used for billing the activities that result from this Appointment.
# + originatingAppointment - The originating appointment in a recurring set of related appointments.
# + patientInstruction - While Appointment.note contains information for internal use, Appointment.patientInstructions is used to capture patient facing information about the Appointment (e.g. please bring your referral or fast from 8pm night before).
# + status - The overall status of the Appointment. Each of the participants has their own participation status which indicates their involvement in the process, however this status indicates the shared status.
@r5:ResourceDefinition {
    resourceType: "Appointment",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Appointment",
    elements: {
        "serviceType" : {
            name: "serviceType",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.serviceType",
            valueSet: "http://hl7.org/fhir/ValueSet/service-type"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.note"
        },
        "reason" : {
            name: "reason",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.reason",
            valueSet: "http://hl7.org/fhir/ValueSet/encounter-reason"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.extension"
        },
        "specialty" : {
            name: "specialty",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.specialty",
            valueSet: "http://hl7.org/fhir/ValueSet/c80-practice-codes"
        },
        "virtualService" : {
            name: "virtualService",
            dataType: VirtualServiceDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.virtualService"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.modifierExtension"
        },
        "description" : {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.description"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "requestedPeriod" : {
            name: "requestedPeriod",
            dataType: r5:Period,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.requestedPeriod"
        },
        "minutesDuration" : {
            name: "minutesDuration",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.minutesDuration"
        },
        "slot" : {
            name: "slot",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.slot"
        },
        "recurrenceId" : {
            name: "recurrenceId",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.recurrenceId"
        },
        "participant" : {
            name: "participant",
            dataType: AppointmentParticipant,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.participant"
        },
        "serviceCategory" : {
            name: "serviceCategory",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.serviceCategory",
            valueSet: "http://hl7.org/fhir/ValueSet/service-category"
        },
        "recurrenceTemplate" : {
            name: "recurrenceTemplate",
            dataType: AppointmentRecurrenceTemplate,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.recurrenceTemplate"
        },
        "end" : {
            name: "end",
            dataType: r5:instant,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.end"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.text"
        },
        "class" : {
            name: "class",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.class",
            valueSet: "http://terminology.hl7.org/ValueSet/EncounterClass"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.basedOn"
        },
        "cancellationDate" : {
            name: "cancellationDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.cancellationDate"
        },
        "appointmentType" : {
            name: "appointmentType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.appointmentType",
            valueSet: "http://terminology.hl7.org/ValueSet/v2-0276"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.identifier"
        },
        "cancellationReason" : {
            name: "cancellationReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.cancellationReason",
            valueSet: "http://hl7.org/fhir/ValueSet/appointment-cancellation-reason"
        },
        "created" : {
            name: "created",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.created"
        },
        "replaces" : {
            name: "replaces",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.replaces"
        },
        "start" : {
            name: "start",
            dataType: r5:instant,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.start"
        },
        "supportingInformation" : {
            name: "supportingInformation",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.supportingInformation"
        },
        "priority" : {
            name: "priority",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.priority",
            valueSet: "http://terminology.hl7.org/ValueSet/v3-ActPriority"
        },
        "previousAppointment" : {
            name: "previousAppointment",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.previousAppointment"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.contained"
        },
        "occurrenceChanged" : {
            name: "occurrenceChanged",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.occurrenceChanged"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.implicitRules"
        },
        "account" : {
            name: "account",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.account"
        },
        "originatingAppointment" : {
            name: "originatingAppointment",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Appointment.originatingAppointment"
        },
        "patientInstruction" : {
            name: "patientInstruction",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Appointment.patientInstruction"
        },
        "status" : {
            name: "status",
            dataType: AppointmentStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Appointment.status",
            valueSet: "http://hl7.org/fhir/ValueSet/appointmentstatus|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Appointment record {|
    *r5:DomainResource;

    RESOURCE_NAME_APPOINTMENT resourceType = RESOURCE_NAME_APPOINTMENT;

    r5:CodeableReference[] serviceType?;
    r5:Annotation[] note?;
    r5:CodeableReference[] reason?;
    r5:Extension[] extension?;
    r5:CodeableConcept[] specialty?;
    VirtualServiceDetail[] virtualService?;
    r5:Reference subject?;
    r5:Extension[] modifierExtension?;
    string description?;
    r5:code language?;
    r5:Period[] requestedPeriod?;
    r5:positiveInt minutesDuration?;
    r5:Reference[] slot?;
    r5:positiveInt recurrenceId?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Appointment.participant constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Appointment.participant constraint. This field must be an array containing at most one item."
        }
    }
    AppointmentParticipant[] participant;
    r5:CodeableConcept[] serviceCategory?;
    AppointmentRecurrenceTemplate[] recurrenceTemplate?;
    r5:instant end?;
    string id?;
    r5:Narrative text?;
    r5:CodeableConcept[] 'class?;
    r5:Reference[] basedOn?;
    r5:dateTime cancellationDate?;
    r5:CodeableConcept appointmentType?;
    r5:Identifier[] identifier?;
    r5:CodeableConcept cancellationReason?;
    r5:dateTime created?;
    r5:Reference[] replaces?;
    r5:instant 'start?;
    r5:Reference[] supportingInformation?;
    r5:CodeableConcept priority?;
    r5:Reference previousAppointment?;
    r5:Resource[] contained?;
    boolean occurrenceChanged?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:Reference[] account?;
    r5:Reference originatingAppointment?;
    r5:CodeableReference[] patientInstruction?;
    AppointmentStatus status;
    r5:Element ...;
|};

# FHIR AppointmentRecurrenceTemplateMonthlyTemplate datatype record.
#
# + nthWeekOfMonth - Indicates which week within a month the appointments in the series of recurring appointments should occur on.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + dayOfWeek - Indicates which day of the week the recurring appointments should occur each nth week.
# + dayOfMonth - Indicates that appointments in the series of recurring appointments should occur on a specific day of the month.
# + monthInterval - Indicates that recurring appointments should occur every nth month.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "AppointmentRecurrenceTemplateMonthlyTemplate",
    baseType: (),
    elements: {
        "nthWeekOfMonth": {
            name: "nthWeekOfMonth",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates which week within a month the appointments in the series of recurring appointments should occur on.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.nthWeekOfMonth"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.extension"
        },
        "dayOfWeek": {
            name: "dayOfWeek",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates which day of the week the recurring appointments should occur each nth week.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.dayOfWeek"
        },
        "dayOfMonth": {
            name: "dayOfMonth",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that appointments in the series of recurring appointments should occur on a specific day of the month.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.dayOfMonth"
        },
        "monthInterval": {
            name: "monthInterval",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur every nth month.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.monthInterval"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type AppointmentRecurrenceTemplateMonthlyTemplate record {|
    *r5:BackboneElement;

    r5:Coding nthWeekOfMonth?;
    r5:Extension[] extension?;
    r5:Coding dayOfWeek?;
    r5:positiveInt dayOfMonth?;
    r5:positiveInt monthInterval;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR AppointmentRecurrenceTemplate datatype record.
#
# + occurrenceDate - The list of specific dates that will have appointments generated.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + timezone - The timezone of the recurring appointment occurrences.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + occurrenceCount - How many appointments are planned in the recurrence.
# + excludingDate - Any dates, such as holidays, that should be excluded from the recurrence.
# + recurrenceType - How often the appointment series should recur.
# + yearlyTemplate - Information about yearly recurring appointments.
# + monthlyTemplate - Information about monthly recurring appointments.
# + excludingRecurrenceId - Any dates, such as holidays, that should be excluded from the recurrence.
# + lastOccurrenceDate - Recurring appointments will not occur after this date.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + weeklyTemplate - Information about weekly recurring appointments.
@r5:DataTypeDefinition {
    name: "AppointmentRecurrenceTemplate",
    baseType: (),
    elements: {
        "occurrenceDate": {
            name: "occurrenceDate",
            dataType: r5:date,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The list of specific dates that will have appointments generated.",
            path: "Appointment.recurrenceTemplate.occurrenceDate"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Appointment.recurrenceTemplate.extension"
        },
        "timezone": {
            name: "timezone",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The timezone of the recurring appointment occurrences.",
            path: "Appointment.recurrenceTemplate.timezone"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Appointment.recurrenceTemplate.modifierExtension"
        },
        "occurrenceCount": {
            name: "occurrenceCount",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "How many appointments are planned in the recurrence.",
            path: "Appointment.recurrenceTemplate.occurrenceCount"
        },
        "excludingDate": {
            name: "excludingDate",
            dataType: r5:date,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Any dates, such as holidays, that should be excluded from the recurrence.",
            path: "Appointment.recurrenceTemplate.excludingDate"
        },
        "recurrenceType": {
            name: "recurrenceType",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "How often the appointment series should recur.",
            path: "Appointment.recurrenceTemplate.recurrenceType"
        },
        "yearlyTemplate": {
            name: "yearlyTemplate",
            dataType: AppointmentRecurrenceTemplateYearlyTemplate,
            min: 0,
            max: 1,
            isArray: false,
            description: "Information about yearly recurring appointments.",
            path: "Appointment.recurrenceTemplate.yearlyTemplate"
        },
        "monthlyTemplate": {
            name: "monthlyTemplate",
            dataType: AppointmentRecurrenceTemplateMonthlyTemplate,
            min: 0,
            max: 1,
            isArray: false,
            description: "Information about monthly recurring appointments.",
            path: "Appointment.recurrenceTemplate.monthlyTemplate"
        },
        "excludingRecurrenceId": {
            name: "excludingRecurrenceId",
            dataType: r5:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Any dates, such as holidays, that should be excluded from the recurrence.",
            path: "Appointment.recurrenceTemplate.excludingRecurrenceId"
        },
        "lastOccurrenceDate": {
            name: "lastOccurrenceDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Recurring appointments will not occur after this date.",
            path: "Appointment.recurrenceTemplate.lastOccurrenceDate"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Appointment.recurrenceTemplate.id"
        },
        "weeklyTemplate": {
            name: "weeklyTemplate",
            dataType: AppointmentRecurrenceTemplateWeeklyTemplate,
            min: 0,
            max: 1,
            isArray: false,
            description: "Information about weekly recurring appointments.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type AppointmentRecurrenceTemplate record {|
    *r5:BackboneElement;

    r5:date[] occurrenceDate?;
    r5:Extension[] extension?;
    r5:CodeableConcept timezone?;
    r5:Extension[] modifierExtension?;
    r5:positiveInt occurrenceCount?;
    r5:date[] excludingDate?;
    r5:CodeableConcept recurrenceType;
    AppointmentRecurrenceTemplateYearlyTemplate yearlyTemplate?;
    AppointmentRecurrenceTemplateMonthlyTemplate monthlyTemplate?;
    r5:positiveInt[] excludingRecurrenceId?;
    r5:date lastOccurrenceDate?;
    string id?;
    AppointmentRecurrenceTemplateWeeklyTemplate weeklyTemplate?;
|};

# FHIR AppointmentRecurrenceTemplateYearlyTemplate datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + yearInterval - Appointment recurs every nth year.
@r5:DataTypeDefinition {
    name: "AppointmentRecurrenceTemplateYearlyTemplate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Appointment.recurrenceTemplate.yearlyTemplate.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Appointment.recurrenceTemplate.yearlyTemplate.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Appointment.recurrenceTemplate.yearlyTemplate.id"
        },
        "yearInterval": {
            name: "yearInterval",
            dataType: r5:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Appointment recurs every nth year.",
            path: "Appointment.recurrenceTemplate.yearlyTemplate.yearInterval"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type AppointmentRecurrenceTemplateYearlyTemplate record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:positiveInt yearInterval;
|};

# FHIR AppointmentRecurrenceTemplateWeeklyTemplate datatype record.
#
# + sunday - Indicates that recurring appointments should occur on Sundays.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + saturday - Indicates that recurring appointments should occur on Saturdays.
# + tuesday - Indicates that recurring appointments should occur on Tuesdays.
# + weekInterval - The interval defines if the recurrence is every nth week. The default is every week, so it is expected that this value will be 2 or more. e.g. For recurring every second week this interval would be 2, or every third week the interval would be 3.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + friday - Indicates that recurring appointments should occur on Fridays.
# + thursday - Indicates that recurring appointments should occur on Thursdays.
# + wednesday - Indicates that recurring appointments should occur on Wednesdays.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + monday - Indicates that recurring appointments should occur on Mondays.
@r5:DataTypeDefinition {
    name: "AppointmentRecurrenceTemplateWeeklyTemplate",
    baseType: (),
    elements: {
        "sunday": {
            name: "sunday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Sundays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.sunday"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.extension"
        },
        "saturday": {
            name: "saturday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Saturdays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.saturday"
        },
        "tuesday": {
            name: "tuesday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Tuesdays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.tuesday"
        },
        "weekInterval": {
            name: "weekInterval",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The interval defines if the recurrence is every nth week. The default is every week, so it is expected that this value will be 2 or more. e.g. For recurring every second week this interval would be 2, or every third week the interval would be 3.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.weekInterval"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.modifierExtension"
        },
        "friday": {
            name: "friday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Fridays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.friday"
        },
        "thursday": {
            name: "thursday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Thursdays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.thursday"
        },
        "wednesday": {
            name: "wednesday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Wednesdays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.wednesday"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.id"
        },
        "monday": {
            name: "monday",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that recurring appointments should occur on Mondays.",
            path: "Appointment.recurrenceTemplate.weeklyTemplate.monday"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type AppointmentRecurrenceTemplateWeeklyTemplate record {|
    *r5:BackboneElement;

    boolean sunday?;
    r5:Extension[] extension?;
    boolean saturday?;
    boolean tuesday?;
    r5:positiveInt weekInterval?;
    r5:Extension[] modifierExtension?;
    boolean friday?;
    boolean thursday?;
    boolean wednesday?;
    string id?;
    boolean monday?;
|};

# AppointmentStatus enum
public enum AppointmentStatus {
   CODE_STATUS_ARRIVED = "arrived",
   CODE_STATUS_BOOKED = "booked",
   CODE_STATUS_PROPOSED = "proposed",
   CODE_STATUS_PENDING = "pending",
   CODE_STATUS_FULFILLED = "fulfilled",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_NOSHOW = "noshow",
   CODE_STATUS_WAITLIST = "waitlist",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_CHECKED_IN = "checked-in"
}

# AppointmentParticipantStatus enum
public enum AppointmentParticipantStatus {
   CODE_STATUS_DECLINED = "declined",
   CODE_STATUS_NEEDS_ACTION = "needs-action",
   CODE_STATUS_ACCEPTED = "accepted",
   CODE_STATUS_TENTATIVE = "tentative"
}

# FHIR AppointmentParticipant datatype record.
#
# + actor - The individual, device, location, or service participating in the appointment.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Participation period of the actor.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Role of participant in the appointment.
# + required - Whether this participant is required to be present at the meeting. If false, the participant is optional.
# + status - Participation status of the actor.
@r5:DataTypeDefinition {
    name: "AppointmentParticipant",
    baseType: (),
    elements: {
        "actor": {
            name: "actor",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The individual, device, location, or service participating in the appointment.",
            path: "Appointment.participant.actor"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Appointment.participant.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Participation period of the actor.",
            path: "Appointment.participant.period"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Appointment.participant.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Appointment.participant.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Role of participant in the appointment.",
            path: "Appointment.participant.type"
        },
        "required": {
            name: "required",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether this participant is required to be present at the meeting. If false, the participant is optional.",
            path: "Appointment.participant.required"
        },
        "status": {
            name: "status",
            dataType: AppointmentParticipantStatus,
            min: 1,
            max: 1,
            isArray: false,
            description: "Participation status of the actor.",
            path: "Appointment.participant.status"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type AppointmentParticipant record {|
    *r5:BackboneElement;

    r5:Reference actor?;
    r5:Extension[] extension?;
    r5:Period period?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept[] 'type?;
    boolean required?;
    AppointmentParticipantStatus status;
|};

