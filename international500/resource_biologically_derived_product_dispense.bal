// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_BIOLOGICALLYDERIVEDPRODUCTDISPENSE = "http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProductDispense";
public const RESOURCE_NAME_BIOLOGICALLYDERIVEDPRODUCTDISPENSE = "BiologicallyDerivedProductDispense";

# FHIR BiologicallyDerivedProductDispense resource record.
#
# + resourceType - The type of the resource describes
# + identifier - Unique instance identifiers assigned to a biologically derived product dispense. Note: This is a business identifier, not a resource identifier.
# + note - Additional notes.
# + partOf - A larger event of which this particular event is a component.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + product - A link to a resource identifying the biologically derived product that is being dispensed.
# + performer - Indicates who or what performed an action.
# + quantity - The amount of product in the dispense. Quantity will depend on the product being dispensed. Examples are: volume; cell count; concentration.
# + preparedDate - When the product was selected/ matched.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + destination - Link to a resource identifying the physical location that the product was dispatched to.
# + whenHandedOver - When the product was dispatched for clinical use.
# + language - The base language in which the resource is written.
# + originRelationshipType - Indicates the relationship between the donor of the biologically derived product and the intended recipient.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + matchStatus - Indicates the type of matching associated with the dispense.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + patient - A link to a resource representing the patient that the product is dispensed for.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + usageInstruction - Specific instructions for use.
# + location - The physical location where the dispense was performed.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + basedOn - The order or request that the dispense is fulfilling. This is a reference to a ServiceRequest resource.
# + status - A code specifying the state of the dispense event.
@r5:ResourceDefinition {
    resourceType: "BiologicallyDerivedProductDispense",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProductDispense",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.identifier"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.partOf"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.extension"
        },
        "product" : {
            name: "product",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.product"
        },
        "performer" : {
            name: "performer",
            dataType: BiologicallyDerivedProductDispensePerformer,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.performer"
        },
        "quantity" : {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.quantity"
        },
        "preparedDate" : {
            name: "preparedDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.preparedDate"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.modifierExtension"
        },
        "destination" : {
            name: "destination",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.destination"
        },
        "whenHandedOver" : {
            name: "whenHandedOver",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.whenHandedOver"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "originRelationshipType" : {
            name: "originRelationshipType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.originRelationshipType",
            valueSet: "http://hl7.org/fhir/ValueSet/biologicallyderivedproductdispense-origin-relationship"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.contained"
        },
        "matchStatus" : {
            name: "matchStatus",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.matchStatus",
            valueSet: "http://hl7.org/fhir/ValueSet/biologicallyderivedproductdispense-match-status"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.meta"
        },
        "patient" : {
            name: "patient",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.patient"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.implicitRules"
        },
        "usageInstruction" : {
            name: "usageInstruction",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.usageInstruction"
        },
        "location" : {
            name: "location",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.location"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.text"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BiologicallyDerivedProductDispense.basedOn"
        },
        "status" : {
            name: "status",
            dataType: BiologicallyDerivedProductDispenseStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "BiologicallyDerivedProductDispense.status",
            valueSet: "http://hl7.org/fhir/ValueSet/biologicallyderivedproductdispense-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type BiologicallyDerivedProductDispense record {|
    *r5:DomainResource;

    RESOURCE_NAME_BIOLOGICALLYDERIVEDPRODUCTDISPENSE resourceType = RESOURCE_NAME_BIOLOGICALLYDERIVEDPRODUCTDISPENSE;

    r5:Identifier[] identifier?;
    r5:Annotation[] note?;
    r5:Reference[] partOf?;
    r5:Extension[] extension?;
    r5:Reference product;
    BiologicallyDerivedProductDispensePerformer[] performer?;
    r5:SimpleQuantity quantity?;
    r5:dateTime preparedDate?;
    r5:Extension[] modifierExtension?;
    r5:Reference destination?;
    r5:dateTime whenHandedOver?;
    r5:code language?;
    r5:CodeableConcept originRelationshipType?;
    r5:Resource[] contained?;
    r5:CodeableConcept matchStatus?;
    r5:Meta meta?;
    r5:Reference patient;
    r5:uri implicitRules?;
    string usageInstruction?;
    r5:Reference location?;
    string id?;
    r5:Narrative text?;
    r5:Reference[] basedOn?;
    BiologicallyDerivedProductDispenseStatus status;
    r5:Element ...;
|};

# BiologicallyDerivedProductDispenseStatus enum
public enum BiologicallyDerivedProductDispenseStatus {
   CODE_STATUS_ISSUED = "issued",
   CODE_STATUS_RETURNED = "returned",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_IN_PROGRESS = "in-progress",
   CODE_STATUS_UNFULFILLED = "unfulfilled",
   CODE_STATUS_PREPARATION = "preparation",
   CODE_STATUS_ALLOCATED = "allocated",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR BiologicallyDerivedProductDispensePerformer datatype record.
#
# + actor - Identifies the person responsible for the action.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + 'function - Identifies the function of the performer during the dispense.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "BiologicallyDerivedProductDispensePerformer",
    baseType: (),
    elements: {
        "actor": {
            name: "actor",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the person responsible for the action.",
            path: "BiologicallyDerivedProductDispense.performer.actor"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "BiologicallyDerivedProductDispense.performer.extension"
        },
        "function": {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the function of the performer during the dispense.",
            path: "BiologicallyDerivedProductDispense.performer.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BiologicallyDerivedProductDispense.performer.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "BiologicallyDerivedProductDispense.performer.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BiologicallyDerivedProductDispensePerformer record {|
    *r5:BackboneElement;

    r5:Reference actor;
    r5:Extension[] extension?;
    r5:CodeableConcept 'function?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

