// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_BODYSTRUCTURE = "http://hl7.org/fhir/StructureDefinition/BodyStructure";
public const RESOURCE_NAME_BODYSTRUCTURE = "BodyStructure";

# FHIR BodyStructure resource record.
#
# + resourceType - The type of the resource describes
# + identifier - Identifier for this instance of the anatomical structure.
# + image - Image or images used to identify a location.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + morphology - The kind of structure being represented by the body structure at `BodyStructure.location`. This can define both normal and abnormal morphologies.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + active - Whether this body site is in active use.
# + description - A summary, characterization or explanation of the body structure.
# + language - The base language in which the resource is written.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + includedStructure - The anatomical location(s) or region(s) of the specimen, lesion, or body structure.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + patient - The person to which the body site belongs.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
@r5:ResourceDefinition {
    resourceType: "BodyStructure",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/BodyStructure",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BodyStructure.identifier"
        },
        "image" : {
            name: "image",
            dataType: r5:Attachment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BodyStructure.image"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BodyStructure.extension"
        },
        "morphology" : {
            name: "morphology",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.morphology",
            valueSet: "http://hl7.org/fhir/ValueSet/bodystructure-code"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BodyStructure.modifierExtension"
        },
        "active" : {
            name: "active",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.active"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.description"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BodyStructure.contained"
        },
        "includedStructure" : {
            name: "includedStructure",
            dataType: BodyStructureIncludedStructure,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "BodyStructure.includedStructure"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.meta"
        },
        "patient" : {
            name: "patient",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "BodyStructure.patient"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "BodyStructure.text"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type BodyStructure record {|
    *r5:DomainResource;

    RESOURCE_NAME_BODYSTRUCTURE resourceType = RESOURCE_NAME_BODYSTRUCTURE;

    r5:Identifier[] identifier?;
    r5:Attachment[] image?;
    r5:Extension[] extension?;
    r5:CodeableConcept morphology?;
    r5:Extension[] modifierExtension?;
    boolean active?;
    r5:markdown description?;
    r5:code language?;
    r5:Resource[] contained?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.BodyStructure.includedStructure constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.BodyStructure.includedStructure constraint. This field must be an array containing at most one item."
        }
    }
    BodyStructureIncludedStructure[] includedStructure;
    r5:Meta meta?;
    r5:Reference patient;
    r5:uri implicitRules?;
    string id?;
    r5:Narrative text?;
    r5:Element ...;
|};

# FHIR BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + device - An instrument, tool, analyzer, etc. used in the measurement.
# + value - The measured distance (e.g., in cm) from a body landmark.
@r5:DataTypeDefinition {
    name: "BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.id"
        },
        "device": {
            name: "device",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An instrument, tool, analyzer, etc. used in the measurement.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.device"
        },
        "value": {
            name: "value",
            dataType: r5:Quantity,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The measured distance (e.g., in cm) from a body landmark.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableReference[] device?;
    r5:Quantity[] value?;
|};

# FHIR BodyStructureIncludedStructure datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + bodyLandmarkOrientation - Body locations in relation to a specific body landmark (tatoo, scar, other body structure).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + qualifier - Code that represents the included structure qualifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + spatialReference - XY or XYZ-coordinate orientation for structure.
# + laterality - Code that represents the included structure laterality.
# + structure - Code that represents the included structure.
@r5:DataTypeDefinition {
    name: "BodyStructureIncludedStructure",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "BodyStructure.includedStructure.extension"
        },
        "bodyLandmarkOrientation": {
            name: "bodyLandmarkOrientation",
            dataType: BodyStructureIncludedStructureBodyLandmarkOrientation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Body locations in relation to a specific body landmark (tatoo, scar, other body structure).",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BodyStructure.includedStructure.modifierExtension"
        },
        "qualifier": {
            name: "qualifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Code that represents the included structure qualifier.",
            path: "BodyStructure.includedStructure.qualifier"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "BodyStructure.includedStructure.id"
        },
        "spatialReference": {
            name: "spatialReference",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "XY or XYZ-coordinate orientation for structure.",
            path: "BodyStructure.includedStructure.spatialReference"
        },
        "laterality": {
            name: "laterality",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code that represents the included structure laterality.",
            path: "BodyStructure.includedStructure.laterality"
        },
        "structure": {
            name: "structure",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that represents the included structure.",
            path: "BodyStructure.includedStructure.structure"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BodyStructureIncludedStructure record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    BodyStructureIncludedStructureBodyLandmarkOrientation[] bodyLandmarkOrientation?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] qualifier?;
    string id?;
    r5:Reference[] spatialReference?;
    r5:CodeableConcept laterality?;
    r5:CodeableConcept structure;
|};

# FHIR BodyStructureIncludedStructureBodyLandmarkOrientation datatype record.
#
# + clockFacePosition - An description of the direction away from a landmark something is located based on a radial clock dial.
# + surfaceOrientation - The surface area a body location is in relation to a landmark.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + distanceFromLandmark - The distance in centimeters a certain observation is made from a body landmark.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + landmarkDescription - A description of a landmark on the body used as a reference to locate something else.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "BodyStructureIncludedStructureBodyLandmarkOrientation",
    baseType: (),
    elements: {
        "clockFacePosition": {
            name: "clockFacePosition",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An description of the direction away from a landmark something is located based on a radial clock dial.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.clockFacePosition"
        },
        "surfaceOrientation": {
            name: "surfaceOrientation",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The surface area a body location is in relation to a landmark.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.surfaceOrientation"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.extension"
        },
        "distanceFromLandmark": {
            name: "distanceFromLandmark",
            dataType: BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The distance in centimeters a certain observation is made from a body landmark.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.distanceFromLandmark"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.modifierExtension"
        },
        "landmarkDescription": {
            name: "landmarkDescription",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A description of a landmark on the body used as a reference to locate something else.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.landmarkDescription"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "BodyStructure.includedStructure.bodyLandmarkOrientation.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type BodyStructureIncludedStructureBodyLandmarkOrientation record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] clockFacePosition?;
    r5:CodeableConcept[] surfaceOrientation?;
    r5:Extension[] extension?;
    BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark[] distanceFromLandmark?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] landmarkDescription?;
    string id?;
|};

