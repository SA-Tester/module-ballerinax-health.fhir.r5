// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_CITATION = "http://hl7.org/fhir/StructureDefinition/Citation";
public const RESOURCE_NAME_CITATION = "Citation";

# FHIR Citation resource record.
#
# + resourceType - The type of the resource describes
# + date - The date (and optionally time) when the citation record was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the citation record changes.
# + statusDate - The state or status of the citation record paired with an effective date or period for that state.
# + note - Used for general notes and annotations not coded elsewhere.
# + copyright - Use and/or publishing restrictions for the citation record, not for the cited artifact.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + approvalDate - The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
# + purpose - Explanation of why this citation is needed and why it has been designed as it has.
# + jurisdiction - A legal or geographic region in which the citation record is intended to be used.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A free text natural language description of the citation from a consumer's perspective.
# + experimental - A Boolean value to indicate that this citation record is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
# + language - The base language in which the resource is written.
# + title - A short, descriptive, user-friendly title for the citation record.
# + versionAlgorithmString - Indicates the mechanism used to compare versions to determine which is more current.
# + contact - Contact details to assist a user in finding and communicating with the publisher.
# + endorser - Who endorsed the citation record.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + summary - A human-readable display of key concepts to represent the citation.
# + editor - Who edited or revised the citation record.
# + identifier - A formal identifier that is used to identify this citation record when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + relatedArtifact - Artifact related to the citation record.
# + versionAlgorithmCoding - Indicates the mechanism used to compare versions to determine which is more current.
# + effectivePeriod - The period during which the citation record content was or is planned to be in active use.
# + citedArtifact - The article or artifact being described.
# + author - Who authored or created the citation record.
# + reviewer - Who reviewed the citation record.
# + classification - The assignment to an organizing scheme.
# + 'version - The identifier that is used to identify this version of the citation record when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the citation record author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
# + url - An absolute URI that is used to identify this citation record when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this summary is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the summary is stored on different servers.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + copyrightLabel - A short string (<50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. 'All rights reserved', 'Some rights reserved').
# + lastReviewDate - The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - A natural language name identifying the citation record. This name should be usable as an identifier for the module by machine processing applications such as code generation.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + publisher - The name of the organization or individual that published the citation record.
# + currentState - The status of the citation record.
# + useContext - The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate citation record instances.
# + status - The status of this summary. Enables tracking the life-cycle of the content.
@r5:ResourceDefinition {
    resourceType: "Citation",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Citation",
    elements: {
        "date" : {
            name: "date",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.date"
        },
        "statusDate" : {
            name: "statusDate",
            dataType: CitationStatusDate,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.statusDate"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.note"
        },
        "copyright" : {
            name: "copyright",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.copyright"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.extension"
        },
        "approvalDate" : {
            name: "approvalDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.approvalDate"
        },
        "purpose" : {
            name: "purpose",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.purpose"
        },
        "jurisdiction" : {
            name: "jurisdiction",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.jurisdiction",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.modifierExtension"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.description"
        },
        "experimental" : {
            name: "experimental",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.experimental"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "title" : {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.title"
        },
        "versionAlgorithmString" : {
            name: "versionAlgorithmString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.contact"
        },
        "endorser" : {
            name: "endorser",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.endorser"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.text"
        },
        "summary" : {
            name: "summary",
            dataType: CitationSummary,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.summary"
        },
        "editor" : {
            name: "editor",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.editor"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.identifier"
        },
        "relatedArtifact" : {
            name: "relatedArtifact",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.relatedArtifact"
        },
        "versionAlgorithmCoding" : {
            name: "versionAlgorithmCoding",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.effectivePeriod"
        },
        "citedArtifact" : {
            name: "citedArtifact",
            dataType: CitationCitedArtifact,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.citedArtifact"
        },
        "author" : {
            name: "author",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.author"
        },
        "reviewer" : {
            name: "reviewer",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.reviewer"
        },
        "classification" : {
            name: "classification",
            dataType: CitationClassification,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.classification"
        },
        "version" : {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.version"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.url"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.contained"
        },
        "copyrightLabel" : {
            name: "copyrightLabel",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.copyrightLabel"
        },
        "lastReviewDate" : {
            name: "lastReviewDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.lastReviewDate"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.meta"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.implicitRules"
        },
        "publisher" : {
            name: "publisher",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Citation.publisher"
        },
        "currentState" : {
            name: "currentState",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.currentState",
            valueSet: "http://hl7.org/fhir/ValueSet/citation-status-type"
        },
        "useContext" : {
            name: "useContext",
            dataType: r5:UsageContext,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Citation.useContext"
        },
        "status" : {
            name: "status",
            dataType: CitationStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Citation.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Citation record {|
    *r5:DomainResource;

    RESOURCE_NAME_CITATION resourceType = RESOURCE_NAME_CITATION;

    r5:dateTime date?;
    CitationStatusDate[] statusDate?;
    r5:Annotation[] note?;
    r5:markdown copyright?;
    r5:Extension[] extension?;
    r5:date approvalDate?;
    r5:markdown purpose?;
    r5:CodeableConcept[] jurisdiction?;
    r5:Extension[] modifierExtension?;
    r5:markdown description?;
    boolean experimental?;
    r5:code language?;
    string title?;
    string versionAlgorithmString?;
    r5:ContactDetail[] contact?;
    r5:ContactDetail[] endorser?;
    string id?;
    r5:Narrative text?;
    CitationSummary[] summary?;
    r5:ContactDetail[] editor?;
    r5:Identifier[] identifier?;
    r5:RelatedArtifact[] relatedArtifact?;
    r5:Coding versionAlgorithmCoding?;
    r5:Period effectivePeriod?;
    CitationCitedArtifact citedArtifact?;
    r5:ContactDetail[] author?;
    r5:ContactDetail[] reviewer?;
    CitationClassification[] classification?;
    string 'version?;
    r5:uri url?;
    r5:Resource[] contained?;
    string copyrightLabel?;
    r5:date lastReviewDate?;
    r5:Meta meta?;
    string name?;
    r5:uri implicitRules?;
    string publisher?;
    r5:CodeableConcept[] currentState?;
    r5:UsageContext[] useContext?;
    CitationStatus status;
    r5:Element ...;
|};

# FHIR CitationCitedArtifactContributorshipSummary datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + style - The format for the display string, such as author last name with first letter capitalized followed by forename initials.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - Used to code the producer or rule for creating the display string.
# + 'type - Used most commonly to express an author list or a contributorship statement.
# + value - The display string for the author list, contributor list, or contributorship statement.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactContributorshipSummary",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.contributorship.summary.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.contributorship.summary.modifierExtension"
        },
        "style": {
            name: "style",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The format for the display string, such as author last name with first letter capitalized followed by forename initials.",
            path: "Citation.citedArtifact.contributorship.summary.style"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.contributorship.summary.id"
        },
        "source": {
            name: "source",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used to code the producer or rule for creating the display string.",
            path: "Citation.citedArtifact.contributorship.summary.source"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used most commonly to express an author list or a contributorship statement.",
            path: "Citation.citedArtifact.contributorship.summary.type"
        },
        "value": {
            name: "value",
            dataType: r5:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "The display string for the author list, contributor list, or contributorship statement.",
            path: "Citation.citedArtifact.contributorship.summary.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactContributorshipSummary record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept style?;
    string id?;
    r5:CodeableConcept 'source?;
    r5:CodeableConcept 'type?;
    r5:markdown value;
|};

# FHIR CitationCitedArtifactWebLocation datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + classifier - A characterization of the object expected at the web location.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + url - The specific URL.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactWebLocation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.webLocation.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.webLocation.modifierExtension"
        },
        "classifier": {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A characterization of the object expected at the web location.",
            path: "Citation.citedArtifact.webLocation.classifier"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.webLocation.id"
        },
        "url": {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specific URL.",
            path: "Citation.citedArtifact.webLocation.url"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactWebLocation record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] classifier?;
    string id?;
    r5:uri url?;
|};

# FHIR CitationCitedArtifactPublicationForm datatype record.
#
# + copyright - Copyright notice for the full article or artifact.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + pageCount - Actual or approximate number of pages or screens. Distinct from reporting the page numbers.
# + issue - Issue, part or supplement of journal or other collection in which the article is published.
# + lastPage - Used for isolated representation of last page.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + publicationDateSeason - Spring, Summer, Fall/Autumn, Winter.
# + language - The language or languages in which this form of the article is published.
# + accessionNumber - Entry number or identifier for inclusion in a database.
# + volume - Volume number of journal or other collection in which the article is published.
# + firstPage - Used for isolated representation of first page.
# + publicationDateText - Text representation of the date on which the issue of the cited artifact was published.
# + lastRevisionDate - The date the article was last revised or updated in the database.
# + publishedIn - The collection the cited article or artifact is published in.
# + pageString - Used for full display of pagination.
# + articleDate - The date the article was added to the database, or the date the article was released.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + citedMedium - Describes the form of the medium cited. Common codes are 'Internet' or 'Print'. The CitedMedium value set has 6 codes. The codes internet, print, and offline-digital-storage are the common codes for a typical publication form, though internet and print are more common for study citations. Three additional codes (each appending one of the primary codes with '-without-issue' are used for situations when a study is published both within an issue (of a periodical release as commonly done for journals) AND is published separately from the issue (as commonly done with early online publication), to represent specific identification of the publication form not associated with the issue.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactPublicationForm",
    baseType: (),
    elements: {
        "copyright": {
            name: "copyright",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Copyright notice for the full article or artifact.",
            path: "Citation.citedArtifact.publicationForm.copyright"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.publicationForm.extension"
        },
        "pageCount": {
            name: "pageCount",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Actual or approximate number of pages or screens. Distinct from reporting the page numbers.",
            path: "Citation.citedArtifact.publicationForm.pageCount"
        },
        "issue": {
            name: "issue",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Issue, part or supplement of journal or other collection in which the article is published.",
            path: "Citation.citedArtifact.publicationForm.issue"
        },
        "lastPage": {
            name: "lastPage",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used for isolated representation of last page.",
            path: "Citation.citedArtifact.publicationForm.lastPage"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.publicationForm.modifierExtension"
        },
        "publicationDateSeason": {
            name: "publicationDateSeason",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Spring, Summer, Fall/Autumn, Winter.",
            path: "Citation.citedArtifact.publicationForm.publicationDateSeason"
        },
        "language": {
            name: "language",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The language or languages in which this form of the article is published.",
            path: "Citation.citedArtifact.publicationForm.language"
        },
        "accessionNumber": {
            name: "accessionNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Entry number or identifier for inclusion in a database.",
            path: "Citation.citedArtifact.publicationForm.accessionNumber"
        },
        "volume": {
            name: "volume",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Volume number of journal or other collection in which the article is published.",
            path: "Citation.citedArtifact.publicationForm.volume"
        },
        "firstPage": {
            name: "firstPage",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used for isolated representation of first page.",
            path: "Citation.citedArtifact.publicationForm.firstPage"
        },
        "publicationDateText": {
            name: "publicationDateText",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Text representation of the date on which the issue of the cited artifact was published.",
            path: "Citation.citedArtifact.publicationForm.publicationDateText"
        },
        "lastRevisionDate": {
            name: "lastRevisionDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date the article was last revised or updated in the database.",
            path: "Citation.citedArtifact.publicationForm.lastRevisionDate"
        },
        "publishedIn": {
            name: "publishedIn",
            dataType: CitationCitedArtifactPublicationFormPublishedIn,
            min: 0,
            max: 1,
            isArray: false,
            description: "The collection the cited article or artifact is published in.",
            path: "Citation.citedArtifact.publicationForm.publishedIn"
        },
        "pageString": {
            name: "pageString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used for full display of pagination.",
            path: "Citation.citedArtifact.publicationForm.pageString"
        },
        "articleDate": {
            name: "articleDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date the article was added to the database, or the date the article was released.",
            path: "Citation.citedArtifact.publicationForm.articleDate"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.publicationForm.id"
        },
        "citedMedium": {
            name: "citedMedium",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Describes the form of the medium cited. Common codes are 'Internet' or 'Print'. The CitedMedium value set has 6 codes. The codes internet, print, and offline-digital-storage are the common codes for a typical publication form, though internet and print are more common for study citations. Three additional codes (each appending one of the primary codes with '-without-issue' are used for situations when a study is published both within an issue (of a periodical release as commonly done for journals) AND is published separately from the issue (as commonly done with early online publication), to represent specific identification of the publication form not associated with the issue.",
            path: "Citation.citedArtifact.publicationForm.citedMedium"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactPublicationForm record {|
    *r5:BackboneElement;

    r5:markdown copyright?;
    r5:Extension[] extension?;
    string pageCount?;
    string issue?;
    string lastPage?;
    r5:Extension[] modifierExtension?;
    string publicationDateSeason?;
    r5:CodeableConcept[] language?;
    string accessionNumber?;
    string volume?;
    string firstPage?;
    string publicationDateText?;
    r5:dateTime lastRevisionDate?;
    CitationCitedArtifactPublicationFormPublishedIn publishedIn?;
    string pageString?;
    r5:dateTime articleDate?;
    string id?;
    r5:CodeableConcept citedMedium?;
|};

# FHIR CitationCitedArtifact datatype record.
#
# + statusDate - An effective date or period, historical or future, actual or expected, for a status of the cited artifact.
# + identifier - A formal identifier that is used to identify the cited artifact when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + note - Any additional information or content for the article or artifact.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + relatedIdentifier - A formal identifier that is used to identify things closely related to the cited artifact.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + part - The component of the article or artifact.
# + 'abstract - The abstract may be used to convey article-contained abstracts, externally-created abstracts, or other descriptive summaries.
# + contributorship - This element is used to list authors and other contributors, their contact information, specific contributions, and summary statements.
# + classification - The assignment to an organizing scheme.
# + dateAccessed - When the cited artifact was accessed.
# + title - The title details of the article or artifact.
# + webLocation - Used for any URL for the article or artifact cited.
# + 'version - The defined version of the cited artifact.
# + publicationForm - If multiple, used to represent alternative forms of the article that are not separate citations.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + currentState - The status of the cited artifact.
# + relatesTo - The artifact related to the cited artifact.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifact",
    baseType: (),
    elements: {
        "statusDate": {
            name: "statusDate",
            dataType: CitationCitedArtifactStatusDate,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An effective date or period, historical or future, actual or expected, for a status of the cited artifact.",
            path: "Citation.citedArtifact.statusDate"
        },
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A formal identifier that is used to identify the cited artifact when it is represented in other formats, or referenced in a specification, model, design or an instance.",
            path: "Citation.citedArtifact.identifier"
        },
        "note": {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Any additional information or content for the article or artifact.",
            path: "Citation.citedArtifact.note"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.extension"
        },
        "relatedIdentifier": {
            name: "relatedIdentifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A formal identifier that is used to identify things closely related to the cited artifact.",
            path: "Citation.citedArtifact.relatedIdentifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.modifierExtension"
        },
        "part": {
            name: "part",
            dataType: CitationCitedArtifactPart,
            min: 0,
            max: 1,
            isArray: false,
            description: "The component of the article or artifact.",
            path: "Citation.citedArtifact.part"
        },
        "abstract": {
            name: "abstract",
            dataType: CitationCitedArtifactAbstract,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The abstract may be used to convey article-contained abstracts, externally-created abstracts, or other descriptive summaries.",
            path: "Citation.citedArtifact.abstract"
        },
        "contributorship": {
            name: "contributorship",
            dataType: CitationCitedArtifactContributorship,
            min: 0,
            max: 1,
            isArray: false,
            description: "This element is used to list authors and other contributors, their contact information, specific contributions, and summary statements.",
            path: "Citation.citedArtifact.contributorship"
        },
        "classification": {
            name: "classification",
            dataType: CitationCitedArtifactClassification,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The assignment to an organizing scheme.",
            path: "Citation.citedArtifact.classification"
        },
        "dateAccessed": {
            name: "dateAccessed",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the cited artifact was accessed.",
            path: "Citation.citedArtifact.dateAccessed"
        },
        "title": {
            name: "title",
            dataType: CitationCitedArtifactTitle,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The title details of the article or artifact.",
            path: "Citation.citedArtifact.title"
        },
        "webLocation": {
            name: "webLocation",
            dataType: CitationCitedArtifactWebLocation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Used for any URL for the article or artifact cited.",
            path: "Citation.citedArtifact.webLocation"
        },
        "version": {
            name: "version",
            dataType: CitationCitedArtifactVersion,
            min: 0,
            max: 1,
            isArray: false,
            description: "The defined version of the cited artifact.",
            path: "Citation.citedArtifact.version"
        },
        "publicationForm": {
            name: "publicationForm",
            dataType: CitationCitedArtifactPublicationForm,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "If multiple, used to represent alternative forms of the article that are not separate citations.",
            path: "Citation.citedArtifact.publicationForm"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.id"
        },
        "currentState": {
            name: "currentState",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The status of the cited artifact.",
            path: "Citation.citedArtifact.currentState"
        },
        "relatesTo": {
            name: "relatesTo",
            dataType: CitationCitedArtifactRelatesTo,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The artifact related to the cited artifact.",
            path: "Citation.citedArtifact.relatesTo"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifact record {|
    *r5:BackboneElement;

    CitationCitedArtifactStatusDate[] statusDate?;
    r5:Identifier[] identifier?;
    r5:Annotation[] note?;
    r5:Extension[] extension?;
    r5:Identifier[] relatedIdentifier?;
    r5:Extension[] modifierExtension?;
    CitationCitedArtifactPart part?;
    CitationCitedArtifactAbstract[] 'abstract?;
    CitationCitedArtifactContributorship contributorship?;
    CitationCitedArtifactClassification[] classification?;
    r5:dateTime dateAccessed?;
    CitationCitedArtifactTitle[] title?;
    CitationCitedArtifactWebLocation[] webLocation?;
    CitationCitedArtifactVersion 'version?;
    CitationCitedArtifactPublicationForm[] publicationForm?;
    string id?;
    r5:CodeableConcept[] currentState?;
    CitationCitedArtifactRelatesTo[] relatesTo?;
|};

# FHIR CitationCitedArtifactPart datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + baseCitation - The citation for the full article or artifact.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The kind of component.
# + value - The specification of the component.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactPart",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.part.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.part.modifierExtension"
        },
        "baseCitation": {
            name: "baseCitation",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The citation for the full article or artifact.",
            path: "Citation.citedArtifact.part.baseCitation"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.part.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The kind of component.",
            path: "Citation.citedArtifact.part.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The specification of the component.",
            path: "Citation.citedArtifact.part.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactPart record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Reference baseCitation?;
    string id?;
    r5:CodeableConcept 'type?;
    string value?;
|};

# FHIR CitationCitedArtifactStatusDate datatype record.
#
# + actual - Either occurred or expected.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - When the status started and/or ended.
# + activity - A definition of the status associated with a date or period.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactStatusDate",
    baseType: (),
    elements: {
        "actual": {
            name: "actual",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either occurred or expected.",
            path: "Citation.citedArtifact.statusDate.actual"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.statusDate.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the status started and/or ended.",
            path: "Citation.citedArtifact.statusDate.period"
        },
        "activity": {
            name: "activity",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A definition of the status associated with a date or period.",
            path: "Citation.citedArtifact.statusDate.activity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.statusDate.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.statusDate.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactStatusDate record {|
    *r5:BackboneElement;

    boolean actual?;
    r5:Extension[] extension?;
    r5:Period period;
    r5:CodeableConcept activity;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR CitationCitedArtifactClassification datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + classifier - The specific classification value.
# + artifactAssessment - Complex or externally created classification.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The kind of classifier (e.g. publication type, keyword).
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactClassification",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.classification.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.classification.modifierExtension"
        },
        "classifier": {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The specific classification value.",
            path: "Citation.citedArtifact.classification.classifier"
        },
        "artifactAssessment": {
            name: "artifactAssessment",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Complex or externally created classification.",
            path: "Citation.citedArtifact.classification.artifactAssessment"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.classification.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The kind of classifier (e.g. publication type, keyword).",
            path: "Citation.citedArtifact.classification.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactClassification record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] classifier?;
    r5:Reference[] artifactAssessment?;
    string id?;
    r5:CodeableConcept 'type?;
|};

# FHIR CitationCitedArtifactVersion datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + baseCitation - Citation for the main version of the cited artifact.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + value - The version number or other version identifier.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactVersion",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.version.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.version.modifierExtension"
        },
        "baseCitation": {
            name: "baseCitation",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Citation for the main version of the cited artifact.",
            path: "Citation.citedArtifact.version.baseCitation"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.version.id"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The version number or other version identifier.",
            path: "Citation.citedArtifact.version.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactVersion record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Reference baseCitation?;
    string id?;
    string value;
|};

# FHIR CitationCitedArtifactAbstract datatype record.
#
# + copyright - Copyright notice for the abstract.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - Used to express the specific language of the abstract.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - Abstract content.
# + 'type - Used to express the reason for or classification of the abstract.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactAbstract",
    baseType: (),
    elements: {
        "copyright": {
            name: "copyright",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Copyright notice for the abstract.",
            path: "Citation.citedArtifact.abstract.copyright"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.abstract.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.abstract.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used to express the specific language of the abstract.",
            path: "Citation.citedArtifact.abstract.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.abstract.id"
        },
        "text": {
            name: "text",
            dataType: r5:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Abstract content.",
            path: "Citation.citedArtifact.abstract.text"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used to express the reason for or classification of the abstract.",
            path: "Citation.citedArtifact.abstract.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactAbstract record {|
    *r5:BackboneElement;

    r5:markdown copyright?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept language?;
    string id?;
    r5:markdown text;
    r5:CodeableConcept 'type?;
|};

# FHIR CitationCitedArtifactPublicationFormPublishedIn datatype record.
#
# + identifier - Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID; Book identifiers include ISBN.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + publisher - Name of or resource describing the publisher.
# + publisherLocation - Geographic location of the publisher.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + title - Name of the database or title of the book or journal.
# + 'type - Kind of container (e.g. Periodical, database, or book).
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactPublicationFormPublishedIn",
    baseType: (),
    elements: {
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID; Book identifiers include ISBN.",
            path: "Citation.citedArtifact.publicationForm.publishedIn.identifier"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.publicationForm.publishedIn.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.publicationForm.publishedIn.modifierExtension"
        },
        "publisher": {
            name: "publisher",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Name of or resource describing the publisher.",
            path: "Citation.citedArtifact.publicationForm.publishedIn.publisher"
        },
        "publisherLocation": {
            name: "publisherLocation",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Geographic location of the publisher.",
            path: "Citation.citedArtifact.publicationForm.publishedIn.publisherLocation"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.publicationForm.publishedIn.id"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Name of the database or title of the book or journal.",
            path: "Citation.citedArtifact.publicationForm.publishedIn.title"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Kind of container (e.g. Periodical, database, or book).",
            path: "Citation.citedArtifact.publicationForm.publishedIn.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactPublicationFormPublishedIn record {|
    *r5:BackboneElement;

    r5:Identifier[] identifier?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Reference publisher?;
    string publisherLocation?;
    string id?;
    string title?;
    r5:CodeableConcept 'type?;
|};

# FHIR CitationCitedArtifactContributorshipEntry datatype record.
#
# + contributionType - This element identifies the specific nature of an individual’s contribution with respect to the cited work.
# + contributionInstance - Contributions with accounting for time or number.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + contributor - The identity of the individual contributor.
# + role - The role of the contributor (e.g. author, editor, reviewer, funder).
# + affiliation - Organization affiliated with the contributor.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + forenameInitials - For citation styles that use initials.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + correspondingContact - Whether the contributor is the corresponding contributor for the role.
# + rankingOrder - Provides a numerical ranking to represent the degree of contributorship relative to other contributors, such as 1 for first author and 2 for second author.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactContributorshipEntry",
    baseType: (),
    elements: {
        "contributionType": {
            name: "contributionType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "This element identifies the specific nature of an individual’s contribution with respect to the cited work.",
            path: "Citation.citedArtifact.contributorship.entry.contributionType"
        },
        "contributionInstance": {
            name: "contributionInstance",
            dataType: CitationCitedArtifactContributorshipEntryContributionInstance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Contributions with accounting for time or number.",
            path: "Citation.citedArtifact.contributorship.entry.contributionInstance"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.contributorship.entry.extension"
        },
        "contributor": {
            name: "contributor",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identity of the individual contributor.",
            path: "Citation.citedArtifact.contributorship.entry.contributor"
        },
        "role": {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The role of the contributor (e.g. author, editor, reviewer, funder).",
            path: "Citation.citedArtifact.contributorship.entry.role"
        },
        "affiliation": {
            name: "affiliation",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Organization affiliated with the contributor.",
            path: "Citation.citedArtifact.contributorship.entry.affiliation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.contributorship.entry.modifierExtension"
        },
        "forenameInitials": {
            name: "forenameInitials",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "For citation styles that use initials.",
            path: "Citation.citedArtifact.contributorship.entry.forenameInitials"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.contributorship.entry.id"
        },
        "correspondingContact": {
            name: "correspondingContact",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether the contributor is the corresponding contributor for the role.",
            path: "Citation.citedArtifact.contributorship.entry.correspondingContact"
        },
        "rankingOrder": {
            name: "rankingOrder",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides a numerical ranking to represent the degree of contributorship relative to other contributors, such as 1 for first author and 2 for second author.",
            path: "Citation.citedArtifact.contributorship.entry.rankingOrder"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactContributorshipEntry record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] contributionType?;
    CitationCitedArtifactContributorshipEntryContributionInstance[] contributionInstance?;
    r5:Extension[] extension?;
    r5:Reference contributor;
    r5:CodeableConcept role?;
    r5:Reference[] affiliation?;
    r5:Extension[] modifierExtension?;
    string forenameInitials?;
    string id?;
    boolean correspondingContact?;
    r5:positiveInt rankingOrder?;
|};

# FHIR CitationCitedArtifactContributorship datatype record.
#
# + summary - Used to record a display of the author/contributor list without separate data element for each list member.
# + entry - An individual entity named as a contributor, for example in the author list or contributor list.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + complete - Indicates if the list includes all authors and/or contributors.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactContributorship",
    baseType: (),
    elements: {
        "summary": {
            name: "summary",
            dataType: CitationCitedArtifactContributorshipSummary,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Used to record a display of the author/contributor list without separate data element for each list member.",
            path: "Citation.citedArtifact.contributorship.summary"
        },
        "entry": {
            name: "entry",
            dataType: CitationCitedArtifactContributorshipEntry,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An individual entity named as a contributor, for example in the author list or contributor list.",
            path: "Citation.citedArtifact.contributorship.entry"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.contributorship.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.contributorship.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.contributorship.id"
        },
        "complete": {
            name: "complete",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates if the list includes all authors and/or contributors.",
            path: "Citation.citedArtifact.contributorship.complete"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactContributorship record {|
    *r5:BackboneElement;

    CitationCitedArtifactContributorshipSummary[] summary?;
    CitationCitedArtifactContributorshipEntry[] entry?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    boolean complete?;
|};

# FHIR CitationCitedArtifactTitle datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - Used to express the specific language of the title.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The title of the article or artifact.
# + 'type - Used to express the reason for or classification of the title.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactTitle",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.title.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.title.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Used to express the specific language of the title.",
            path: "Citation.citedArtifact.title.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.title.id"
        },
        "text": {
            name: "text",
            dataType: r5:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "The title of the article or artifact.",
            path: "Citation.citedArtifact.title.text"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Used to express the reason for or classification of the title.",
            path: "Citation.citedArtifact.title.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactTitle record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept language?;
    string id?;
    r5:markdown text;
    r5:CodeableConcept[] 'type?;
|};

# CitationCitedArtifactRelatesToType enum
public enum CitationCitedArtifactRelatesToType {
   CODE_TYPE_SUCCESSOR = "successor",
   CODE_TYPE_COMMENT_IN = "comment-in",
   CODE_TYPE_REPRINT_OF = "reprint-of",
   CODE_TYPE_CITED_BY = "cited-by",
   CODE_TYPE_RETRACTED_BY = "retracted-by",
   CODE_TYPE_TRANSFORMED_INTO = "transformed-into",
   CODE_TYPE_DOCUMENTS = "documents",
   CODE_TYPE_SPECIFICATION_OF = "specification-of",
   CODE_TYPE_TRANSFORMS = "transforms",
   CODE_TYPE_DERIVED_FROM = "derived-from",
   CODE_TYPE_PART_OF = "part-of",
   CODE_TYPE_SUPPORTED_WITH = "supported-with",
   CODE_TYPE_PREDECESSOR = "predecessor",
   CODE_TYPE_COMPOSED_OF = "composed-of",
   CODE_TYPE_DEPENDS_ON = "depends-on",
   CODE_TYPE_AMENDS = "amends",
   CODE_TYPE_RETRACTS = "retracts",
   CODE_TYPE_SIGNS = "signs",
   CODE_TYPE_CORRECTION_IN = "correction-in",
   CODE_TYPE_AMENDED_WITH = "amended-with",
   CODE_TYPE_CITES = "cites",
   CODE_TYPE_SUPPORTS = "supports",
   CODE_TYPE_JUSTIFICATION = "justification",
   CODE_TYPE_CONTAINED_IN = "contained-in",
   CODE_TYPE_REPLACED_WITH = "replaced-with",
   CODE_TYPE_CITATION = "citation",
   CODE_TYPE_TRANSFORMED_WITH = "transformed-with",
   CODE_TYPE_REPRINT = "reprint",
   CODE_TYPE_REPLACES = "replaces",
   CODE_TYPE_DOCUMENTATION = "documentation",
   CODE_TYPE_SIMILAR_TO = "similar-to",
   CODE_TYPE_APPENDS = "appends",
   CODE_TYPE_CREATED_WITH = "created-with",
   CODE_TYPE_CORRECTS = "corrects",
   CODE_TYPE_CITE_AS = "cite-as",
   CODE_TYPE_CONTAINS = "contains",
   CODE_TYPE_APPENDED_WITH = "appended-with",
   CODE_TYPE_COMMENTS_ON = "comments-on"
}

# FHIR CitationClassification datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + classifier - The specific classification value.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The kind of classifier (e.g. publication type, keyword).
@r5:DataTypeDefinition {
    name: "CitationClassification",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.classification.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.classification.modifierExtension"
        },
        "classifier": {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The specific classification value.",
            path: "Citation.classification.classifier"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.classification.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The kind of classifier (e.g. publication type, keyword).",
            path: "Citation.classification.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationClassification record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] classifier?;
    string id?;
    r5:CodeableConcept 'type?;
|};

# CitationStatus enum
public enum CitationStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR CitationStatusDate datatype record.
#
# + actual - Whether the status date is actual (has occurred) or expected (estimated or anticipated).
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - When the status started and/or ended.
# + activity - The state or status of the citation record (that will be paired with the period).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "CitationStatusDate",
    baseType: (),
    elements: {
        "actual": {
            name: "actual",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether the status date is actual (has occurred) or expected (estimated or anticipated).",
            path: "Citation.statusDate.actual"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.statusDate.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the status started and/or ended.",
            path: "Citation.statusDate.period"
        },
        "activity": {
            name: "activity",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The state or status of the citation record (that will be paired with the period).",
            path: "Citation.statusDate.activity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.statusDate.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.statusDate.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationStatusDate record {|
    *r5:BackboneElement;

    boolean actual?;
    r5:Extension[] extension?;
    r5:Period period;
    r5:CodeableConcept activity;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR CitationCitedArtifactContributorshipEntryContributionInstance datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + time - The time that the contribution was made.
# + 'type - The specific contribution.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactContributorshipEntryContributionInstance",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.contributorship.entry.contributionInstance.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.contributorship.entry.contributionInstance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.contributorship.entry.contributionInstance.id"
        },
        "time": {
            name: "time",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The time that the contribution was made.",
            path: "Citation.citedArtifact.contributorship.entry.contributionInstance.time"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The specific contribution.",
            path: "Citation.citedArtifact.contributorship.entry.contributionInstance.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactContributorshipEntryContributionInstance record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:dateTime time?;
    r5:CodeableConcept 'type;
|};

# FHIR CitationCitedArtifactRelatesTo datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + citation - A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.
# + 'resource - The related artifact, such as a library, value set, profile, or other knowledge resource.
# + display - A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.
# + document - The document being referenced, represented as an attachment. Do not use this element if using the resource element to provide the canonical to the related artifact.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + classifier - Provides additional classifiers of the related artifact.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + label - A short label that can be used to reference the related artifact from elsewhere in the containing artifact, such as a footnote index.
# + 'type - The type of relationship to the related artifact.
# + resourceReference - The related artifact, if the artifact is not a canonical resource, or a resource reference to a canonical resource.
@r5:DataTypeDefinition {
    name: "CitationCitedArtifactRelatesTo",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.citedArtifact.relatesTo.extension"
        },
        "citation": {
            name: "citation",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.",
            path: "Citation.citedArtifact.relatesTo.citation"
        },
        "resource": {
            name: "resource",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "The related artifact, such as a library, value set, profile, or other knowledge resource.",
            path: "Citation.citedArtifact.relatesTo.resource"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.",
            path: "Citation.citedArtifact.relatesTo.display"
        },
        "document": {
            name: "document",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "The document being referenced, represented as an attachment. Do not use this element if using the resource element to provide the canonical to the related artifact.",
            path: "Citation.citedArtifact.relatesTo.document"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.citedArtifact.relatesTo.modifierExtension"
        },
        "classifier": {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Provides additional classifiers of the related artifact.",
            path: "Citation.citedArtifact.relatesTo.classifier"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.citedArtifact.relatesTo.id"
        },
        "label": {
            name: "label",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short label that can be used to reference the related artifact from elsewhere in the containing artifact, such as a footnote index.",
            path: "Citation.citedArtifact.relatesTo.label"
        },
        "type": {
            name: "type",
            dataType: CitationCitedArtifactRelatesToType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of relationship to the related artifact.",
            path: "Citation.citedArtifact.relatesTo.type"
        },
        "resourceReference": {
            name: "resourceReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The related artifact, if the artifact is not a canonical resource, or a resource reference to a canonical resource.",
            path: "Citation.citedArtifact.relatesTo.resourceReference"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationCitedArtifactRelatesTo record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:markdown citation?;
    r5:canonical 'resource?;
    string display?;
    r5:Attachment document?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] classifier?;
    string id?;
    string label?;
    CitationCitedArtifactRelatesToType 'type;
    r5:Reference resourceReference?;
|};

# FHIR CitationSummary datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + style - Format for display of the citation summary.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The human-readable display of the citation summary.
@r5:DataTypeDefinition {
    name: "CitationSummary",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Citation.summary.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Citation.summary.modifierExtension"
        },
        "style": {
            name: "style",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Format for display of the citation summary.",
            path: "Citation.summary.style"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Citation.summary.id"
        },
        "text": {
            name: "text",
            dataType: r5:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "The human-readable display of the citation summary.",
            path: "Citation.summary.text"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type CitationSummary record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept style?;
    string id?;
    r5:markdown text;
|};

