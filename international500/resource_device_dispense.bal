// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_DEVICEDISPENSE = "http://hl7.org/fhir/StructureDefinition/DeviceDispense";
public const RESOURCE_NAME_DEVICEDISPENSE = "DeviceDispense";

# FHIR DeviceDispense resource record.
#
# + resourceType - The type of the resource describes
# + note - Extra information about the dispense that could not be conveyed in the other attributes.
# + partOf - The bigger event that this dispense is a part of.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + preparedDate - The time when the dispensed product was packaged and reviewed.
# + subject - A link to a resource representing the person to whom the device is intended.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + destination - Identification of the facility/location where the device was /should be shipped to, as part of the dispense process.
# + language - The base language in which the resource is written.
# + 'type - Indicates the type of dispensing event that is performed.
# + statusReason - Indicates the reason why a dispense was or was not performed.
# + usageInstruction - The full representation of the instructions.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + basedOn - The order or request that this dispense is fulfilling.
# + identifier - Business identifier for this dispensation.
# + performer - Indicates who or what performed the event.
# + quantity - The number of devices that have been dispensed.
# + receiver - Identifies the person who picked up the device or the person or location where the device was delivered. This may be a patient or their caregiver, but some cases exist where it can be a healthcare professional or a location.
# + supportingInformation - Additional information that supports the device being dispensed.
# + whenHandedOver - The time the dispensed product was made available to the patient or their representative.
# + encounter - The encounter that establishes the context for this event.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + eventHistory - A summary of the events of interest that have occurred, such as when the dispense was verified.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + location - The principal physical location where the dispense was performed.
# + category - Indicates the type of device dispense.
# + device - Identifies the device being dispensed. This is either a link to a resource representing the details of the device or a simple attribute carrying a code that identifies the device from a known list of devices.
# + status - A code specifying the state of the set of dispense events.
@r5:ResourceDefinition {
    resourceType: "DeviceDispense",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/DeviceDispense",
    elements: {
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.partOf"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.extension"
        },
        "preparedDate" : {
            name: "preparedDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.preparedDate"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "DeviceDispense.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.modifierExtension"
        },
        "destination" : {
            name: "destination",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.destination"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.type"
        },
        "statusReason" : {
            name: "statusReason",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.statusReason",
            valueSet: "http://hl7.org/fhir/ValueSet/devicedispense-status-reason"
        },
        "usageInstruction" : {
            name: "usageInstruction",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.usageInstruction"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.text"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.basedOn"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.identifier"
        },
        "performer" : {
            name: "performer",
            dataType: DeviceDispensePerformer,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.performer"
        },
        "quantity" : {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.quantity"
        },
        "receiver" : {
            name: "receiver",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.receiver"
        },
        "supportingInformation" : {
            name: "supportingInformation",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.supportingInformation"
        },
        "whenHandedOver" : {
            name: "whenHandedOver",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.whenHandedOver"
        },
        "encounter" : {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.encounter"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.meta"
        },
        "eventHistory" : {
            name: "eventHistory",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.eventHistory"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.implicitRules"
        },
        "location" : {
            name: "location",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "DeviceDispense.location"
        },
        "category" : {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "DeviceDispense.category"
        },
        "device" : {
            name: "device",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            path: "DeviceDispense.device"
        },
        "status" : {
            name: "status",
            dataType: DeviceDispenseStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "DeviceDispense.status",
            valueSet: "http://hl7.org/fhir/ValueSet/devicedispense-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type DeviceDispense record {|
    *r5:DomainResource;

    RESOURCE_NAME_DEVICEDISPENSE resourceType = RESOURCE_NAME_DEVICEDISPENSE;

    r5:Annotation[] note?;
    r5:Reference[] partOf?;
    r5:Extension[] extension?;
    r5:dateTime preparedDate?;
    r5:Reference subject;
    r5:Extension[] modifierExtension?;
    r5:Reference destination?;
    r5:code language?;
    r5:CodeableConcept 'type?;
    r5:CodeableReference statusReason?;
    r5:markdown usageInstruction?;
    string id?;
    r5:Narrative text?;
    r5:Reference[] basedOn?;
    r5:Identifier[] identifier?;
    DeviceDispensePerformer[] performer?;
    r5:SimpleQuantity quantity?;
    r5:Reference receiver?;
    r5:Reference[] supportingInformation?;
    r5:dateTime whenHandedOver?;
    r5:Reference encounter?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    r5:Reference[] eventHistory?;
    r5:uri implicitRules?;
    r5:Reference location?;
    r5:CodeableConcept[] category?;
    r5:CodeableReference device;
    DeviceDispenseStatus status;
    r5:Element ...;
|};

# FHIR DeviceDispensePerformer datatype record.
#
# + actor - The device, practitioner, etc. who performed the action. It should be assumed that the actor is the dispenser of the device.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + 'function - Distinguishes the type of performer in the dispense. For example, date enterer, packager, final checker.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "DeviceDispensePerformer",
    baseType: (),
    elements: {
        "actor": {
            name: "actor",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The device, practitioner, etc. who performed the action. It should be assumed that the actor is the dispenser of the device.",
            path: "DeviceDispense.performer.actor"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "DeviceDispense.performer.extension"
        },
        "function": {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Distinguishes the type of performer in the dispense. For example, date enterer, packager, final checker.",
            path: "DeviceDispense.performer.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "DeviceDispense.performer.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "DeviceDispense.performer.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type DeviceDispensePerformer record {|
    *r5:BackboneElement;

    r5:Reference actor;
    r5:Extension[] extension?;
    r5:CodeableConcept 'function?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# DeviceDispenseStatus enum
public enum DeviceDispenseStatus {
   CODE_STATUS_STOPPED = "stopped",
   CODE_STATUS_DECLINED = "declined",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_COMPLETED = "completed",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_IN_PROGRESS = "in-progress",
   CODE_STATUS_ON_HOLD = "on-hold",
   CODE_STATUS_PREPARATION = "preparation",
   CODE_STATUS_UNKNOWN = "unknown"
}

