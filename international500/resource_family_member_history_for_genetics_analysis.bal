// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_FAMILYMEMBERHISTORYFORGENETICSANALYSIS = "http://hl7.org/fhir/StructureDefinition/familymemberhistory-genetic";
public const RESOURCE_NAME_FAMILYMEMBERHISTORYFORGENETICSANALYSIS = "FamilyMemberHistory";

# FHIR FamilyMemberHistoryForGeneticsAnalysis resource record.
#
# + resourceType - The type of the resource describes
# + ageRange - The age of the relative at the time the family member history is recorded.
# + date - The date (and possibly time) when the family member history was recorded or last updated.
# + dataAbsentReason - Describes why the family member's history is not available.
# + note - This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible.
# + reason - Describes why the family member history occurred in coded or textual form, or Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event.
# + extension - An Extension
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + bornString - The actual or approximate date of birth of the relative.
# + instantiatesUri - The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.
# + participant - Indicates who or what participated in the activities related to the family member history and how they were involved.
# + estimatedAge - If true, indicates that the age value specified is an estimated value.
# + patient - The person who this history concerns.
# + deceasedRange - Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + relationship - The type of relationship this person has to the patient (father, mother, brother etc.).
# + ageAge - The age of the relative at the time the family member history is recorded.
# + identifier - Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
# + ageString - The age of the relative at the time the family member history is recorded.
# + sex - The birth sex of the family member.
# + bornDate - The actual or approximate date of birth of the relative.
# + procedure - The significant Procedures (or procedure) that the family member had. This is a repeating section to allow a system to represent more than one procedure per resource, though there is nothing stopping multiple resources - one per procedure.
# + instantiatesCanonical - The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.
# + bornPeriod - The actual or approximate date of birth of the relative.
# + condition - The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + deceasedBoolean - Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.
# + deceasedString - Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - This will either be a name or a description; e.g. 'Aunt Susan', 'my cousin with the red hair'.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + deceasedDate - Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.
# + deceasedAge - Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.
# + status - A code specifying the status of the record of the family history of a specific family member.
@r5:ResourceDefinition {
    resourceType: "FamilyMemberHistory",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/familymemberhistory-genetic",
    elements: {
        "ageRange" : {
            name: "ageRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.age[x]"
        },
        "date" : {
            name: "date",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.date"
        },
        "dataAbsentReason" : {
            name: "dataAbsentReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.dataAbsentReason",
            valueSet: "http://hl7.org/fhir/ValueSet/history-absent-reason"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.note"
        },
        "reason" : {
            name: "reason",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.reason",
            valueSet: "http://hl7.org/fhir/ValueSet/clinical-findings"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.extension"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "bornString" : {
            name: "bornString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.born[x]"
        },
        "instantiatesUri" : {
            name: "instantiatesUri",
            dataType: r5:uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.instantiatesUri"
        },
        "participant" : {
            name: "participant",
            dataType: FamilyMemberHistoryForGeneticsAnalysisParticipant,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.participant"
        },
        "estimatedAge" : {
            name: "estimatedAge",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.estimatedAge"
        },
        "patient" : {
            name: "patient",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.patient"
        },
        "deceasedRange" : {
            name: "deceasedRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.deceased[x]"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.text"
        },
        "relationship" : {
            name: "relationship",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.relationship",
            valueSet: "http://terminology.hl7.org/ValueSet/v3-FamilyMember"
        },
        "ageAge" : {
            name: "ageAge",
            dataType: r5:Age,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.age[x]"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.identifier"
        },
        "ageString" : {
            name: "ageString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.age[x]"
        },
        "sex" : {
            name: "sex",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.sex",
            valueSet: "http://hl7.org/fhir/ValueSet/administrative-gender"
        },
        "bornDate" : {
            name: "bornDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.born[x]"
        },
        "procedure" : {
            name: "procedure",
            dataType: FamilyMemberHistoryForGeneticsAnalysisProcedure,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.procedure"
        },
        "instantiatesCanonical" : {
            name: "instantiatesCanonical",
            dataType: r5:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.instantiatesCanonical"
        },
        "bornPeriod" : {
            name: "bornPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.born[x]"
        },
        "condition" : {
            name: "condition",
            dataType: FamilyMemberHistoryForGeneticsAnalysisCondition,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.condition"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "FamilyMemberHistory.contained"
        },
        "deceasedBoolean" : {
            name: "deceasedBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.deceased[x]"
        },
        "deceasedString" : {
            name: "deceasedString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.deceased[x]"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.meta"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.implicitRules"
        },
        "deceasedDate" : {
            name: "deceasedDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.deceased[x]"
        },
        "deceasedAge" : {
            name: "deceasedAge",
            dataType: r5:Age,
            min: 0,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.deceased[x]"
        },
        "status" : {
            name: "status",
            dataType: FamilyMemberHistoryForGeneticsAnalysisStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "FamilyMemberHistory.status",
            valueSet: "http://hl7.org/fhir/ValueSet/history-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type FamilyMemberHistoryForGeneticsAnalysis record {|
    *r5:DomainResource;

    RESOURCE_NAME_FAMILYMEMBERHISTORYFORGENETICSANALYSIS resourceType = RESOURCE_NAME_FAMILYMEMBERHISTORYFORGENETICSANALYSIS;

    r5:Range ageRange?;
    r5:dateTime date?;
    r5:CodeableConcept dataAbsentReason?;
    r5:Annotation[] note?;
    r5:CodeableReference[] reason?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    string bornString?;
    r5:uri[] instantiatesUri?;
    FamilyMemberHistoryForGeneticsAnalysisParticipant[] participant?;
    boolean estimatedAge?;
    r5:Reference patient;
    r5:Range deceasedRange?;
    string id?;
    r5:Narrative text?;
    r5:CodeableConcept relationship;
    r5:Age ageAge?;
    r5:Identifier[] identifier?;
    string ageString?;
    r5:CodeableConcept sex?;
    r5:date bornDate?;
    FamilyMemberHistoryForGeneticsAnalysisProcedure[] procedure?;
    r5:canonical[] instantiatesCanonical?;
    r5:Period bornPeriod?;
    FamilyMemberHistoryForGeneticsAnalysisCondition[] condition?;
    r5:Resource[] contained?;
    boolean deceasedBoolean?;
    string deceasedString?;
    r5:Meta meta?;
    string name?;
    r5:uri implicitRules?;
    r5:date deceasedDate?;
    r5:Age deceasedAge?;
    FamilyMemberHistoryForGeneticsAnalysisStatus status;
    r5:Element ...;
|};

# FHIR FamilyMemberHistoryForGeneticsAnalysisCondition datatype record.
#
# + contributedToDeath - This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.
# + note - An area where general notes can be placed about this specific condition.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like 'cancer' depending on how much is known about the condition and the capabilities of the creating system.
# + onsetPeriod - Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.
# + onsetRange - Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + onsetString - Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.
# + onsetAge - Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.
# + outcome - Indicates what happened following the condition. If the condition resulted in death, deceased date is captured on the relation.
@r5:DataTypeDefinition {
    name: "FamilyMemberHistoryForGeneticsAnalysisCondition",
    baseType: (),
    elements: {
        "contributedToDeath": {
            name: "contributedToDeath",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.",
            path: "FamilyMemberHistory.condition.contributedToDeath"
        },
        "note": {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An area where general notes can be placed about this specific condition.",
            path: "FamilyMemberHistory.condition.note"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "FamilyMemberHistory.condition.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like 'cancer' depending on how much is known about the condition and the capabilities of the creating system.",
            path: "FamilyMemberHistory.condition.code"
        },
        "onsetPeriod": {
            name: "onsetPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.",
            path: "FamilyMemberHistory.condition.onset[x]"
        },
        "onsetRange": {
            name: "onsetRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.",
            path: "FamilyMemberHistory.condition.onset[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "FamilyMemberHistory.condition.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "FamilyMemberHistory.condition.id"
        },
        "onsetString": {
            name: "onsetString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.",
            path: "FamilyMemberHistory.condition.onset[x]"
        },
        "onsetAge": {
            name: "onsetAge",
            dataType: r5:Age,
            min: 0,
            max: 1,
            isArray: false,
            description: "Either the age of onset, range of approximate age or descriptive string can be recorded. For conditions with multiple occurrences, this describes the first known occurrence.",
            path: "FamilyMemberHistory.condition.onset[x]"
        },
        "outcome": {
            name: "outcome",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates what happened following the condition. If the condition resulted in death, deceased date is captured on the relation.",
            path: "FamilyMemberHistory.condition.outcome"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type FamilyMemberHistoryForGeneticsAnalysisCondition record {|
    *r5:BackboneElement;

    boolean contributedToDeath?;
    r5:Annotation[] note?;
    r5:Extension[] extension?;
    r5:CodeableConcept code;
    r5:Period onsetPeriod?;
    r5:Range onsetRange?;
    r5:Extension[] modifierExtension?;
    string id?;
    string onsetString?;
    r5:Age onsetAge?;
    r5:CodeableConcept outcome?;
|};

# FHIR FamilyMemberHistoryForGeneticsAnalysisParticipant datatype record.
#
# + actor - Indicates who or what participated in the activities related to the family member history.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + 'function - Distinguishes the type of involvement of the actor in the activities related to the family member history.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "FamilyMemberHistoryForGeneticsAnalysisParticipant",
    baseType: (),
    elements: {
        "actor": {
            name: "actor",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates who or what participated in the activities related to the family member history.",
            path: "FamilyMemberHistory.participant.actor"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "FamilyMemberHistory.participant.extension"
        },
        "function": {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Distinguishes the type of involvement of the actor in the activities related to the family member history.",
            path: "FamilyMemberHistory.participant.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "FamilyMemberHistory.participant.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "FamilyMemberHistory.participant.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type FamilyMemberHistoryForGeneticsAnalysisParticipant record {|
    *r5:BackboneElement;

    r5:Reference actor;
    r5:Extension[] extension?;
    r5:CodeableConcept 'function?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR FamilyMemberHistoryForGeneticsAnalysisProcedure datatype record.
#
# + performedString - Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
# + contributedToDeath - This procedure contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.
# + note - An area where general notes can be placed about this specific procedure.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The actual procedure specified. Could be a coded procedure or a less specific string depending on how much is known about the procedure and the capabilities of the creating system.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + performedRange - Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
# + performedDateTime - Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
# + performedAge - Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
# + outcome - Indicates what happened following the procedure. If the procedure resulted in death, deceased date is captured on the relation.
# + performedPeriod - Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
@r5:DataTypeDefinition {
    name: "FamilyMemberHistoryForGeneticsAnalysisProcedure",
    baseType: (),
    elements: {
        "performedString": {
            name: "performedString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
            path: "FamilyMemberHistory.procedure.performed[x]"
        },
        "contributedToDeath": {
            name: "contributedToDeath",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "This procedure contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.",
            path: "FamilyMemberHistory.procedure.contributedToDeath"
        },
        "note": {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An area where general notes can be placed about this specific procedure.",
            path: "FamilyMemberHistory.procedure.note"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "FamilyMemberHistory.procedure.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual procedure specified. Could be a coded procedure or a less specific string depending on how much is known about the procedure and the capabilities of the creating system.",
            path: "FamilyMemberHistory.procedure.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "FamilyMemberHistory.procedure.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "FamilyMemberHistory.procedure.id"
        },
        "performedRange": {
            name: "performedRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
            path: "FamilyMemberHistory.procedure.performed[x]"
        },
        "performedDateTime": {
            name: "performedDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
            path: "FamilyMemberHistory.procedure.performed[x]"
        },
        "performedAge": {
            name: "performedAge",
            dataType: r5:Age,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
            path: "FamilyMemberHistory.procedure.performed[x]"
        },
        "outcome": {
            name: "outcome",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates what happened following the procedure. If the procedure resulted in death, deceased date is captured on the relation.",
            path: "FamilyMemberHistory.procedure.outcome"
        },
        "performedPeriod": {
            name: "performedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated or actual date, date-time, period, or age when the procedure was performed. Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
            path: "FamilyMemberHistory.procedure.performed[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type FamilyMemberHistoryForGeneticsAnalysisProcedure record {|
    *r5:BackboneElement;

    string performedString?;
    boolean contributedToDeath?;
    r5:Annotation[] note?;
    r5:Extension[] extension?;
    r5:CodeableConcept code;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Range performedRange?;
    r5:dateTime performedDateTime?;
    r5:Age performedAge?;
    r5:CodeableConcept outcome?;
    r5:Period performedPeriod?;
|};

# FamilyMemberHistoryForGeneticsAnalysisStatus enum
public enum FamilyMemberHistoryForGeneticsAnalysisStatus {
   CODE_STATUS_COMPLETED = "completed",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_HEALTH_UNKNOWN = "health-unknown",
   CODE_STATUS_PARTIAL = "partial"
}

