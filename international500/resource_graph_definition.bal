// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_GRAPHDEFINITION = "http://hl7.org/fhir/StructureDefinition/GraphDefinition";
public const RESOURCE_NAME_GRAPHDEFINITION = "GraphDefinition";

# FHIR GraphDefinition resource record.
#
# + resourceType - The type of the resource describes
# + date - The date (and optionally time) when the graph definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the graph definition changes.
# + copyright - A copyright statement relating to the graph definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the graph definition.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + purpose - Explanation of why this graph definition is needed and why it has been designed as it has.
# + jurisdiction - A legal or geographic region in which the graph definition is intended to be used.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + link - Links this graph makes rules about.
# + description - A free text natural language description of the graph definition from a consumer's perspective.
# + experimental - A Boolean value to indicate that this graph definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
# + language - The base language in which the resource is written.
# + title - A short, descriptive, user-friendly title for the capability statement.
# + versionAlgorithmString - Indicates the mechanism used to compare versions to determine which is more current.
# + contact - Contact details to assist a user in finding and communicating with the publisher.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + identifier - A formal identifier that is used to identify this GraphDefinition when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + versionAlgorithmCoding - Indicates the mechanism used to compare versions to determine which is more current.
# + 'start - The Node at which instances of this graph start. If there is no nominated start, the graph can start at any of the nodes.
# + 'version - The identifier that is used to identify this version of the graph definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the graph definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
# + url - An absolute URI that is used to identify this graph definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this graph definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the graph definition is stored on different servers.
# + node - Potential target for the link.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + copyrightLabel - A short string (<50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. 'All rights reserved', 'Some rights reserved').
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - A natural language name identifying the graph definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + publisher - The name of the organization or individual responsible for the release and ongoing maintenance of the graph definition.
# + useContext - The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate graph definition instances.
# + status - The status of this graph definition. Enables tracking the life-cycle of the content.
@r5:ResourceDefinition {
    resourceType: "GraphDefinition",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/GraphDefinition",
    elements: {
        "date" : {
            name: "date",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.date"
        },
        "copyright" : {
            name: "copyright",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.copyright"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.extension"
        },
        "purpose" : {
            name: "purpose",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.purpose"
        },
        "jurisdiction" : {
            name: "jurisdiction",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.jurisdiction",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.modifierExtension"
        },
        "link" : {
            name: "link",
            dataType: GraphDefinitionLink,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.link"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.description"
        },
        "experimental" : {
            name: "experimental",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.experimental"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "title" : {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.title"
        },
        "versionAlgorithmString" : {
            name: "versionAlgorithmString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.contact"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.text"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.identifier"
        },
        "versionAlgorithmCoding" : {
            name: "versionAlgorithmCoding",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "start" : {
            name: "start",
            dataType: r5:id,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.start"
        },
        "version" : {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.version"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.url"
        },
        "node" : {
            name: "node",
            dataType: GraphDefinitionNode,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.node"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.contained"
        },
        "copyrightLabel" : {
            name: "copyrightLabel",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.copyrightLabel"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.meta"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            path: "GraphDefinition.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.implicitRules"
        },
        "publisher" : {
            name: "publisher",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "GraphDefinition.publisher"
        },
        "useContext" : {
            name: "useContext",
            dataType: r5:UsageContext,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "GraphDefinition.useContext"
        },
        "status" : {
            name: "status",
            dataType: GraphDefinitionStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "GraphDefinition.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type GraphDefinition record {|
    *r5:DomainResource;

    RESOURCE_NAME_GRAPHDEFINITION resourceType = RESOURCE_NAME_GRAPHDEFINITION;

    r5:dateTime date?;
    r5:markdown copyright?;
    r5:Extension[] extension?;
    r5:markdown purpose?;
    r5:CodeableConcept[] jurisdiction?;
    r5:Extension[] modifierExtension?;
    GraphDefinitionLink[] link?;
    r5:markdown description?;
    boolean experimental?;
    r5:code language?;
    string title?;
    string versionAlgorithmString?;
    r5:ContactDetail[] contact?;
    string id?;
    r5:Narrative text?;
    r5:Identifier[] identifier?;
    r5:Coding versionAlgorithmCoding?;
    r5:id 'start?;
    string 'version?;
    r5:uri url?;
    GraphDefinitionNode[] node?;
    r5:Resource[] contained?;
    string copyrightLabel?;
    r5:Meta meta?;
    string name;
    r5:uri implicitRules?;
    string publisher?;
    r5:UsageContext[] useContext?;
    GraphDefinitionStatus status;
    r5:Element ...;
|};

# GraphDefinitionLinkCompartmentCode enum
public enum GraphDefinitionLinkCompartmentCode {
   CODE_CODE_PRACTITIONER = "Practitioner",
   CODE_CODE_EPISODEOFCARE = "EpisodeOfCare",
   CODE_CODE_DEVICE = "Device",
   CODE_CODE_PATIENT = "Patient",
   CODE_CODE_ENCOUNTER = "Encounter",
   CODE_CODE_RELATEDPERSON = "RelatedPerson"
}

# GraphDefinitionLinkCompartmentRule enum
public enum GraphDefinitionLinkCompartmentRule {
   CODE_RULE_IDENTICAL = "identical",
   CODE_RULE_CUSTOM = "custom",
   CODE_RULE_DIFFERENT = "different",
   CODE_RULE_MATCHING = "matching"
}

# FHIR GraphDefinitionLinkCompartment datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Identifies the compartment.
# + expression - Custom rule, as a FHIRPath expression.
# + use - Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - Documentation for FHIRPath expression.
# + rule - identical | matching | different | no-rule | custom.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "GraphDefinitionLinkCompartment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "GraphDefinition.link.compartment.extension"
        },
        "code": {
            name: "code",
            dataType: GraphDefinitionLinkCompartmentCode,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the compartment.",
            path: "GraphDefinition.link.compartment.code"
        },
        "expression": {
            name: "expression",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Custom rule, as a FHIRPath expression.",
            path: "GraphDefinition.link.compartment.expression"
        },
        "use": {
            name: "use",
            dataType: GraphDefinitionLinkCompartmentUse,
            min: 1,
            max: 1,
            isArray: false,
            description: "Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.",
            path: "GraphDefinition.link.compartment.use"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "GraphDefinition.link.compartment.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Documentation for FHIRPath expression.",
            path: "GraphDefinition.link.compartment.description"
        },
        "rule": {
            name: "rule",
            dataType: GraphDefinitionLinkCompartmentRule,
            min: 1,
            max: 1,
            isArray: false,
            description: "identical | matching | different | no-rule | custom.",
            path: "GraphDefinition.link.compartment.rule"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "GraphDefinition.link.compartment.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type GraphDefinitionLinkCompartment record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    GraphDefinitionLinkCompartmentCode code;
    string expression?;
    GraphDefinitionLinkCompartmentUse use;
    r5:Extension[] modifierExtension?;
    string description?;
    GraphDefinitionLinkCompartmentRule rule;
    string id?;
|};

# FHIR GraphDefinitionLink datatype record.
#
# + sourceId - The source node for this link.
# + path - A FHIRPath expression that identifies one of FHIR References to other resources.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + sliceName - Which slice (if profiled).
# + min - Minimum occurrences for this link.
# + targetId - The target node for this link.
# + max - Maximum occurrences for this link.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + compartment - Compartment Consistency Rules.
# + description - Information about why this link is of interest in this graph definition.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + params - A set of parameters to look up.
@r5:DataTypeDefinition {
    name: "GraphDefinitionLink",
    baseType: (),
    elements: {
        "sourceId": {
            name: "sourceId",
            dataType: r5:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "The source node for this link.",
            path: "GraphDefinition.link.sourceId"
        },
        "path": {
            name: "path",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A FHIRPath expression that identifies one of FHIR References to other resources.",
            path: "GraphDefinition.link.path"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "GraphDefinition.link.extension"
        },
        "sliceName": {
            name: "sliceName",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Which slice (if profiled).",
            path: "GraphDefinition.link.sliceName"
        },
        "min": {
            name: "min",
            dataType: r5:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Minimum occurrences for this link.",
            path: "GraphDefinition.link.min"
        },
        "targetId": {
            name: "targetId",
            dataType: r5:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "The target node for this link.",
            path: "GraphDefinition.link.targetId"
        },
        "max": {
            name: "max",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Maximum occurrences for this link.",
            path: "GraphDefinition.link.max"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "GraphDefinition.link.modifierExtension"
        },
        "compartment": {
            name: "compartment",
            dataType: GraphDefinitionLinkCompartment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Compartment Consistency Rules.",
            path: "GraphDefinition.link.compartment"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Information about why this link is of interest in this graph definition.",
            path: "GraphDefinition.link.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "GraphDefinition.link.id"
        },
        "params": {
            name: "params",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A set of parameters to look up.",
            path: "GraphDefinition.link.params"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type GraphDefinitionLink record {|
    *r5:BackboneElement;

    r5:id sourceId;
    string path?;
    r5:Extension[] extension?;
    string sliceName?;
    r5:integer min?;
    r5:id targetId;
    string max?;
    r5:Extension[] modifierExtension?;
    GraphDefinitionLinkCompartment[] compartment?;
    string description?;
    string id?;
    string params?;
|};

# GraphDefinitionStatus enum
public enum GraphDefinitionStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# GraphDefinitionLinkCompartmentUse enum
public enum GraphDefinitionLinkCompartmentUse {
   CODE_USE_WHERE = "where",
   CODE_USE_REQUIRES = "requires"
}

# FHIR GraphDefinitionNode datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + profile - Profile for the target resource.
# + description - Information about why this node is of interest in this graph definition.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of resource this link refers to.
# + nodeId - Internal ID of node - target for link references.
@r5:DataTypeDefinition {
    name: "GraphDefinitionNode",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "GraphDefinition.node.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "GraphDefinition.node.modifierExtension"
        },
        "profile": {
            name: "profile",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "Profile for the target resource.",
            path: "GraphDefinition.node.profile"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Information about why this node is of interest in this graph definition.",
            path: "GraphDefinition.node.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "GraphDefinition.node.id"
        },
        "type": {
            name: "type",
            dataType: r5:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Type of resource this link refers to.",
            path: "GraphDefinition.node.type"
        },
        "nodeId": {
            name: "nodeId",
            dataType: r5:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Internal ID of node - target for link references.",
            path: "GraphDefinition.node.nodeId"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type GraphDefinitionNode record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:canonical profile?;
    string description?;
    string id?;
    r5:code 'type;
    r5:id nodeId;
|};

