// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_MODELINFOLIBRARY = "http://hl7.org/fhir/StructureDefinition/modelinfolibrary";
public const RESOURCE_NAME_MODELINFOLIBRARY = "Library";

# FHIR ModelInfoLibrary resource record.
#
# + resourceType - The type of the resource describes
# + date - The date (and optionally time) when the library was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the library changes.
# + copyright - A copyright statement relating to the library and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the library.
# + extension - An Extension
# + approvalDate - The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
# + subjectCodeableConcept - A code or group definition that describes the intended subject of the contents of the library.
# + purpose - Explanation of why this library is needed and why it has been designed as it has.
# + jurisdiction - A legal or geographic region in which the library is intended to be used.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + usage - A detailed description of how the library is used from a clinical perspective.
# + description - A free text natural language description of the library from a consumer's perspective.
# + experimental - A Boolean value to indicate that this library is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
# + language - The base language in which the resource is written.
# + title - A short, descriptive, user-friendly title for the library.
# + 'type - Identifies the type of library such as a Logic Library, Model Definition, Asset Collection, or Module Definition.
# + content - The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content.
# * content Slicings
# 1) ModelInfoLibraryContentModelInfoJsonContent: ModelInfo JSON Content
#       - min = 0
#       - max = *
#
# 2) ModelInfoLibraryContentModelInfoXmlContent: ModelInfo XML Content
#       - min = 0
#       - max = *
#
# + versionAlgorithmString - Indicates the mechanism used to compare versions to determine which is more current.
# + contact - Contact details to assist a user in finding and communicating with the publisher.
# + 'parameter - The parameter element defines parameters used by the library.
# + endorser - An individual or organization asserted by the publisher to be responsible for officially endorsing the content for use in some setting.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + editor - An individual or organization primarily responsible for internal coherence of the content.
# + identifier - A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts.
# + relatedArtifact - Related artifacts such as additional documentation, justification, or bibliographic references.
# + versionAlgorithmCoding - Indicates the mechanism used to compare versions to determine which is more current.
# + effectivePeriod - The period during which the library content was or is planned to be in active use.
# + author - An individiual or organization primarily involved in the creation and maintenance of the content.
# + reviewer - An individual or organization asserted by the publisher to be primarily responsible for review of some aspect of the content.
# + subjectReference - A code or group definition that describes the intended subject of the contents of the library.
# + 'version - The identifier that is used to identify this version of the library when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the library author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.
# + url - An absolute URI that is used to identify this library when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this library is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the library is stored on different servers.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + copyrightLabel - A short string (<50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. 'All rights reserved', 'Some rights reserved').
# + lastReviewDate - The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + subtitle - An explanatory or alternate title for the library giving additional information about its content.
# + name - A natural language name identifying the library. This name should be usable as an identifier for the module by machine processing applications such as code generation.
# + dataRequirement - Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + publisher - The name of the organization or individual responsible for the release and ongoing maintenance of the library.
# + topic - Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching.
# + useContext - The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate library instances.
# + status - The status of this library. Enables tracking the life-cycle of the content.
@r5:ResourceDefinition {
    resourceType: "Library",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/modelinfolibrary",
    elements: {
        "date" : {
            name: "date",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.date"
        },
        "copyright" : {
            name: "copyright",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.copyright"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.extension"
        },
        "approvalDate" : {
            name: "approvalDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.approvalDate"
        },
        "subjectCodeableConcept" : {
            name: "subjectCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.subject[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-resource-types"
        },
        "purpose" : {
            name: "purpose",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.purpose"
        },
        "jurisdiction" : {
            name: "jurisdiction",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.jurisdiction",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.modifierExtension"
        },
        "usage" : {
            name: "usage",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.usage"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 1,
            max: 1,
            isArray: false,
            path: "Library.description"
        },
        "experimental" : {
            name: "experimental",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.experimental"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "title" : {
            name: "title",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            path: "Library.title"
        },
        "type" : {
            name: "type",
            dataType: ModelInfoLibraryType,
            min: 1,
            max: 1,
            isArray: false,
            path: "Library.type",
            valueSet: "http://hl7.org/fhir/ValueSet/library-type"
        },
        "content" : {
            name: "content",
            dataType: r5:Attachment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.content"
        },
        "versionAlgorithmString" : {
            name: "versionAlgorithmString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.contact"
        },
        "parameter" : {
            name: "parameter",
            dataType: r5:ParameterDefinition,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.parameter"
        },
        "endorser" : {
            name: "endorser",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.endorser"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.text"
        },
        "editor" : {
            name: "editor",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.editor"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.identifier"
        },
        "relatedArtifact" : {
            name: "relatedArtifact",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.relatedArtifact"
        },
        "versionAlgorithmCoding" : {
            name: "versionAlgorithmCoding",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.effectivePeriod"
        },
        "author" : {
            name: "author",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.author"
        },
        "reviewer" : {
            name: "reviewer",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.reviewer"
        },
        "subjectReference" : {
            name: "subjectReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.subject[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-resource-types"
        },
        "version" : {
            name: "version",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            path: "Library.version"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 1,
            max: 1,
            isArray: false,
            path: "Library.url"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.contained"
        },
        "copyrightLabel" : {
            name: "copyrightLabel",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.copyrightLabel"
        },
        "lastReviewDate" : {
            name: "lastReviewDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.lastReviewDate"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.meta"
        },
        "subtitle" : {
            name: "subtitle",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.subtitle"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.name"
        },
        "dataRequirement" : {
            name: "dataRequirement",
            dataType: r5:DataRequirement,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.dataRequirement"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.implicitRules"
        },
        "publisher" : {
            name: "publisher",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Library.publisher"
        },
        "topic" : {
            name: "topic",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.topic",
            valueSet: "http://hl7.org/fhir/ValueSet/definition-topic"
        },
        "useContext" : {
            name: "useContext",
            dataType: r5:UsageContext,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Library.useContext"
        },
        "status" : {
            name: "status",
            dataType: ModelInfoLibraryStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Library.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type ModelInfoLibrary record {|
    *r5:DomainResource;

    RESOURCE_NAME_MODELINFOLIBRARY resourceType = RESOURCE_NAME_MODELINFOLIBRARY;

    r5:dateTime date?;
    r5:markdown copyright?;
    r5:Extension[] extension?;
    r5:date approvalDate?;
    r5:CodeableConcept subjectCodeableConcept?;
    r5:markdown purpose?;
    r5:CodeableConcept[] jurisdiction?;
    r5:Extension[] modifierExtension?;
    r5:markdown usage?;
    r5:markdown description;
    boolean experimental?;
    r5:code language?;
    string title;
    ModelInfoLibraryType 'type;
    r5:Attachment[] content?;
    string versionAlgorithmString?;
    r5:ContactDetail[] contact?;
    r5:ParameterDefinition[] 'parameter?;
    r5:ContactDetail[] endorser?;
    string id?;
    r5:Narrative text?;
    r5:ContactDetail[] editor?;
    r5:Identifier[] identifier?;
    r5:RelatedArtifact[] relatedArtifact?;
    r5:Coding versionAlgorithmCoding?;
    r5:Period effectivePeriod?;
    r5:ContactDetail[] author?;
    r5:ContactDetail[] reviewer?;
    r5:Reference subjectReference?;
    string 'version;
    r5:uri url;
    r5:Resource[] contained?;
    string copyrightLabel?;
    r5:date lastReviewDate?;
    r5:Meta meta?;
    string subtitle?;
    string name?;
    r5:DataRequirement[] dataRequirement?;
    r5:uri implicitRules?;
    string publisher?;
    r5:CodeableConcept[] topic?;
    r5:UsageContext[] useContext?;
    ModelInfoLibraryStatus status;
    r5:Element ...;
|};

# FHIR ModelInfoLibraryTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r5:DataTypeDefinition {
    name: "ModelInfoLibraryTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r5:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Library.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r5:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Library.type.coding.code"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ModelInfoLibraryTypeCoding record {|
    *r5:Coding;

    r5:uri system = "http://terminology.hl7.org/CodeSystem/library-type";
    r5:code code = "model-definition";
|};

# FHIR ModelInfoLibraryType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r5:DataTypeDefinition {
    name: "ModelInfoLibraryType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: ModelInfoLibraryTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Library.type.coding"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ModelInfoLibraryType record {|
    *r5:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Library.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Library.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    ModelInfoLibraryTypeCoding[] coding;
|};

# ModelInfoLibraryStatus enum
public enum ModelInfoLibraryStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR ModelInfoLibraryContentModelInfoJsonContent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + data - The actual data of the attachment - a sequence of bytes, base64 encoded.
# + frames - The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.
# + language - The human language of the content. The value can be any valid value according to BCP 47.
# + title - A label or set of text to display in place of the data.
# + url - A location where the data can be accessed.
# + duration - The duration of the recording in seconds - for audio and video.
# + pages - The number of pages when printed.
# + size - The number of bytes of data that make up this attachment (before base64 encoding, if that is done).
# + width - Width of the image in pixels (photo/video).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + contentType - Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.
# + creation - The date that the attachment was first created.
# + hash - The calculated hash of the data using SHA-1. Represented using base64.
# + height - Height of the image in pixels (photo/video).
@r5:DataTypeDefinition {
    name: "ModelInfoLibraryContentModelInfoJsonContent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Library.content.extension"
        },
        "data": {
            name: "data",
            dataType: r5:base64Binary,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual data of the attachment - a sequence of bytes, base64 encoded.",
            path: "Library.content.data"
        },
        "frames": {
            name: "frames",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.",
            path: "Library.content.frames"
        },
        "language": {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "The human language of the content. The value can be any valid value according to BCP 47.",
            path: "Library.content.language"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A label or set of text to display in place of the data.",
            path: "Library.content.title"
        },
        "url": {
            name: "url",
            dataType: r5:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "A location where the data can be accessed.",
            path: "Library.content.url"
        },
        "duration": {
            name: "duration",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "The duration of the recording in seconds - for audio and video.",
            path: "Library.content.duration"
        },
        "pages": {
            name: "pages",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of pages when printed.",
            path: "Library.content.pages"
        },
        "size": {
            name: "size",
            dataType: r5:integer64,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of bytes of data that make up this attachment (before base64 encoding, if that is done).",
            path: "Library.content.size"
        },
        "width": {
            name: "width",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Width of the image in pixels (photo/video).",
            path: "Library.content.width"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Library.content.id"
        },
        "contentType": {
            name: "contentType",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.",
            path: "Library.content.contentType"
        },
        "creation": {
            name: "creation",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date that the attachment was first created.",
            path: "Library.content.creation"
        },
        "hash": {
            name: "hash",
            dataType: r5:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "The calculated hash of the data using SHA-1. Represented using base64.",
            path: "Library.content.hash"
        },
        "height": {
            name: "height",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Height of the image in pixels (photo/video).",
            path: "Library.content.height"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ModelInfoLibraryContentModelInfoJsonContent record {|
    *r5:Attachment;

    r5:Extension[] extension?;
    r5:base64Binary data;
    r5:positiveInt frames?;
    r5:code language?;
    string title?;
    r5:urlType url?;
    decimal duration?;
    r5:positiveInt pages?;
    r5:integer64 size?;
    r5:positiveInt width?;
    string id?;
    r5:code contentType = "application/json";
    r5:dateTime creation?;
    r5:base64Binary hash?;
    r5:positiveInt height?;
|};

# FHIR ModelInfoLibraryContentModelInfoXmlContent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + data - The actual data of the attachment - a sequence of bytes, base64 encoded.
# + frames - The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.
# + language - The human language of the content. The value can be any valid value according to BCP 47.
# + title - A label or set of text to display in place of the data.
# + url - A location where the data can be accessed.
# + duration - The duration of the recording in seconds - for audio and video.
# + pages - The number of pages when printed.
# + size - The number of bytes of data that make up this attachment (before base64 encoding, if that is done).
# + width - Width of the image in pixels (photo/video).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + contentType - Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.
# + creation - The date that the attachment was first created.
# + hash - The calculated hash of the data using SHA-1. Represented using base64.
# + height - Height of the image in pixels (photo/video).
@r5:DataTypeDefinition {
    name: "ModelInfoLibraryContentModelInfoXmlContent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Library.content.extension"
        },
        "data": {
            name: "data",
            dataType: r5:base64Binary,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual data of the attachment - a sequence of bytes, base64 encoded.",
            path: "Library.content.data"
        },
        "frames": {
            name: "frames",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.",
            path: "Library.content.frames"
        },
        "language": {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "The human language of the content. The value can be any valid value according to BCP 47.",
            path: "Library.content.language"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A label or set of text to display in place of the data.",
            path: "Library.content.title"
        },
        "url": {
            name: "url",
            dataType: r5:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "A location where the data can be accessed.",
            path: "Library.content.url"
        },
        "duration": {
            name: "duration",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "The duration of the recording in seconds - for audio and video.",
            path: "Library.content.duration"
        },
        "pages": {
            name: "pages",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of pages when printed.",
            path: "Library.content.pages"
        },
        "size": {
            name: "size",
            dataType: r5:integer64,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of bytes of data that make up this attachment (before base64 encoding, if that is done).",
            path: "Library.content.size"
        },
        "width": {
            name: "width",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Width of the image in pixels (photo/video).",
            path: "Library.content.width"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Library.content.id"
        },
        "contentType": {
            name: "contentType",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.",
            path: "Library.content.contentType"
        },
        "creation": {
            name: "creation",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date that the attachment was first created.",
            path: "Library.content.creation"
        },
        "hash": {
            name: "hash",
            dataType: r5:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "The calculated hash of the data using SHA-1. Represented using base64.",
            path: "Library.content.hash"
        },
        "height": {
            name: "height",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Height of the image in pixels (photo/video).",
            path: "Library.content.height"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ModelInfoLibraryContentModelInfoXmlContent record {|
    *r5:Attachment;

    r5:Extension[] extension?;
    r5:base64Binary data;
    r5:positiveInt frames?;
    r5:code language?;
    string title?;
    r5:urlType url?;
    decimal duration?;
    r5:positiveInt pages?;
    r5:integer64 size?;
    r5:positiveInt width?;
    string id?;
    r5:code contentType = "application/xml";
    r5:dateTime creation?;
    r5:base64Binary hash?;
    r5:positiveInt height?;
|};

