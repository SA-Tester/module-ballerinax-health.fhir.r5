// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_NUTRITIONINTAKE = "http://hl7.org/fhir/StructureDefinition/NutritionIntake";
public const RESOURCE_NAME_NUTRITIONINTAKE = "NutritionIntake";

# FHIR NutritionIntake resource record.
#
# + resourceType - The type of the resource describes
# + note - Provides extra information about the Nutrition Intake that is not conveyed by the other attributes.
# + partOf - A larger event of which this particular event is a component or step.
# + reason - A reason, Condition or observation for why the food or fluid is /was consumed.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Overall type of nutrition intake.
# + subject - The person, animal or group who is/was consuming the food or fluid.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + consumedItem - What food or fluid product or item was consumed.
# + ingredientLabel - Total nutrient amounts for the whole meal, product, serving, etc.
# + instantiatesUri - Instantiates external protocol or definition.
# + reportedReference - The person or organization that provided the information about the consumption of this food or fluid. Note: Use derivedFrom when a NutritionIntake is derived from other resources.
# + statusReason - Captures the reason for the current state of the NutritionIntake.
# + derivedFrom - Allows linking the NutritionIntake to the underlying NutritionOrder, or to other information, such as AllergyIntolerance, that supports or is used to derive the NutritionIntake.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + basedOn - A plan, proposal or order that is fulfilled in whole or in part by this event.
# + identifier - Identifiers associated with this Nutrition Intake that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.
# + reportedBoolean - The person or organization that provided the information about the consumption of this food or fluid. Note: Use derivedFrom when a NutritionIntake is derived from other resources.
# + performer - Who performed the intake and how they were involved.
# + encounter - The encounter that establishes the context for this NutritionIntake.
# + instantiatesCanonical - Instantiates FHIR protocol or definition.
# + recorded - The date when the Nutrition Intake was asserted by the information source.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + occurrencePeriod - The interval of time during which it is being asserted that the patient is/was consuming the food or fluid.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + location - Where the intake occurred.
# + occurrenceDateTime - The interval of time during which it is being asserted that the patient is/was consuming the food or fluid.
# + status - A code representing the patient or other source's judgment about the state of the intake that this assertion is about. Generally, this will be active or completed.
@r5:ResourceDefinition {
    resourceType: "NutritionIntake",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/NutritionIntake",
    elements: {
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.partOf"
        },
        "reason" : {
            name: "reason",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.reason",
            valueSet: "http://hl7.org/fhir/ValueSet/condition-code"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.extension"
        },
        "code" : {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.code",
            valueSet: "http://hl7.org/fhir/ValueSet/diet-type"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "NutritionIntake.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "consumedItem" : {
            name: "consumedItem",
            dataType: NutritionIntakeConsumedItem,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.consumedItem"
        },
        "ingredientLabel" : {
            name: "ingredientLabel",
            dataType: NutritionIntakeIngredientLabel,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.ingredientLabel"
        },
        "instantiatesUri" : {
            name: "instantiatesUri",
            dataType: r5:uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.instantiatesUri"
        },
        "reportedReference" : {
            name: "reportedReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.reported[x]"
        },
        "statusReason" : {
            name: "statusReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.statusReason",
            valueSet: "http://hl7.org/fhir/ValueSet/clinicalimpression-status-reason"
        },
        "derivedFrom" : {
            name: "derivedFrom",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.derivedFrom"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.text"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.basedOn"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.identifier"
        },
        "reportedBoolean" : {
            name: "reportedBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.reported[x]"
        },
        "performer" : {
            name: "performer",
            dataType: NutritionIntakePerformer,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.performer"
        },
        "encounter" : {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.encounter"
        },
        "instantiatesCanonical" : {
            name: "instantiatesCanonical",
            dataType: r5:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.instantiatesCanonical"
        },
        "recorded" : {
            name: "recorded",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.recorded"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "NutritionIntake.contained"
        },
        "occurrencePeriod" : {
            name: "occurrencePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.occurrence[x]"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.implicitRules"
        },
        "location" : {
            name: "location",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.location"
        },
        "occurrenceDateTime" : {
            name: "occurrenceDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "NutritionIntake.occurrence[x]"
        },
        "status" : {
            name: "status",
            dataType: NutritionIntakeStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "NutritionIntake.status",
            valueSet: "http://hl7.org/fhir/ValueSet/event-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type NutritionIntake record {|
    *r5:DomainResource;

    RESOURCE_NAME_NUTRITIONINTAKE resourceType = RESOURCE_NAME_NUTRITIONINTAKE;

    r5:Annotation[] note?;
    r5:Reference[] partOf?;
    r5:CodeableReference[] reason?;
    r5:Extension[] extension?;
    r5:CodeableConcept code?;
    r5:Reference subject;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.NutritionIntake.consumedItem constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.NutritionIntake.consumedItem constraint. This field must be an array containing at most one item."
        }
    }
    NutritionIntakeConsumedItem[] consumedItem;
    NutritionIntakeIngredientLabel[] ingredientLabel?;
    r5:uri[] instantiatesUri?;
    r5:Reference reportedReference?;
    r5:CodeableConcept[] statusReason?;
    r5:Reference[] derivedFrom?;
    string id?;
    r5:Narrative text?;
    r5:Reference[] basedOn?;
    r5:Identifier[] identifier?;
    boolean reportedBoolean?;
    NutritionIntakePerformer[] performer?;
    r5:Reference encounter?;
    r5:canonical[] instantiatesCanonical?;
    r5:dateTime recorded?;
    r5:Resource[] contained?;
    r5:Period occurrencePeriod?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:Reference location?;
    r5:dateTime occurrenceDateTime?;
    NutritionIntakeStatus status;
    r5:Element ...;
|};

# NutritionIntakeStatus enum
public enum NutritionIntakeStatus {
   CODE_STATUS_STOPPED = "stopped",
   CODE_STATUS_COMPLETED = "completed",
   CODE_STATUS_NOT_DONE = "not-done",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_IN_PROGRESS = "in-progress",
   CODE_STATUS_ON_HOLD = "on-hold",
   CODE_STATUS_PREPARATION = "preparation",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR NutritionIntakeConsumedItem datatype record.
#
# + schedule - Scheduled frequency of consumption.
# + amount - Quantity of the specified food.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + rate - Rate at which enteral feeding was administered.
# + notConsumedReason - Document the reason the food or fluid was not consumed, such as refused, held, etc.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + notConsumed - Indicator when a patient is in a setting where it is helpful to know if food was not consumed, such as it was refused, held (as in tube feedings), or otherwise not provided. If a consumption is being recorded from an app, such as MyFitnessPal, this indicator will likely not be used.
# + nutritionProduct - Identifies the food or fluid product that was consumed. This is potentially a link to a resource representing the details of the food product (TBD) or a simple attribute carrying a code that identifies the food from a known list of foods.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Indicates what a category of item that was consumed: e.g., food, fluid, enteral, etc.
@r5:DataTypeDefinition {
    name: "NutritionIntakeConsumedItem",
    baseType: (),
    elements: {
        "schedule": {
            name: "schedule",
            dataType: r5:Timing,
            min: 0,
            max: 1,
            isArray: false,
            description: "Scheduled frequency of consumption.",
            path: "NutritionIntake.consumedItem.schedule"
        },
        "amount": {
            name: "amount",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Quantity of the specified food.",
            path: "NutritionIntake.consumedItem.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "NutritionIntake.consumedItem.extension"
        },
        "rate": {
            name: "rate",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Rate at which enteral feeding was administered.",
            path: "NutritionIntake.consumedItem.rate"
        },
        "notConsumedReason": {
            name: "notConsumedReason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Document the reason the food or fluid was not consumed, such as refused, held, etc.",
            path: "NutritionIntake.consumedItem.notConsumedReason"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "NutritionIntake.consumedItem.modifierExtension"
        },
        "notConsumed": {
            name: "notConsumed",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicator when a patient is in a setting where it is helpful to know if food was not consumed, such as it was refused, held (as in tube feedings), or otherwise not provided. If a consumption is being recorded from an app, such as MyFitnessPal, this indicator will likely not be used.",
            path: "NutritionIntake.consumedItem.notConsumed"
        },
        "nutritionProduct": {
            name: "nutritionProduct",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the food or fluid product that was consumed. This is potentially a link to a resource representing the details of the food product (TBD) or a simple attribute carrying a code that identifies the food from a known list of foods.",
            path: "NutritionIntake.consumedItem.nutritionProduct"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "NutritionIntake.consumedItem.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates what a category of item that was consumed: e.g., food, fluid, enteral, etc.",
            path: "NutritionIntake.consumedItem.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type NutritionIntakeConsumedItem record {|
    *r5:BackboneElement;

    r5:Timing schedule?;
    r5:Quantity amount?;
    r5:Extension[] extension?;
    r5:Quantity rate?;
    r5:CodeableConcept notConsumedReason?;
    r5:Extension[] modifierExtension?;
    boolean notConsumed?;
    r5:CodeableReference nutritionProduct;
    string id?;
    r5:CodeableConcept 'type;
|};

# FHIR NutritionIntakePerformer datatype record.
#
# + actor - Who performed the intake.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + 'function - Type of performer.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "NutritionIntakePerformer",
    baseType: (),
    elements: {
        "actor": {
            name: "actor",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Who performed the intake.",
            path: "NutritionIntake.performer.actor"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "NutritionIntake.performer.extension"
        },
        "function": {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of performer.",
            path: "NutritionIntake.performer.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "NutritionIntake.performer.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "NutritionIntake.performer.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type NutritionIntakePerformer record {|
    *r5:BackboneElement;

    r5:Reference actor;
    r5:Extension[] extension?;
    r5:CodeableConcept 'function?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR NutritionIntakeIngredientLabel datatype record.
#
# + amount - Total amount of nutrient consumed.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + nutrient - Total nutrient consumed. This could be a macronutrient (protein, fat, carbohydrate), or a vitamin and mineral.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "NutritionIntakeIngredientLabel",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r5:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Total amount of nutrient consumed.",
            path: "NutritionIntake.ingredientLabel.amount"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "NutritionIntake.ingredientLabel.extension"
        },
        "nutrient": {
            name: "nutrient",
            dataType: r5:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Total nutrient consumed. This could be a macronutrient (protein, fat, carbohydrate), or a vitamin and mineral.",
            path: "NutritionIntake.ingredientLabel.nutrient"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "NutritionIntake.ingredientLabel.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "NutritionIntake.ingredientLabel.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type NutritionIntakeIngredientLabel record {|
    *r5:BackboneElement;

    r5:Quantity amount;
    r5:Extension[] extension?;
    r5:CodeableReference nutrient;
    r5:Extension[] modifierExtension?;
    string id?;
|};

