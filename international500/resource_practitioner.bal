// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_PRACTITIONER = "http://hl7.org/fhir/StructureDefinition/Practitioner";
public const RESOURCE_NAME_PRACTITIONER = "Practitioner";

# FHIR Practitioner resource record.
#
# + resourceType - The type of the resource describes
# + identifier - An identifier that applies to this person in this role.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + address - Address(es) of the practitioner that are not role specific (typically home address). Work addresses are not typically entered in this property as they are usually role dependent.
# + gender - Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + active - Whether this practitioner's record is in active use.
# + photo - Image of the person.
# + language - The base language in which the resource is written.
# + birthDate - The date of birth for the practitioner.
# + qualification - The official qualifications, certifications, accreditations, training, licenses (and other types of educations/skills/capabilities) that authorize or otherwise pertain to the provision of care by the practitioner. For example, a medical license issued by a medical board of licensure authorizing the practitioner to practice medicine within a certain locality.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + deceasedBoolean - Indicates if the practitioner is deceased or not.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + deceasedDateTime - Indicates if the practitioner is deceased or not.
# + name - The name(s) associated with the practitioner.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + telecom - A contact detail for the practitioner, e.g. a telephone number or an email address.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + communication - A language which may be used to communicate with the practitioner, often for correspondence/administrative purposes. The `PractitionerRole.communication` property should be used for publishing the languages that a practitioner is able to communicate with patients (on a per Organization/Role basis).
@r5:ResourceDefinition {
    resourceType: "Practitioner",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Practitioner",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.extension"
        },
        "address" : {
            name: "address",
            dataType: r5:Address,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.address"
        },
        "gender" : {
            name: "gender",
            dataType: PractitionerGender,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.gender",
            valueSet: "http://hl7.org/fhir/ValueSet/administrative-gender|5.0.0"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.modifierExtension"
        },
        "active" : {
            name: "active",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.active"
        },
        "photo" : {
            name: "photo",
            dataType: r5:Attachment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.photo"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "birthDate" : {
            name: "birthDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.birthDate"
        },
        "qualification" : {
            name: "qualification",
            dataType: PractitionerQualification,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.qualification"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.contained"
        },
        "deceasedBoolean" : {
            name: "deceasedBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.deceased[x]"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.meta"
        },
        "deceasedDateTime" : {
            name: "deceasedDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.deceased[x]"
        },
        "name" : {
            name: "name",
            dataType: r5:HumanName,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.implicitRules"
        },
        "telecom" : {
            name: "telecom",
            dataType: r5:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.telecom"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Practitioner.text"
        },
        "communication" : {
            name: "communication",
            dataType: PractitionerCommunication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Practitioner.communication"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Practitioner record {|
    *r5:DomainResource;

    RESOURCE_NAME_PRACTITIONER resourceType = RESOURCE_NAME_PRACTITIONER;

    r5:Identifier[] identifier?;
    r5:Extension[] extension?;
    r5:Address[] address?;
    PractitionerGender gender?;
    r5:Extension[] modifierExtension?;
    boolean active?;
    r5:Attachment[] photo?;
    r5:code language?;
    r5:date birthDate?;
    PractitionerQualification[] qualification?;
    r5:Resource[] contained?;
    boolean deceasedBoolean?;
    r5:Meta meta?;
    r5:dateTime deceasedDateTime?;
    r5:HumanName[] name?;
    r5:uri implicitRules?;
    r5:ContactPoint[] telecom?;
    string id?;
    r5:Narrative text?;
    PractitionerCommunication[] communication?;
    r5:Element ...;
|};

# PractitionerGender enum
public enum PractitionerGender {
   CODE_GENDER_OTHER = "other",
   CODE_GENDER_FEMALE = "female",
   CODE_GENDER_MALE = "male",
   CODE_GENDER_UNKNOWN = "unknown"
}

# FHIR PractitionerCommunication datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-AU' for Australian English.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + preferred - Indicates whether or not the person prefers this language (over other languages he masters up a certain level).
@r5:DataTypeDefinition {
    name: "PractitionerCommunication",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Practitioner.communication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Practitioner.communication.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-AU' for Australian English.",
            path: "Practitioner.communication.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Practitioner.communication.id"
        },
        "preferred": {
            name: "preferred",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates whether or not the person prefers this language (over other languages he masters up a certain level).",
            path: "Practitioner.communication.preferred"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PractitionerCommunication record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept language;
    string id?;
    boolean preferred?;
|};

# FHIR PractitionerQualification datatype record.
#
# + identifier - An identifier that applies to this person's qualification.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Period during which the qualification is valid.
# + code - Coded representation of the qualification.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + issuer - Organization that regulates and issues the qualification.
@r5:DataTypeDefinition {
    name: "PractitionerQualification",
    baseType: (),
    elements: {
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An identifier that applies to this person's qualification.",
            path: "Practitioner.qualification.identifier"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Practitioner.qualification.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Period during which the qualification is valid.",
            path: "Practitioner.qualification.period"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Coded representation of the qualification.",
            path: "Practitioner.qualification.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Practitioner.qualification.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Practitioner.qualification.id"
        },
        "issuer": {
            name: "issuer",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that regulates and issues the qualification.",
            path: "Practitioner.qualification.issuer"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PractitionerQualification record {|
    *r5:BackboneElement;

    r5:Identifier[] identifier?;
    r5:Extension[] extension?;
    r5:Period period?;
    r5:CodeableConcept code;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:Reference issuer?;
|};

