// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_PUBLISHABLEPLANDEFINITION = "http://hl7.org/fhir/StructureDefinition/publishableplandefinition";
public const RESOURCE_NAME_PUBLISHABLEPLANDEFINITION = "PlanDefinition";

# FHIR PublishablePlanDefinition resource record.
#
# + resourceType - The type of the resource describes
# + date - The date (and optionally time) when the plan definition was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the plan definition changes.
# + copyright - A copyright statement relating to the plan definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the plan definition.
# + extension - An Extension
# + approvalDate - The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
# + subjectCodeableConcept - A code, group definition, or canonical reference that describes or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.
# + purpose - Explanation of why this plan definition is needed and why it has been designed as it has.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + usage - A detailed description of how the plan definition is used from a clinical perspective.
# + jurisdiction - A legal or geographic region in which the plan definition is intended to be used.
# + description - A free text natural language description of the plan definition from a consumer's perspective.
# + experimental - A Boolean value to indicate that this plan definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
# + language - The base language in which the resource is written.
# + 'type - A high-level category for the plan definition that distinguishes the kinds of systems that would be interested in the plan definition.
# + title - A short, descriptive, user-friendly title for the plan definition.
# + library - A reference to a Library resource containing any formal logic used by the plan definition.
# + versionAlgorithmString - Indicates the mechanism used to compare versions to determine which is more current.
# + contact - Contact details to assist a user in finding and communicating with the publisher.
# + endorser - An individual or organization asserted by the publisher to be responsible for officially endorsing the content for use in some setting.
# + action - An action or group of actions to be taken as part of the plan. For example, in clinical care, an action would be to prescribe a particular indicated medication, or perform a particular test as appropriate. In pharmaceutical quality, an action would be the test that needs to be performed on a drug product as defined in the quality specification.
# + asNeededBoolean - If a CodeableConcept is present, it indicates the pre-condition for performing the service. For example 'pain', 'on flare-up', etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + asNeededCodeableConcept - If a CodeableConcept is present, it indicates the pre-condition for performing the service. For example 'pain', 'on flare-up', etc.
# + identifier - A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + editor - An individual or organization primarily responsible for internal coherence of the content.
# + goal - A goal describes an expected outcome that activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, meeting the acceptance criteria for a test as specified by a quality specification, etc.
# + relatedArtifact - Related artifacts such as additional documentation, justification, or bibliographic references.
# + versionAlgorithmCoding - Indicates the mechanism used to compare versions to determine which is more current.
# + effectivePeriod - The period during which the plan definition content was or is planned to be in active use.
# + author - An individiual or organization primarily involved in the creation and maintenance of the content.
# + reviewer - An individual or organization asserted by the publisher to be primarily responsible for review of some aspect of the content.
# + 'version - The identifier that is used to identify this version of the plan definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the plan definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.
# + subjectReference - A code, group definition, or canonical reference that describes or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.
# + url - An absolute URI that is used to identify this plan definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this plan definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the plan definition is stored on different servers.
# + actor - Actors represent the individuals or groups involved in the execution of the defined set of activities.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + lastReviewDate - The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + copyrightLabel - A short string (<50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. 'All rights reserved', 'Some rights reserved').
# + subtitle - An explanatory or alternate title for the plan definition giving additional information about its content.
# + name - A natural language name identifying the plan definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + publisher - The name of the organization or individual responsible for the release and ongoing maintenance of the plan definition.
# + topic - Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching.
# + useContext - The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate plan definition instances.
# + subjectCanonical - A code, group definition, or canonical reference that describes or identifies the intended subject of the plan definition. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.
# + status - The status of this plan definition. Enables tracking the life-cycle of the content.
@r5:ResourceDefinition {
    resourceType: "PlanDefinition",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/publishableplandefinition",
    elements: {
        "date" : {
            name: "date",
            dataType: r5:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "PlanDefinition.date"
        },
        "copyright" : {
            name: "copyright",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.copyright"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.extension"
        },
        "approvalDate" : {
            name: "approvalDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.approvalDate"
        },
        "subjectCodeableConcept" : {
            name: "subjectCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.subject[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-resource-types"
        },
        "purpose" : {
            name: "purpose",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.purpose"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.modifierExtension"
        },
        "usage" : {
            name: "usage",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.usage"
        },
        "jurisdiction" : {
            name: "jurisdiction",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.jurisdiction",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 1,
            max: 1,
            isArray: false,
            path: "PlanDefinition.description"
        },
        "experimental" : {
            name: "experimental",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.experimental"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.type",
            valueSet: "http://hl7.org/fhir/ValueSet/plan-definition-type"
        },
        "title" : {
            name: "title",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            path: "PlanDefinition.title"
        },
        "library" : {
            name: "library",
            dataType: r5:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.library"
        },
        "versionAlgorithmString" : {
            name: "versionAlgorithmString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.contact"
        },
        "endorser" : {
            name: "endorser",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.endorser"
        },
        "action" : {
            name: "action",
            dataType: PublishablePlanDefinitionAction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.action"
        },
        "asNeededBoolean" : {
            name: "asNeededBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.asNeeded[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.text"
        },
        "asNeededCodeableConcept" : {
            name: "asNeededCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.asNeeded[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-as-needed-reason"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.identifier"
        },
        "editor" : {
            name: "editor",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.editor"
        },
        "goal" : {
            name: "goal",
            dataType: PublishablePlanDefinitionGoal,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.goal"
        },
        "relatedArtifact" : {
            name: "relatedArtifact",
            dataType: PublishablePlanDefinitionRelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.relatedArtifact"
        },
        "versionAlgorithmCoding" : {
            name: "versionAlgorithmCoding",
            dataType: r5:Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.versionAlgorithm[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/version-algorithm"
        },
        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.effectivePeriod"
        },
        "author" : {
            name: "author",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.author"
        },
        "reviewer" : {
            name: "reviewer",
            dataType: r5:ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.reviewer"
        },
        "version" : {
            name: "version",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            path: "PlanDefinition.version"
        },
        "subjectReference" : {
            name: "subjectReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.subject[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-resource-types"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 1,
            max: 1,
            isArray: false,
            path: "PlanDefinition.url"
        },
        "actor" : {
            name: "actor",
            dataType: PublishablePlanDefinitionActor,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.actor"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.contained"
        },
        "lastReviewDate" : {
            name: "lastReviewDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.lastReviewDate"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.meta"
        },
        "copyrightLabel" : {
            name: "copyrightLabel",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.copyrightLabel"
        },
        "subtitle" : {
            name: "subtitle",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.subtitle"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.implicitRules"
        },
        "publisher" : {
            name: "publisher",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.publisher"
        },
        "topic" : {
            name: "topic",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.topic",
            valueSet: "http://hl7.org/fhir/ValueSet/definition-topic"
        },
        "useContext" : {
            name: "useContext",
            dataType: r5:UsageContext,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "PlanDefinition.useContext"
        },
        "subjectCanonical" : {
            name: "subjectCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            path: "PlanDefinition.subject[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/participant-resource-types"
        },
        "status" : {
            name: "status",
            dataType: PublishablePlanDefinitionStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "PlanDefinition.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type PublishablePlanDefinition record {|
    *r5:DomainResource;

    RESOURCE_NAME_PUBLISHABLEPLANDEFINITION resourceType = RESOURCE_NAME_PUBLISHABLEPLANDEFINITION;

    r5:dateTime date;
    r5:markdown copyright?;
    r5:Extension[] extension?;
    r5:date approvalDate?;
    r5:CodeableConcept subjectCodeableConcept?;
    r5:markdown purpose?;
    r5:Extension[] modifierExtension?;
    r5:markdown usage?;
    r5:CodeableConcept[] jurisdiction?;
    r5:markdown description;
    boolean experimental?;
    r5:code language?;
    r5:CodeableConcept 'type?;
    string title;
    r5:canonical[] library?;
    string versionAlgorithmString?;
    r5:ContactDetail[] contact?;
    r5:ContactDetail[] endorser?;
    PublishablePlanDefinitionAction[] action?;
    boolean asNeededBoolean?;
    string id?;
    r5:Narrative text?;
    r5:CodeableConcept asNeededCodeableConcept?;
    r5:Identifier[] identifier?;
    r5:ContactDetail[] editor?;
    PublishablePlanDefinitionGoal[] goal?;
    PublishablePlanDefinitionRelatedArtifact[] relatedArtifact?;
    r5:Coding versionAlgorithmCoding?;
    r5:Period effectivePeriod?;
    r5:ContactDetail[] author?;
    r5:ContactDetail[] reviewer?;
    string 'version;
    r5:Reference subjectReference?;
    r5:uri url;
    PublishablePlanDefinitionActor[] actor?;
    r5:Resource[] contained?;
    r5:date lastReviewDate?;
    r5:Meta meta?;
    string copyrightLabel?;
    string subtitle?;
    string name?;
    r5:uri implicitRules?;
    string publisher?;
    r5:CodeableConcept[] topic?;
    r5:UsageContext[] useContext?;
    r5:canonical subjectCanonical?;
    PublishablePlanDefinitionStatus status;
    r5:Element ...;
|};

# FHIR PublishablePlanDefinitionActionRelatedAction datatype record.
#
# + offsetPlanDefinitionRange - A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + offsetPlanDefinitionDuration - A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
# + targetId - The element id of the target related action.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + endRelationship - The relationship of the end of this action to the related action.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - The relationship of the start of this action to the related action.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActionRelatedAction",
    baseType: (),
    elements: {
        "offsetPlanDefinitionRange": {
            name: "offsetPlanDefinitionRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
            path: "PlanDefinition.action.relatedAction.offset[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.relatedAction.extension"
        },
        "offsetPlanDefinitionDuration": {
            name: "offsetPlanDefinitionDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
            path: "PlanDefinition.action.relatedAction.offset[x]"
        },
        "targetId": {
            name: "targetId",
            dataType: r5:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "The element id of the target related action.",
            path: "PlanDefinition.action.relatedAction.targetId"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.relatedAction.modifierExtension"
        },
        "endRelationship": {
            name: "endRelationship",
            dataType: PublishablePlanDefinitionActionRelatedActionEndRelationship,
            min: 0,
            max: 1,
            isArray: false,
            description: "The relationship of the end of this action to the related action.",
            path: "PlanDefinition.action.relatedAction.endRelationship"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.relatedAction.id"
        },
        "relationship": {
            name: "relationship",
            dataType: PublishablePlanDefinitionActionRelatedActionRelationship,
            min: 1,
            max: 1,
            isArray: false,
            description: "The relationship of the start of this action to the related action.",
            path: "PlanDefinition.action.relatedAction.relationship"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActionRelatedAction record {|
    *r5:BackboneElement;

    r5:Range offsetPlanDefinitionRange?;
    r5:Extension[] extension?;
    r5:Duration offsetPlanDefinitionDuration?;
    r5:id targetId;
    r5:Extension[] modifierExtension?;
    PublishablePlanDefinitionActionRelatedActionEndRelationship endRelationship?;
    string id?;
    PublishablePlanDefinitionActionRelatedActionRelationship relationship;
|};

# FHIR PublishablePlanDefinitionActionDynamicValue datatype record.
#
# + path - The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolvable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + expression - An expression specifying the value of the customized element.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActionDynamicValue",
    baseType: (),
    elements: {
        "path": {
            name: "path",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolvable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
            path: "PlanDefinition.action.dynamicValue.path"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.dynamicValue.extension"
        },
        "expression": {
            name: "expression",
            dataType: r5:Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression specifying the value of the customized element.",
            path: "PlanDefinition.action.dynamicValue.expression"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.dynamicValue.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.dynamicValue.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActionDynamicValue record {|
    *r5:BackboneElement;

    string path?;
    r5:Extension[] extension?;
    r5:Expression expression?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR PublishablePlanDefinitionRelatedArtifact datatype record.
#
# + publicationStatus - The publication status of the artifact being referred to.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + citation - A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.
# + 'resource - The related artifact, such as a library, value set, profile, or other knowledge resource.
# + display - A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.
# + document - The document being referenced, represented as an attachment. This is exclusive with the resource element.
# + classifier - Provides additional classifiers of the related artifact.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + label - A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.
# + 'type - The type of relationship to the related artifact.
# + publicationDate - The date of publication of the artifact being referred to.
# + resourceReference - The related artifact, if the artifact is not a canonical resource, or a resource reference to a canonical resource.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionRelatedArtifact",
    baseType: (),
    elements: {
        "publicationStatus": {
            name: "publicationStatus",
            dataType: PublishablePlanDefinitionRelatedArtifactPublicationStatus,
            min: 0,
            max: 1,
            isArray: false,
            description: "The publication status of the artifact being referred to.",
            path: "PlanDefinition.relatedArtifact.publicationStatus"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.relatedArtifact.extension"
        },
        "citation": {
            name: "citation",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.",
            path: "PlanDefinition.relatedArtifact.citation"
        },
        "resource": {
            name: "resource",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "The related artifact, such as a library, value set, profile, or other knowledge resource.",
            path: "PlanDefinition.relatedArtifact.resource"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.",
            path: "PlanDefinition.relatedArtifact.display"
        },
        "document": {
            name: "document",
            dataType: r5:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "The document being referenced, represented as an attachment. This is exclusive with the resource element.",
            path: "PlanDefinition.relatedArtifact.document"
        },
        "classifier": {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Provides additional classifiers of the related artifact.",
            path: "PlanDefinition.relatedArtifact.classifier"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.relatedArtifact.id"
        },
        "label": {
            name: "label",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.",
            path: "PlanDefinition.relatedArtifact.label"
        },
        "type": {
            name: "type",
            dataType: PublishablePlanDefinitionRelatedArtifactType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of relationship to the related artifact.",
            path: "PlanDefinition.relatedArtifact.type"
        },
        "publicationDate": {
            name: "publicationDate",
            dataType: r5:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date of publication of the artifact being referred to.",
            path: "PlanDefinition.relatedArtifact.publicationDate"
        },
        "resourceReference": {
            name: "resourceReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The related artifact, if the artifact is not a canonical resource, or a resource reference to a canonical resource.",
            path: "PlanDefinition.relatedArtifact.resourceReference"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionRelatedArtifact record {|
    *r5:RelatedArtifact;

    PublishablePlanDefinitionRelatedArtifactPublicationStatus publicationStatus?;
    r5:Extension[] extension?;
    r5:markdown citation?;
    r5:canonical 'resource?;
    string display?;
    r5:Attachment document?;
    r5:CodeableConcept[] classifier?;
    string id?;
    string label?;
    PublishablePlanDefinitionRelatedArtifactType 'type;
    r5:date publicationDate?;
    r5:Reference resourceReference?;
|};

# FHIR PublishablePlanDefinitionActionCondition datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + expression - An expression that returns true or false, indicating whether the condition is satisfied.
# + kind - The kind of condition.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActionCondition",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.condition.extension"
        },
        "expression": {
            name: "expression",
            dataType: r5:Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression that returns true or false, indicating whether the condition is satisfied.",
            path: "PlanDefinition.action.condition.expression"
        },
        "kind": {
            name: "kind",
            dataType: PublishablePlanDefinitionActionConditionKind,
            min: 1,
            max: 1,
            isArray: false,
            description: "The kind of condition.",
            path: "PlanDefinition.action.condition.kind"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.condition.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.condition.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActionCondition record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Expression expression?;
    PublishablePlanDefinitionActionConditionKind kind;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR PublishablePlanDefinitionActionInput datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + relatedData - Points to an existing input or output element that provides data to this input.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + requirement - Defines the data that is to be provided as input to the action.
# + title - A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActionInput",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.input.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.input.modifierExtension"
        },
        "relatedData": {
            name: "relatedData",
            dataType: r5:id,
            min: 0,
            max: 1,
            isArray: false,
            description: "Points to an existing input or output element that provides data to this input.",
            path: "PlanDefinition.action.input.relatedData"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.input.id"
        },
        "requirement": {
            name: "requirement",
            dataType: r5:DataRequirement,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the data that is to be provided as input to the action.",
            path: "PlanDefinition.action.input.requirement"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
            path: "PlanDefinition.action.input.title"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActionInput record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:id relatedData?;
    string id?;
    r5:DataRequirement requirement?;
    string title?;
|};

# PublishablePlanDefinitionActionPriority enum
public enum PublishablePlanDefinitionActionPriority {
   CODE_PRIORITY_STAT = "stat",
   CODE_PRIORITY_ROUTINE = "routine",
   CODE_PRIORITY_URGENT = "urgent",
   CODE_PRIORITY_ASAP = "asap"
}

# FHIR PublishablePlanDefinitionAction datatype record.
#
# + reason - A description of why this action is necessary or appropriate.
# + cardinalityBehavior - Defines whether the action can be selected multiple times.
# + definitionCanonical - A reference to an ActivityDefinition that describes the action to be taken in detail, a MessageDefinition describing a message to be snet, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that provides a meaning, grouping, or classification for the action or action group. For example, a section may have a LOINC code for the section of a documentation template. In pharmaceutical quality, an action (Test) such as pH could be classified as a physical property.
# + goalId - Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition. In pharmaceutical quality, a goal represents acceptance criteria (Goal) for a given action (Test), so the goalId would be the unique id of a defined goal element establishing the acceptance criteria for the action.
# + subjectCodeableConcept - A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.
# + prefix - A user-visible prefix for the action. For example a section or item numbering such as 1. or A.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A brief description of the action used to provide a summary to display to the user.
# + definitionUri - A reference to an ActivityDefinition that describes the action to be taken in detail, a MessageDefinition describing a message to be snet, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.
# + title - The textual description of the action displayed to a user. For example, when the action is a test to be performed, the title would be the title of the test such as Assay by HPLC.
# + 'type - The type of action to perform (create, update, remove).
# + groupingBehavior - Defines the grouping behavior for the action and its children.
# + participant - Indicates who should participate in performing the action described.
# + output - Defines the outputs of the action, if any.
# + transform - A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.
# + dynamicValue - Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.
# + timingAge - An optional value describing when the action should be performed.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relatedAction - A relationship to another action such as 'before' or '30-60 minutes after start of'.
# + timingDuration - An optional value describing when the action should be performed.
# + textEquivalent - A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.
# + timingTiming - An optional value describing when the action should be performed.
# + documentation - Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.
# + trigger - A description of when the action should be triggered. When multiple triggers are specified on an action, any triggering event invokes the action.
# + priority - Indicates how quickly the action should be addressed with respect to other actions.
# + subjectReference - A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.
# + input - Defines input data requirements for the action.
# + requiredBehavior - Defines the required behavior for the action.
# + condition - An expression that describes applicability criteria or start/stop conditions for the action.
# + linkId - An identifier that is unique within the PlanDefinition to allow linkage within the realized CarePlan and/or RequestOrchestration.
# + selectionBehavior - Defines the selection behavior for the action and its children.
# + timingRange - An optional value describing when the action should be performed.
# + precheckBehavior - Defines whether the action should usually be preselected.
# + location - Identifies the facility where the action will occur; e.g. home, hospital, specific clinic, etc.
# + subjectCanonical - A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionAction",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A description of why this action is necessary or appropriate.",
            path: "PlanDefinition.action.reason"
        },
        "cardinalityBehavior": {
            name: "cardinalityBehavior",
            dataType: PublishablePlanDefinitionActionCardinalityBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines whether the action can be selected multiple times.",
            path: "PlanDefinition.action.cardinalityBehavior"
        },
        "definitionCanonical": {
            name: "definitionCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to an ActivityDefinition that describes the action to be taken in detail, a MessageDefinition describing a message to be snet, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
            path: "PlanDefinition.action.definition[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code that provides a meaning, grouping, or classification for the action or action group. For example, a section may have a LOINC code for the section of a documentation template. In pharmaceutical quality, an action (Test) such as pH could be classified as a physical property.",
            path: "PlanDefinition.action.code"
        },
        "goalId": {
            name: "goalId",
            dataType: r5:id,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition. In pharmaceutical quality, a goal represents acceptance criteria (Goal) for a given action (Test), so the goalId would be the unique id of a defined goal element establishing the acceptance criteria for the action.",
            path: "PlanDefinition.action.goalId"
        },
        "subjectCodeableConcept": {
            name: "subjectCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
            path: "PlanDefinition.action.subject[x]"
        },
        "prefix": {
            name: "prefix",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A user-visible prefix for the action. For example a section or item numbering such as 1. or A.",
            path: "PlanDefinition.action.prefix"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A brief description of the action used to provide a summary to display to the user.",
            path: "PlanDefinition.action.description"
        },
        "definitionUri": {
            name: "definitionUri",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to an ActivityDefinition that describes the action to be taken in detail, a MessageDefinition describing a message to be snet, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
            path: "PlanDefinition.action.definition[x]"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The textual description of the action displayed to a user. For example, when the action is a test to be performed, the title would be the title of the test such as Assay by HPLC.",
            path: "PlanDefinition.action.title"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of action to perform (create, update, remove).",
            path: "PlanDefinition.action.type"
        },
        "groupingBehavior": {
            name: "groupingBehavior",
            dataType: PublishablePlanDefinitionActionGroupingBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the grouping behavior for the action and its children.",
            path: "PlanDefinition.action.groupingBehavior"
        },
        "participant": {
            name: "participant",
            dataType: PublishablePlanDefinitionActionParticipant,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Indicates who should participate in performing the action described.",
            path: "PlanDefinition.action.participant"
        },
        "output": {
            name: "output",
            dataType: PublishablePlanDefinitionActionOutput,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Defines the outputs of the action, if any.",
            path: "PlanDefinition.action.output"
        },
        "transform": {
            name: "transform",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
            path: "PlanDefinition.action.transform"
        },
        "dynamicValue": {
            name: "dynamicValue",
            dataType: PublishablePlanDefinitionActionDynamicValue,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
            path: "PlanDefinition.action.dynamicValue"
        },
        "timingAge": {
            name: "timingAge",
            dataType: r5:Age,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "PlanDefinition.action.timing[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.id"
        },
        "relatedAction": {
            name: "relatedAction",
            dataType: PublishablePlanDefinitionActionRelatedAction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A relationship to another action such as 'before' or '30-60 minutes after start of'.",
            path: "PlanDefinition.action.relatedAction"
        },
        "timingDuration": {
            name: "timingDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "PlanDefinition.action.timing[x]"
        },
        "textEquivalent": {
            name: "textEquivalent",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
            path: "PlanDefinition.action.textEquivalent"
        },
        "timingTiming": {
            name: "timingTiming",
            dataType: r5:Timing,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "PlanDefinition.action.timing[x]"
        },
        "documentation": {
            name: "documentation",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
            path: "PlanDefinition.action.documentation"
        },
        "trigger": {
            name: "trigger",
            dataType: r5:TriggerDefinition,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A description of when the action should be triggered. When multiple triggers are specified on an action, any triggering event invokes the action.",
            path: "PlanDefinition.action.trigger"
        },
        "priority": {
            name: "priority",
            dataType: PublishablePlanDefinitionActionPriority,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how quickly the action should be addressed with respect to other actions.",
            path: "PlanDefinition.action.priority"
        },
        "subjectReference": {
            name: "subjectReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
            path: "PlanDefinition.action.subject[x]"
        },
        "input": {
            name: "input",
            dataType: PublishablePlanDefinitionActionInput,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Defines input data requirements for the action.",
            path: "PlanDefinition.action.input"
        },
        "requiredBehavior": {
            name: "requiredBehavior",
            dataType: PublishablePlanDefinitionActionRequiredBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the required behavior for the action.",
            path: "PlanDefinition.action.requiredBehavior"
        },
        "condition": {
            name: "condition",
            dataType: PublishablePlanDefinitionActionCondition,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An expression that describes applicability criteria or start/stop conditions for the action.",
            path: "PlanDefinition.action.condition"
        },
        "linkId": {
            name: "linkId",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier that is unique within the PlanDefinition to allow linkage within the realized CarePlan and/or RequestOrchestration.",
            path: "PlanDefinition.action.linkId"
        },
        "selectionBehavior": {
            name: "selectionBehavior",
            dataType: PublishablePlanDefinitionActionSelectionBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the selection behavior for the action and its children.",
            path: "PlanDefinition.action.selectionBehavior"
        },
        "timingRange": {
            name: "timingRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "PlanDefinition.action.timing[x]"
        },
        "precheckBehavior": {
            name: "precheckBehavior",
            dataType: PublishablePlanDefinitionActionPrecheckBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines whether the action should usually be preselected.",
            path: "PlanDefinition.action.precheckBehavior"
        },
        "location": {
            name: "location",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the facility where the action will occur; e.g. home, hospital, specific clinic, etc.",
            path: "PlanDefinition.action.location"
        },
        "subjectCanonical": {
            name: "subjectCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.",
            path: "PlanDefinition.action.subject[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionAction record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] reason?;
    PublishablePlanDefinitionActionCardinalityBehavior cardinalityBehavior?;
    r5:canonical definitionCanonical?;
    r5:Extension[] extension?;
    r5:CodeableConcept code?;
    r5:id[] goalId?;
    r5:CodeableConcept subjectCodeableConcept?;
    string prefix?;
    r5:Extension[] modifierExtension?;
    r5:markdown description?;
    r5:uri definitionUri?;
    string title?;
    r5:CodeableConcept 'type?;
    PublishablePlanDefinitionActionGroupingBehavior groupingBehavior?;
    PublishablePlanDefinitionActionParticipant[] participant?;
    PublishablePlanDefinitionActionOutput[] output?;
    r5:canonical transform?;
    PublishablePlanDefinitionActionDynamicValue[] dynamicValue?;
    r5:Age timingAge?;
    string id?;
    PublishablePlanDefinitionActionRelatedAction[] relatedAction?;
    r5:Duration timingDuration?;
    r5:markdown textEquivalent?;
    r5:Timing timingTiming?;
    r5:RelatedArtifact[] documentation?;
    r5:TriggerDefinition[] trigger?;
    PublishablePlanDefinitionActionPriority priority?;
    r5:Reference subjectReference?;
    PublishablePlanDefinitionActionInput[] input?;
    PublishablePlanDefinitionActionRequiredBehavior requiredBehavior?;
    PublishablePlanDefinitionActionCondition[] condition?;
    string linkId?;
    PublishablePlanDefinitionActionSelectionBehavior selectionBehavior?;
    r5:Range timingRange?;
    PublishablePlanDefinitionActionPrecheckBehavior precheckBehavior?;
    r5:CodeableReference location?;
    r5:canonical subjectCanonical?;
|};

# PublishablePlanDefinitionActionParticipantType enum
public enum PublishablePlanDefinitionActionParticipantType {
   CODE_TYPE_CARETEAM = "careteam",
   CODE_TYPE_PRACTITIONER = "practitioner",
   CODE_TYPE_PRACTITIONERROLE = "practitionerrole",
   CODE_TYPE_PATIENT = "patient",
   CODE_TYPE_ORGANIZATION = "organization",
   CODE_TYPE_LOCATION = "location",
   CODE_TYPE_RELATEDPERSON = "relatedperson",
   CODE_TYPE_DEVICE = "device",
   CODE_TYPE_HEALTHCARESERVICE = "healthcareservice",
   CODE_TYPE_GROUP = "group"
}

# PublishablePlanDefinitionActionRelatedActionEndRelationship enum
public enum PublishablePlanDefinitionActionRelatedActionEndRelationship {
   CODE_ENDRELATIONSHIP_AFTER_END = "after-end",
   CODE_ENDRELATIONSHIP_BEFORE = "before",
   CODE_ENDRELATIONSHIP_CONCURRENT = "concurrent",
   CODE_ENDRELATIONSHIP_CONCURRENT_WITH_START = "concurrent-with-start",
   CODE_ENDRELATIONSHIP_BEFORE_END = "before-end",
   CODE_ENDRELATIONSHIP_AFTER = "after",
   CODE_ENDRELATIONSHIP_CONCURRENT_WITH_END = "concurrent-with-end",
   CODE_ENDRELATIONSHIP_AFTER_START = "after-start",
   CODE_ENDRELATIONSHIP_BEFORE_START = "before-start"
}

# FHIR PublishablePlanDefinitionActorOption datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - The role the participant should play in performing the described action.
# + typeCanonical - The type of participant in the action.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + typeReference - The type of participant in the action.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of participant in the action.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActorOption",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.actor.option.extension"
        },
        "role": {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The role the participant should play in performing the described action.",
            path: "PlanDefinition.actor.option.role"
        },
        "typeCanonical": {
            name: "typeCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "PlanDefinition.actor.option.typeCanonical"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.actor.option.modifierExtension"
        },
        "typeReference": {
            name: "typeReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "PlanDefinition.actor.option.typeReference"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.actor.option.id"
        },
        "type": {
            name: "type",
            dataType: PublishablePlanDefinitionActorOptionType,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "PlanDefinition.actor.option.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActorOption record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept role?;
    r5:canonical typeCanonical?;
    r5:Extension[] modifierExtension?;
    r5:Reference typeReference?;
    string id?;
    PublishablePlanDefinitionActorOptionType 'type?;
|};

# PublishablePlanDefinitionRelatedArtifactType enum
public enum PublishablePlanDefinitionRelatedArtifactType {
   CODE_TYPE_SUCCESSOR = "successor",
   CODE_TYPE_COMMENT_IN = "comment-in",
   CODE_TYPE_CITED_BY = "cited-by",
   CODE_TYPE_RETRACTED_BY = "retracted-by",
   CODE_TYPE_TRANSFORMED_INTO = "transformed-into",
   CODE_TYPE_DOCUMENTS = "documents",
   CODE_TYPE_SPECIFICATION_OF = "specification-of",
   CODE_TYPE_TRANSFORMS = "transforms",
   CODE_TYPE_DERIVED_FROM = "derived-from",
   CODE_TYPE_PART_OF = "part-of",
   CODE_TYPE_SUPPORTED_WITH = "supported-with",
   CODE_TYPE_PREDECESSOR = "predecessor",
   CODE_TYPE_COMPOSED_OF = "composed-of",
   CODE_TYPE_DEPENDS_ON = "depends-on",
   CODE_TYPE_AMENDS = "amends",
   CODE_TYPE_RETRACTS = "retracts",
   CODE_TYPE_SIGNS = "signs",
   CODE_TYPE_CORRECTION_IN = "correction-in",
   CODE_TYPE_AMENDED_WITH = "amended-with",
   CODE_TYPE_CITES = "cites",
   CODE_TYPE_SUPPORTS = "supports",
   CODE_TYPE_JUSTIFICATION = "justification",
   CODE_TYPE_CONTAINED_IN = "contained-in",
   CODE_TYPE_REPLACED_WITH = "replaced-with",
   CODE_TYPE_CITATION = "citation",
   CODE_TYPE_TRANSFORMED_WITH = "transformed-with",
   CODE_TYPE_REPLACES = "replaces",
   CODE_TYPE_DOCUMENTATION = "documentation",
   CODE_TYPE_SIMILAR_TO = "similar-to",
   CODE_TYPE_APPENDS = "appends",
   CODE_TYPE_CREATED_WITH = "created-with",
   CODE_TYPE_CORRECTS = "corrects",
   CODE_TYPE_CITE_AS = "cite-as",
   CODE_TYPE_CONTAINS = "contains",
   CODE_TYPE_APPENDED_WITH = "appended-with",
   CODE_TYPE_COMMENTS_ON = "comments-on"
}

# FHIR PublishablePlanDefinitionActionOutput datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + relatedData - Points to an existing input or output element that is results as output from the action.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + requirement - Defines the data that results as output from the action.
# + title - A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActionOutput",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.output.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.output.modifierExtension"
        },
        "relatedData": {
            name: "relatedData",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Points to an existing input or output element that is results as output from the action.",
            path: "PlanDefinition.action.output.relatedData"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.output.id"
        },
        "requirement": {
            name: "requirement",
            dataType: r5:DataRequirement,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the data that results as output from the action.",
            path: "PlanDefinition.action.output.requirement"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
            path: "PlanDefinition.action.output.title"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActionOutput record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string relatedData?;
    string id?;
    r5:DataRequirement requirement?;
    string title?;
|};

# FHIR PublishablePlanDefinitionActionParticipant datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + actorId - A reference to the id element of the actor who will participate in this action.
# + role - The role the participant should play in performing the described action.
# + typeCanonical - The type of participant in the action.
# + 'function - Indicates how the actor will be involved in the action - author, reviewer, witness, etc.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + typeReference - The type of participant in the action.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of participant in the action.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActionParticipant",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.action.participant.extension"
        },
        "actorId": {
            name: "actorId",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to the id element of the actor who will participate in this action.",
            path: "PlanDefinition.action.participant.actorId"
        },
        "role": {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The role the participant should play in performing the described action.",
            path: "PlanDefinition.action.participant.role"
        },
        "typeCanonical": {
            name: "typeCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "PlanDefinition.action.participant.typeCanonical"
        },
        "function": {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how the actor will be involved in the action - author, reviewer, witness, etc.",
            path: "PlanDefinition.action.participant.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.action.participant.modifierExtension"
        },
        "typeReference": {
            name: "typeReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "PlanDefinition.action.participant.typeReference"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.action.participant.id"
        },
        "type": {
            name: "type",
            dataType: PublishablePlanDefinitionActionParticipantType,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "PlanDefinition.action.participant.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActionParticipant record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    string actorId?;
    r5:CodeableConcept role?;
    r5:canonical typeCanonical?;
    r5:CodeableConcept 'function?;
    r5:Extension[] modifierExtension?;
    r5:Reference typeReference?;
    string id?;
    PublishablePlanDefinitionActionParticipantType 'type?;
|};

# PublishablePlanDefinitionActionRelatedActionRelationship enum
public enum PublishablePlanDefinitionActionRelatedActionRelationship {
   CODE_RELATIONSHIP_AFTER_END = "after-end",
   CODE_RELATIONSHIP_BEFORE = "before",
   CODE_RELATIONSHIP_CONCURRENT = "concurrent",
   CODE_RELATIONSHIP_CONCURRENT_WITH_START = "concurrent-with-start",
   CODE_RELATIONSHIP_BEFORE_END = "before-end",
   CODE_RELATIONSHIP_AFTER = "after",
   CODE_RELATIONSHIP_CONCURRENT_WITH_END = "concurrent-with-end",
   CODE_RELATIONSHIP_AFTER_START = "after-start",
   CODE_RELATIONSHIP_BEFORE_START = "before-start"
}

# PublishablePlanDefinitionActionPrecheckBehavior enum
public enum PublishablePlanDefinitionActionPrecheckBehavior {
   CODE_PRECHECKBEHAVIOR_NO = "no",
   CODE_PRECHECKBEHAVIOR_YES = "yes"
}

# PublishablePlanDefinitionActionConditionKind enum
public enum PublishablePlanDefinitionActionConditionKind {
   CODE_KIND_STOP = "stop",
   CODE_KIND_START = "start",
   CODE_KIND_APPLICABILITY = "applicability"
}

# PublishablePlanDefinitionRelatedArtifactPublicationStatus enum
public enum PublishablePlanDefinitionRelatedArtifactPublicationStatus {
   CODE_PUBLICATIONSTATUS_DRAFT = "draft",
   CODE_PUBLICATIONSTATUS_ACTIVE = "active",
   CODE_PUBLICATIONSTATUS_RETIRED = "retired",
   CODE_PUBLICATIONSTATUS_UNKNOWN = "unknown"
}

# PublishablePlanDefinitionActionCardinalityBehavior enum
public enum PublishablePlanDefinitionActionCardinalityBehavior {
   CODE_CARDINALITYBEHAVIOR_SINGLE = "single",
   CODE_CARDINALITYBEHAVIOR_MULTIPLE = "multiple"
}

# PublishablePlanDefinitionStatus enum
public enum PublishablePlanDefinitionStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR PublishablePlanDefinitionActor datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A description of how the actor fits into the overall actions of the plan definition.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + title - A descriptive label for the actor.
# + option - The characteristics of the candidates that could serve as the actor.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionActor",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.actor.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.actor.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A description of how the actor fits into the overall actions of the plan definition.",
            path: "PlanDefinition.actor.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.actor.id"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A descriptive label for the actor.",
            path: "PlanDefinition.actor.title"
        },
        "option": {
            name: "option",
            dataType: PublishablePlanDefinitionActorOption,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The characteristics of the candidates that could serve as the actor.",
            path: "PlanDefinition.actor.option"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionActor record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:markdown description?;
    string id?;
    string title?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.PlanDefinition.actor.option constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.PlanDefinition.actor.option constraint. This field must be an array containing at most one item."
        }
    }
    PublishablePlanDefinitionActorOption[] option;
|};

# PublishablePlanDefinitionActionSelectionBehavior enum
public enum PublishablePlanDefinitionActionSelectionBehavior {
   CODE_SELECTIONBEHAVIOR_ALL = "all",
   CODE_SELECTIONBEHAVIOR_EXACTLY_ONE = "exactly-one",
   CODE_SELECTIONBEHAVIOR_AT_MOST_ONE = "at-most-one",
   CODE_SELECTIONBEHAVIOR_ALL_OR_NONE = "all-or-none",
   CODE_SELECTIONBEHAVIOR_ANY = "any",
   CODE_SELECTIONBEHAVIOR_ONE_OR_MORE = "one-or-more"
}

# PublishablePlanDefinitionActorOptionType enum
public enum PublishablePlanDefinitionActorOptionType {
   CODE_TYPE_CARETEAM = "careteam",
   CODE_TYPE_PRACTITIONER = "practitioner",
   CODE_TYPE_PRACTITIONERROLE = "practitionerrole",
   CODE_TYPE_PATIENT = "patient",
   CODE_TYPE_ORGANIZATION = "organization",
   CODE_TYPE_LOCATION = "location",
   CODE_TYPE_RELATEDPERSON = "relatedperson",
   CODE_TYPE_DEVICE = "device",
   CODE_TYPE_HEALTHCARESERVICE = "healthcareservice",
   CODE_TYPE_GROUP = "group"
}

# PublishablePlanDefinitionActionGroupingBehavior enum
public enum PublishablePlanDefinitionActionGroupingBehavior {
   CODE_GROUPINGBEHAVIOR_VISUAL_GROUP = "visual-group",
   CODE_GROUPINGBEHAVIOR_SENTENCE_GROUP = "sentence-group",
   CODE_GROUPINGBEHAVIOR_LOGICAL_GROUP = "logical-group"
}

# FHIR PublishablePlanDefinitionGoalTarget datatype record.
#
# + detailPlanDefinitionCodeableConcept - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
# + detailPlanDefinitionRatio - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + detailPlanDefinitionString - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
# + measure - The parameter whose value is to be tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.
# + due - Indicates the timeframe after the start of the goal in which the goal should be met.
# + detailPlanDefinitionQuantity - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + detailPlanDefinitionBoolean - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
# + detailPlanDefinitionInteger - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + detailPlanDefinitionRange - The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionGoalTarget",
    baseType: (),
    elements: {
        "detailPlanDefinitionCodeableConcept": {
            name: "detailPlanDefinitionCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        },
        "detailPlanDefinitionRatio": {
            name: "detailPlanDefinitionRatio",
            dataType: r5:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.goal.target.extension"
        },
        "detailPlanDefinitionString": {
            name: "detailPlanDefinitionString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        },
        "measure": {
            name: "measure",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The parameter whose value is to be tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.",
            path: "PlanDefinition.goal.target.measure"
        },
        "due": {
            name: "due",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the timeframe after the start of the goal in which the goal should be met.",
            path: "PlanDefinition.goal.target.due"
        },
        "detailPlanDefinitionQuantity": {
            name: "detailPlanDefinitionQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.goal.target.modifierExtension"
        },
        "detailPlanDefinitionBoolean": {
            name: "detailPlanDefinitionBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        },
        "detailPlanDefinitionInteger": {
            name: "detailPlanDefinitionInteger",
            dataType: r5:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.goal.target.id"
        },
        "detailPlanDefinitionRange": {
            name: "detailPlanDefinitionRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
            path: "PlanDefinition.goal.target.detail[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionGoalTarget record {|
    *r5:BackboneElement;

    r5:CodeableConcept detailPlanDefinitionCodeableConcept?;
    r5:Ratio detailPlanDefinitionRatio?;
    r5:Extension[] extension?;
    string detailPlanDefinitionString?;
    r5:CodeableConcept measure?;
    r5:Duration due?;
    r5:Quantity detailPlanDefinitionQuantity?;
    r5:Extension[] modifierExtension?;
    boolean detailPlanDefinitionBoolean?;
    r5:integer detailPlanDefinitionInteger?;
    string id?;
    r5:Range detailPlanDefinitionRange?;
|};

# PublishablePlanDefinitionActionRequiredBehavior enum
public enum PublishablePlanDefinitionActionRequiredBehavior {
   CODE_REQUIREDBEHAVIOR_COULD = "could",
   CODE_REQUIREDBEHAVIOR_MUST = "must",
   CODE_REQUIREDBEHAVIOR_MUST_UNLESS_DOCUMENTED = "must-unless-documented"
}

# FHIR PublishablePlanDefinitionGoal datatype record.
#
# + addresses - Identifies problems, conditions, issues, or concerns the goal is intended to address.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + documentation - Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + 'start - The event after which the goal should begin being pursued.
# + description - Human-readable and/or coded description of a specific desired objective of care, such as 'control blood pressure' or 'negotiate an obstacle course' or 'dance with child at wedding'.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - Indicates a category the goal falls within.
# + priority - Identifies the expected level of importance associated with reaching/sustaining the defined goal.
# + target - Indicates what should be done and within what timeframe.
@r5:DataTypeDefinition {
    name: "PublishablePlanDefinitionGoal",
    baseType: (),
    elements: {
        "addresses": {
            name: "addresses",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies problems, conditions, issues, or concerns the goal is intended to address.",
            path: "PlanDefinition.goal.addresses"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "PlanDefinition.goal.extension"
        },
        "documentation": {
            name: "documentation",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.",
            path: "PlanDefinition.goal.documentation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "PlanDefinition.goal.modifierExtension"
        },
        "start": {
            name: "start",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The event after which the goal should begin being pursued.",
            path: "PlanDefinition.goal.start"
        },
        "description": {
            name: "description",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Human-readable and/or coded description of a specific desired objective of care, such as 'control blood pressure' or 'negotiate an obstacle course' or 'dance with child at wedding'.",
            path: "PlanDefinition.goal.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "PlanDefinition.goal.id"
        },
        "category": {
            name: "category",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates a category the goal falls within.",
            path: "PlanDefinition.goal.category"
        },
        "priority": {
            name: "priority",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the expected level of importance associated with reaching/sustaining the defined goal.",
            path: "PlanDefinition.goal.priority"
        },
        "target": {
            name: "target",
            dataType: PublishablePlanDefinitionGoalTarget,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Indicates what should be done and within what timeframe.",
            path: "PlanDefinition.goal.target"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type PublishablePlanDefinitionGoal record {|
    *r5:BackboneElement;

    r5:CodeableConcept[] addresses?;
    r5:Extension[] extension?;
    r5:RelatedArtifact[] documentation?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept 'start?;
    r5:CodeableConcept description;
    string id?;
    r5:CodeableConcept category?;
    r5:CodeableConcept priority?;
    PublishablePlanDefinitionGoalTarget[] target?;
|};

