// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_REGULATEDAUTHORIZATION = "http://hl7.org/fhir/StructureDefinition/RegulatedAuthorization";
public const RESOURCE_NAME_REGULATEDAUTHORIZATION = "RegulatedAuthorization";

# FHIR RegulatedAuthorization resource record.
#
# + resourceType - The type of the resource describes
# + statusDate - The date at which the current status was assigned.
# + identifier - Business identifier for the authorization, typically assigned by the authorizing body.
# + attachedDocument - Additional information or supporting documentation about the authorization.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + subject - The product type, treatment, facility or activity that is being authorized.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - General textual supporting information.
# + holder - The organization that has been granted this authorization, by some authoritative body (the 'regulator').
# + language - The base language in which the resource is written.
# + basis - The legal or regulatory framework against which this authorization is granted, or other reasons for it.
# + 'type - Overall type of this authorization, for example drug marketing approval, orphan drug designation.
# + validityPeriod - The time period in which the regulatory approval, clearance or licencing is in effect. As an example, a Marketing Authorization includes the date of authorization and/or an expiration date.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + intendedUse - The intended use of the product, e.g. prevention, treatment, diagnosis.
# + regulator - The regulatory authority or authorizing body granting the authorization. For example, European Medicines Agency (EMA), Food and Drug Administration (FDA), Health Canada (HC), etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + indication - Condition for which the use of the regulated product applies.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + region - The territory (e.g., country, jurisdiction etc.) in which the authorization has been granted.
# + case - The case or regulatory procedure for granting or amending a regulated authorization. An authorization is granted in response to submissions/applications by those seeking authorization. A case is the administrative process that deals with the application(s) that relate to this and assesses them. Note: This area is subject to ongoing review and the workgroup is seeking implementer feedback on its use (see link at bottom of page).
# + status - The status that is authorised e.g. approved. Intermediate states and actions can be tracked with cases and applications.
@r5:ResourceDefinition {
    resourceType: "RegulatedAuthorization",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/RegulatedAuthorization",
    elements: {
        "statusDate" : {
            name: "statusDate",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.statusDate"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.identifier"
        },
        "attachedDocument" : {
            name: "attachedDocument",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.attachedDocument"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.extension"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.modifierExtension"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.description"
        },
        "holder" : {
            name: "holder",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.holder"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "basis" : {
            name: "basis",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.basis",
            valueSet: "http://hl7.org/fhir/ValueSet/regulated-authorization-basis"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.type",
            valueSet: "http://hl7.org/fhir/ValueSet/regulated-authorization-type"
        },
        "validityPeriod" : {
            name: "validityPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.validityPeriod"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.implicitRules"
        },
        "intendedUse" : {
            name: "intendedUse",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.intendedUse",
            valueSet: "http://hl7.org/fhir/ValueSet/product-intended-use"
        },
        "regulator" : {
            name: "regulator",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.regulator"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.id"
        },
        "indication" : {
            name: "indication",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.indication"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.text"
        },
        "region" : {
            name: "region",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RegulatedAuthorization.region",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "case" : {
            name: "case",
            dataType: RegulatedAuthorizationCase,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.case"
        },
        "status" : {
            name: "status",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RegulatedAuthorization.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type RegulatedAuthorization record {|
    *r5:DomainResource;

    RESOURCE_NAME_REGULATEDAUTHORIZATION resourceType = RESOURCE_NAME_REGULATEDAUTHORIZATION;

    r5:dateTime statusDate?;
    r5:Identifier[] identifier?;
    r5:Reference[] attachedDocument?;
    r5:Extension[] extension?;
    r5:Reference[] subject?;
    r5:Extension[] modifierExtension?;
    r5:markdown description?;
    r5:Reference holder?;
    r5:code language?;
    r5:CodeableConcept[] basis?;
    r5:CodeableConcept 'type?;
    r5:Period validityPeriod?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:CodeableConcept intendedUse?;
    r5:Reference regulator?;
    string id?;
    r5:CodeableReference[] indication?;
    r5:Narrative text?;
    r5:CodeableConcept[] region?;
    RegulatedAuthorizationCase case?;
    r5:CodeableConcept status?;
    r5:Element ...;
|};

# FHIR RegulatedAuthorizationCase datatype record.
#
# + dateDateTime - Relevant date for this case.
# + identifier - Identifier by which this case can be referenced.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + datePeriod - Relevant date for this case.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The defining type of case.
# + status - The status associated with the case.
@r5:DataTypeDefinition {
    name: "RegulatedAuthorizationCase",
    baseType: (),
    elements: {
        "dateDateTime": {
            name: "dateDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Relevant date for this case.",
            path: "RegulatedAuthorization.case.date[x]"
        },
        "identifier": {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifier by which this case can be referenced.",
            path: "RegulatedAuthorization.case.identifier"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RegulatedAuthorization.case.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RegulatedAuthorization.case.modifierExtension"
        },
        "datePeriod": {
            name: "datePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Relevant date for this case.",
            path: "RegulatedAuthorization.case.date[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RegulatedAuthorization.case.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The defining type of case.",
            path: "RegulatedAuthorization.case.type"
        },
        "status": {
            name: "status",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The status associated with the case.",
            path: "RegulatedAuthorization.case.status"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RegulatedAuthorizationCase record {|
    *r5:BackboneElement;

    r5:dateTime dateDateTime?;
    r5:Identifier identifier?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Period datePeriod?;
    string id?;
    r5:CodeableConcept 'type?;
    r5:CodeableConcept status?;
|};

