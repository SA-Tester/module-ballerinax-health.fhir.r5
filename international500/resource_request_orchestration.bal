// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_REQUESTORCHESTRATION = "http://hl7.org/fhir/StructureDefinition/RequestOrchestration";
public const RESOURCE_NAME_REQUESTORCHESTRATION = "RequestOrchestration";

# FHIR RequestOrchestration resource record.
#
# + resourceType - The type of the resource describes
# + note - Provides a mechanism to communicate additional information about the response.
# + reason - Describes the reason for the request orchestration in coded or textual form.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that identifies what the overall request orchestration is.
# + subject - The subject for which the request orchestration was created.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + instantiatesUri - A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
# + action - The actions, if any, produced by the evaluation of the artifact.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + basedOn - A plan, proposal or order that is fulfilled in whole or in part by this request.
# + identifier - Allows a service to provide a unique, business identifier for the request.
# + authoredOn - Indicates when the request orchestration was created.
# + goal - Goals that are intended to be achieved by following the requests in this RequestOrchestration.
# + author - Provides a reference to the author of the request orchestration.
# + replaces - Completed or terminated request(s) whose function is taken by this new request.
# + encounter - Describes the context of the request orchestration, if any.
# + instantiatesCanonical - A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
# + priority - Indicates how quickly the request should be addressed with respect to other requests.
# + intent - Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + groupIdentifier - A shared identifier common to multiple independent Request instances that were activated/authorized more or less simultaneously by a single author. The presence of the same identifier on each request ties those requests together and may have business ramifications in terms of reporting of results, billing, etc. E.g. a requisition number shared by a set of lab tests ordered together, or a prescription number shared by all meds ordered at one time.
# + status - The current state of the request. For request orchestrations, the status reflects the status of all the requests in the orchestration.
@r5:ResourceDefinition {
    resourceType: "RequestOrchestration",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/RequestOrchestration",
    elements: {
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.note"
        },
        "reason" : {
            name: "reason",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.reason",
            valueSet: "http://hl7.org/fhir/ValueSet/action-reason-code"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.extension"
        },
        "code" : {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.code",
            valueSet: "http://hl7.org/fhir/ValueSet/action-code"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "instantiatesUri" : {
            name: "instantiatesUri",
            dataType: r5:uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.instantiatesUri"
        },
        "action" : {
            name: "action",
            dataType: RequestOrchestrationAction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.action"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.text"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.basedOn"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.identifier"
        },
        "authoredOn" : {
            name: "authoredOn",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.authoredOn"
        },
        "goal" : {
            name: "goal",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.goal"
        },
        "author" : {
            name: "author",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.author"
        },
        "replaces" : {
            name: "replaces",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.replaces"
        },
        "encounter" : {
            name: "encounter",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.encounter"
        },
        "instantiatesCanonical" : {
            name: "instantiatesCanonical",
            dataType: r5:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.instantiatesCanonical"
        },
        "priority" : {
            name: "priority",
            dataType: RequestOrchestrationPriority,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/request-priority|5.0.0"
        },
        "intent" : {
            name: "intent",
            dataType: RequestOrchestrationIntent,
            min: 1,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.intent",
            valueSet: "http://hl7.org/fhir/ValueSet/request-intent|5.0.0"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestOrchestration.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.implicitRules"
        },
        "groupIdentifier" : {
            name: "groupIdentifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.groupIdentifier"
        },
        "status" : {
            name: "status",
            dataType: RequestOrchestrationStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "RequestOrchestration.status",
            valueSet: "http://hl7.org/fhir/ValueSet/request-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type RequestOrchestration record {|
    *r5:DomainResource;

    RESOURCE_NAME_REQUESTORCHESTRATION resourceType = RESOURCE_NAME_REQUESTORCHESTRATION;

    r5:Annotation[] note?;
    r5:CodeableReference[] reason?;
    r5:Extension[] extension?;
    r5:CodeableConcept code?;
    r5:Reference subject?;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    r5:uri[] instantiatesUri?;
    RequestOrchestrationAction[] action?;
    string id?;
    r5:Narrative text?;
    r5:Reference[] basedOn?;
    r5:Identifier[] identifier?;
    r5:dateTime authoredOn?;
    r5:Reference[] goal?;
    r5:Reference author?;
    r5:Reference[] replaces?;
    r5:Reference encounter?;
    r5:canonical[] instantiatesCanonical?;
    RequestOrchestrationPriority priority?;
    RequestOrchestrationIntent intent;
    r5:Resource[] contained?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:Identifier groupIdentifier?;
    RequestOrchestrationStatus status;
    r5:Element ...;
|};

# FHIR RequestOrchestrationActionParticipant datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - The role the participant should play in performing the described action.
# + actorRequestOrchestrationReference - A reference to the actual participant.
# + typeCanonical - The type of participant in the action.
# + 'function - Indicates how the actor will be involved in the action - author, reviewer, witness, etc.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + typeReference - The type of participant in the action.
# + actorRequestOrchestrationCanonical - A reference to the actual participant.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of participant in the action.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationActionParticipant",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.participant.extension"
        },
        "role": {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The role the participant should play in performing the described action.",
            path: "RequestOrchestration.action.participant.role"
        },
        "actorRequestOrchestrationReference": {
            name: "actorRequestOrchestrationReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to the actual participant.",
            path: "RequestOrchestration.action.participant.actor[x]"
        },
        "typeCanonical": {
            name: "typeCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "RequestOrchestration.action.participant.typeCanonical"
        },
        "function": {
            name: "function",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how the actor will be involved in the action - author, reviewer, witness, etc.",
            path: "RequestOrchestration.action.participant.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.participant.modifierExtension"
        },
        "typeReference": {
            name: "typeReference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "RequestOrchestration.action.participant.typeReference"
        },
        "actorRequestOrchestrationCanonical": {
            name: "actorRequestOrchestrationCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to the actual participant.",
            path: "RequestOrchestration.action.participant.actor[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.participant.id"
        },
        "type": {
            name: "type",
            dataType: RequestOrchestrationActionParticipantType,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of participant in the action.",
            path: "RequestOrchestration.action.participant.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationActionParticipant record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept role?;
    r5:Reference actorRequestOrchestrationReference?;
    r5:canonical typeCanonical?;
    r5:CodeableConcept 'function?;
    r5:Extension[] modifierExtension?;
    r5:Reference typeReference?;
    r5:canonical actorRequestOrchestrationCanonical?;
    string id?;
    RequestOrchestrationActionParticipantType 'type?;
|};

# RequestOrchestrationActionRequiredBehavior enum
public enum RequestOrchestrationActionRequiredBehavior {
   CODE_REQUIREDBEHAVIOR_COULD = "could",
   CODE_REQUIREDBEHAVIOR_MUST = "must",
   CODE_REQUIREDBEHAVIOR_MUST_UNLESS_DOCUMENTED = "must-unless-documented"
}

# FHIR RequestOrchestrationActionOutput datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + relatedData - Points to an existing input or output element that is results as output from the action.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + requirement - Defines the data that results as output from the action.
# + title - A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationActionOutput",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.output.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.output.modifierExtension"
        },
        "relatedData": {
            name: "relatedData",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Points to an existing input or output element that is results as output from the action.",
            path: "RequestOrchestration.action.output.relatedData"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.output.id"
        },
        "requirement": {
            name: "requirement",
            dataType: r5:DataRequirement,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the data that results as output from the action.",
            path: "RequestOrchestration.action.output.requirement"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
            path: "RequestOrchestration.action.output.title"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationActionOutput record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string relatedData?;
    string id?;
    r5:DataRequirement requirement?;
    string title?;
|};

# RequestOrchestrationActionParticipantType enum
public enum RequestOrchestrationActionParticipantType {
   CODE_TYPE_CARETEAM = "careteam",
   CODE_TYPE_PRACTITIONER = "practitioner",
   CODE_TYPE_PRACTITIONERROLE = "practitionerrole",
   CODE_TYPE_PATIENT = "patient",
   CODE_TYPE_ORGANIZATION = "organization",
   CODE_TYPE_LOCATION = "location",
   CODE_TYPE_RELATEDPERSON = "relatedperson",
   CODE_TYPE_DEVICE = "device",
   CODE_TYPE_HEALTHCARESERVICE = "healthcareservice",
   CODE_TYPE_GROUP = "group"
}

# FHIR RequestOrchestrationActionRelatedAction datatype record.
#
# + offsetRequestOrchestrationRange - A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + targetId - The element id of the target related action.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + endRelationship - The relationship of the end of this action to the related action.
# + offsetRequestOrchestrationDuration - A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - The relationship of this action to the related action.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationActionRelatedAction",
    baseType: (),
    elements: {
        "offsetRequestOrchestrationRange": {
            name: "offsetRequestOrchestrationRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
            path: "RequestOrchestration.action.relatedAction.offset[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.relatedAction.extension"
        },
        "targetId": {
            name: "targetId",
            dataType: r5:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "The element id of the target related action.",
            path: "RequestOrchestration.action.relatedAction.targetId"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.relatedAction.modifierExtension"
        },
        "endRelationship": {
            name: "endRelationship",
            dataType: RequestOrchestrationActionRelatedActionEndRelationship,
            min: 0,
            max: 1,
            isArray: false,
            description: "The relationship of the end of this action to the related action.",
            path: "RequestOrchestration.action.relatedAction.endRelationship"
        },
        "offsetRequestOrchestrationDuration": {
            name: "offsetRequestOrchestrationDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
            path: "RequestOrchestration.action.relatedAction.offset[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.relatedAction.id"
        },
        "relationship": {
            name: "relationship",
            dataType: RequestOrchestrationActionRelatedActionRelationship,
            min: 1,
            max: 1,
            isArray: false,
            description: "The relationship of this action to the related action.",
            path: "RequestOrchestration.action.relatedAction.relationship"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationActionRelatedAction record {|
    *r5:BackboneElement;

    r5:Range offsetRequestOrchestrationRange?;
    r5:Extension[] extension?;
    r5:id targetId;
    r5:Extension[] modifierExtension?;
    RequestOrchestrationActionRelatedActionEndRelationship endRelationship?;
    r5:Duration offsetRequestOrchestrationDuration?;
    string id?;
    RequestOrchestrationActionRelatedActionRelationship relationship;
|};

# RequestOrchestrationActionPrecheckBehavior enum
public enum RequestOrchestrationActionPrecheckBehavior {
   CODE_PRECHECKBEHAVIOR_NO = "no",
   CODE_PRECHECKBEHAVIOR_YES = "yes"
}

# RequestOrchestrationStatus enum
public enum RequestOrchestrationStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_COMPLETED = "completed",
   CODE_STATUS_REVOKED = "revoked",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_ON_HOLD = "on-hold",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR RequestOrchestrationActionCondition datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + expression - An expression that returns true or false, indicating whether or not the condition is satisfied.
# + kind - The kind of condition.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationActionCondition",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.condition.extension"
        },
        "expression": {
            name: "expression",
            dataType: r5:Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression that returns true or false, indicating whether or not the condition is satisfied.",
            path: "RequestOrchestration.action.condition.expression"
        },
        "kind": {
            name: "kind",
            dataType: RequestOrchestrationActionConditionKind,
            min: 1,
            max: 1,
            isArray: false,
            description: "The kind of condition.",
            path: "RequestOrchestration.action.condition.kind"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.condition.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.condition.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationActionCondition record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Expression expression?;
    RequestOrchestrationActionConditionKind kind;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# FHIR RequestOrchestrationAction datatype record.
#
# + cardinalityBehavior - Defines whether the action can be selected multiple times.
# + definitionCanonical - A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.
# + prefix - A user-visible prefix for the action. For example a section or item numbering such as 1. or A.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A short description of the action used to provide a summary to display to the user.
# + definitionUri - A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.
# + title - The title of the action displayed to a user.
# + 'type - The type of action to perform (create, update, remove).
# + groupingBehavior - Defines the grouping behavior for the action and its children.
# + participant - The participant that should perform or be responsible for this action.
# + output - Defines the outputs of the action, if any.
# + transform - A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.
# + dynamicValue - Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.
# + timingAge - An optional value describing when the action should be performed.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relatedAction - A relationship to another action such as 'before' or '30-60 minutes after start of'.
# + timingDuration - An optional value describing when the action should be performed.
# + textEquivalent - A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.
# + goal - Goals that are intended to be achieved by following the requests in this action.
# + timingTiming - An optional value describing when the action should be performed.
# + 'resource - The resource that is the target of the action (e.g. CommunicationRequest).
# + timingPeriod - An optional value describing when the action should be performed.
# + documentation - Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.
# + priority - Indicates how quickly the action should be addressed with respect to other actions.
# + input - Defines input data requirements for the action.
# + requiredBehavior - Defines expectations around whether an action is required.
# + condition - An expression that describes applicability criteria, or start/stop conditions for the action.
# + linkId - The linkId of the action from the PlanDefinition that corresponds to this action in the RequestOrchestration resource.
# + selectionBehavior - Defines the selection behavior for the action and its children.
# + timingRange - An optional value describing when the action should be performed.
# + precheckBehavior - Defines whether the action should usually be preselected.
# + location - Identifies the facility where the action will occur; e.g. home, hospital, specific clinic, etc.
# + timingDateTime - An optional value describing when the action should be performed.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationAction",
    baseType: (),
    elements: {
        "cardinalityBehavior": {
            name: "cardinalityBehavior",
            dataType: RequestOrchestrationActionCardinalityBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines whether the action can be selected multiple times.",
            path: "RequestOrchestration.action.cardinalityBehavior"
        },
        "definitionCanonical": {
            name: "definitionCanonical",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
            path: "RequestOrchestration.action.definition[x]"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.extension"
        },
        "code": {
            name: "code",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.",
            path: "RequestOrchestration.action.code"
        },
        "prefix": {
            name: "prefix",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A user-visible prefix for the action. For example a section or item numbering such as 1. or A.",
            path: "RequestOrchestration.action.prefix"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short description of the action used to provide a summary to display to the user.",
            path: "RequestOrchestration.action.description"
        },
        "definitionUri": {
            name: "definitionUri",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to an ActivityDefinition that describes the action to be taken in detail, a PlanDefinition that describes a series of actions to be taken, a Questionnaire that should be filled out, a SpecimenDefinition describing a specimen to be collected, or an ObservationDefinition that specifies what observation should be captured.",
            path: "RequestOrchestration.action.definition[x]"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The title of the action displayed to a user.",
            path: "RequestOrchestration.action.title"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of action to perform (create, update, remove).",
            path: "RequestOrchestration.action.type"
        },
        "groupingBehavior": {
            name: "groupingBehavior",
            dataType: RequestOrchestrationActionGroupingBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the grouping behavior for the action and its children.",
            path: "RequestOrchestration.action.groupingBehavior"
        },
        "participant": {
            name: "participant",
            dataType: RequestOrchestrationActionParticipant,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The participant that should perform or be responsible for this action.",
            path: "RequestOrchestration.action.participant"
        },
        "output": {
            name: "output",
            dataType: RequestOrchestrationActionOutput,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Defines the outputs of the action, if any.",
            path: "RequestOrchestration.action.output"
        },
        "transform": {
            name: "transform",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
            path: "RequestOrchestration.action.transform"
        },
        "dynamicValue": {
            name: "dynamicValue",
            dataType: RequestOrchestrationActionDynamicValue,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
            path: "RequestOrchestration.action.dynamicValue"
        },
        "timingAge": {
            name: "timingAge",
            dataType: r5:Age,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestOrchestration.action.timing[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.id"
        },
        "relatedAction": {
            name: "relatedAction",
            dataType: RequestOrchestrationActionRelatedAction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A relationship to another action such as 'before' or '30-60 minutes after start of'.",
            path: "RequestOrchestration.action.relatedAction"
        },
        "timingDuration": {
            name: "timingDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestOrchestration.action.timing[x]"
        },
        "textEquivalent": {
            name: "textEquivalent",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
            path: "RequestOrchestration.action.textEquivalent"
        },
        "goal": {
            name: "goal",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Goals that are intended to be achieved by following the requests in this action.",
            path: "RequestOrchestration.action.goal"
        },
        "timingTiming": {
            name: "timingTiming",
            dataType: r5:Timing,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestOrchestration.action.timing[x]"
        },
        "resource": {
            name: "resource",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The resource that is the target of the action (e.g. CommunicationRequest).",
            path: "RequestOrchestration.action.resource"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestOrchestration.action.timing[x]"
        },
        "documentation": {
            name: "documentation",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
            path: "RequestOrchestration.action.documentation"
        },
        "priority": {
            name: "priority",
            dataType: RequestOrchestrationActionPriority,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how quickly the action should be addressed with respect to other actions.",
            path: "RequestOrchestration.action.priority"
        },
        "input": {
            name: "input",
            dataType: RequestOrchestrationActionInput,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Defines input data requirements for the action.",
            path: "RequestOrchestration.action.input"
        },
        "requiredBehavior": {
            name: "requiredBehavior",
            dataType: RequestOrchestrationActionRequiredBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines expectations around whether an action is required.",
            path: "RequestOrchestration.action.requiredBehavior"
        },
        "condition": {
            name: "condition",
            dataType: RequestOrchestrationActionCondition,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An expression that describes applicability criteria, or start/stop conditions for the action.",
            path: "RequestOrchestration.action.condition"
        },
        "linkId": {
            name: "linkId",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The linkId of the action from the PlanDefinition that corresponds to this action in the RequestOrchestration resource.",
            path: "RequestOrchestration.action.linkId"
        },
        "selectionBehavior": {
            name: "selectionBehavior",
            dataType: RequestOrchestrationActionSelectionBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the selection behavior for the action and its children.",
            path: "RequestOrchestration.action.selectionBehavior"
        },
        "timingRange": {
            name: "timingRange",
            dataType: r5:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestOrchestration.action.timing[x]"
        },
        "precheckBehavior": {
            name: "precheckBehavior",
            dataType: RequestOrchestrationActionPrecheckBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines whether the action should usually be preselected.",
            path: "RequestOrchestration.action.precheckBehavior"
        },
        "location": {
            name: "location",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the facility where the action will occur; e.g. home, hospital, specific clinic, etc.",
            path: "RequestOrchestration.action.location"
        },
        "timingDateTime": {
            name: "timingDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestOrchestration.action.timing[x]"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationAction record {|
    *r5:BackboneElement;

    RequestOrchestrationActionCardinalityBehavior cardinalityBehavior?;
    r5:canonical definitionCanonical?;
    r5:Extension[] extension?;
    r5:CodeableConcept[] code?;
    string prefix?;
    r5:Extension[] modifierExtension?;
    r5:markdown description?;
    r5:uri definitionUri?;
    string title?;
    r5:CodeableConcept 'type?;
    RequestOrchestrationActionGroupingBehavior groupingBehavior?;
    RequestOrchestrationActionParticipant[] participant?;
    RequestOrchestrationActionOutput[] output?;
    r5:canonical transform?;
    RequestOrchestrationActionDynamicValue[] dynamicValue?;
    r5:Age timingAge?;
    string id?;
    RequestOrchestrationActionRelatedAction[] relatedAction?;
    r5:Duration timingDuration?;
    r5:markdown textEquivalent?;
    r5:Reference[] goal?;
    r5:Timing timingTiming?;
    r5:Reference 'resource?;
    r5:Period timingPeriod?;
    r5:RelatedArtifact[] documentation?;
    RequestOrchestrationActionPriority priority?;
    RequestOrchestrationActionInput[] input?;
    RequestOrchestrationActionRequiredBehavior requiredBehavior?;
    RequestOrchestrationActionCondition[] condition?;
    string linkId?;
    RequestOrchestrationActionSelectionBehavior selectionBehavior?;
    r5:Range timingRange?;
    RequestOrchestrationActionPrecheckBehavior precheckBehavior?;
    r5:CodeableReference location?;
    r5:dateTime timingDateTime?;
|};

# RequestOrchestrationIntent enum
public enum RequestOrchestrationIntent {
   CODE_INTENT_PROPOSAL = "proposal",
   CODE_INTENT_INSTANCE_ORDER = "instance-order",
   CODE_INTENT_FILLER_ORDER = "filler-order",
   CODE_INTENT_ORIGINAL_ORDER = "original-order",
   CODE_INTENT_REFLEX_ORDER = "reflex-order",
   CODE_INTENT_PLAN = "plan",
   CODE_INTENT_DIRECTIVE = "directive",
   CODE_INTENT_ORDER = "order",
   CODE_INTENT_OPTION = "option"
}

# RequestOrchestrationActionGroupingBehavior enum
public enum RequestOrchestrationActionGroupingBehavior {
   CODE_GROUPINGBEHAVIOR_VISUAL_GROUP = "visual-group",
   CODE_GROUPINGBEHAVIOR_SENTENCE_GROUP = "sentence-group",
   CODE_GROUPINGBEHAVIOR_LOGICAL_GROUP = "logical-group"
}

# FHIR RequestOrchestrationActionInput datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + relatedData - Points to an existing input or output element that provides data to this input.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + requirement - Defines the data that is to be provided as input to the action.
# + title - A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationActionInput",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.input.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.input.modifierExtension"
        },
        "relatedData": {
            name: "relatedData",
            dataType: r5:id,
            min: 0,
            max: 1,
            isArray: false,
            description: "Points to an existing input or output element that provides data to this input.",
            path: "RequestOrchestration.action.input.relatedData"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.input.id"
        },
        "requirement": {
            name: "requirement",
            dataType: r5:DataRequirement,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the data that is to be provided as input to the action.",
            path: "RequestOrchestration.action.input.requirement"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human-readable label for the data requirement used to label data flows in BPMN or similar diagrams. Also provides a human readable label when rendering the data requirement that conveys its purpose to human readers.",
            path: "RequestOrchestration.action.input.title"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationActionInput record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:id relatedData?;
    string id?;
    r5:DataRequirement requirement?;
    string title?;
|};

# RequestOrchestrationActionConditionKind enum
public enum RequestOrchestrationActionConditionKind {
   CODE_KIND_STOP = "stop",
   CODE_KIND_START = "start",
   CODE_KIND_APPLICABILITY = "applicability"
}

# RequestOrchestrationActionRelatedActionRelationship enum
public enum RequestOrchestrationActionRelatedActionRelationship {
   CODE_RELATIONSHIP_AFTER_END = "after-end",
   CODE_RELATIONSHIP_BEFORE = "before",
   CODE_RELATIONSHIP_CONCURRENT = "concurrent",
   CODE_RELATIONSHIP_CONCURRENT_WITH_START = "concurrent-with-start",
   CODE_RELATIONSHIP_BEFORE_END = "before-end",
   CODE_RELATIONSHIP_AFTER = "after",
   CODE_RELATIONSHIP_CONCURRENT_WITH_END = "concurrent-with-end",
   CODE_RELATIONSHIP_AFTER_START = "after-start",
   CODE_RELATIONSHIP_BEFORE_START = "before-start"
}

# RequestOrchestrationActionCardinalityBehavior enum
public enum RequestOrchestrationActionCardinalityBehavior {
   CODE_CARDINALITYBEHAVIOR_SINGLE = "single",
   CODE_CARDINALITYBEHAVIOR_MULTIPLE = "multiple"
}

# RequestOrchestrationActionRelatedActionEndRelationship enum
public enum RequestOrchestrationActionRelatedActionEndRelationship {
   CODE_ENDRELATIONSHIP_AFTER_END = "after-end",
   CODE_ENDRELATIONSHIP_BEFORE = "before",
   CODE_ENDRELATIONSHIP_CONCURRENT = "concurrent",
   CODE_ENDRELATIONSHIP_CONCURRENT_WITH_START = "concurrent-with-start",
   CODE_ENDRELATIONSHIP_BEFORE_END = "before-end",
   CODE_ENDRELATIONSHIP_AFTER = "after",
   CODE_ENDRELATIONSHIP_CONCURRENT_WITH_END = "concurrent-with-end",
   CODE_ENDRELATIONSHIP_AFTER_START = "after-start",
   CODE_ENDRELATIONSHIP_BEFORE_START = "before-start"
}

# RequestOrchestrationActionSelectionBehavior enum
public enum RequestOrchestrationActionSelectionBehavior {
   CODE_SELECTIONBEHAVIOR_ALL = "all",
   CODE_SELECTIONBEHAVIOR_EXACTLY_ONE = "exactly-one",
   CODE_SELECTIONBEHAVIOR_AT_MOST_ONE = "at-most-one",
   CODE_SELECTIONBEHAVIOR_ALL_OR_NONE = "all-or-none",
   CODE_SELECTIONBEHAVIOR_ANY = "any",
   CODE_SELECTIONBEHAVIOR_ONE_OR_MORE = "one-or-more"
}

# RequestOrchestrationActionPriority enum
public enum RequestOrchestrationActionPriority {
   CODE_PRIORITY_STAT = "stat",
   CODE_PRIORITY_ROUTINE = "routine",
   CODE_PRIORITY_URGENT = "urgent",
   CODE_PRIORITY_ASAP = "asap"
}

# FHIR RequestOrchestrationActionDynamicValue datatype record.
#
# + path - The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolvable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + expression - An expression specifying the value of the customized element.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "RequestOrchestrationActionDynamicValue",
    baseType: (),
    elements: {
        "path": {
            name: "path",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolvable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
            path: "RequestOrchestration.action.dynamicValue.path"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestOrchestration.action.dynamicValue.extension"
        },
        "expression": {
            name: "expression",
            dataType: r5:Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression specifying the value of the customized element.",
            path: "RequestOrchestration.action.dynamicValue.expression"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestOrchestration.action.dynamicValue.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestOrchestration.action.dynamicValue.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type RequestOrchestrationActionDynamicValue record {|
    *r5:BackboneElement;

    string path?;
    r5:Extension[] extension?;
    r5:Expression expression?;
    r5:Extension[] modifierExtension?;
    string id?;
|};

# RequestOrchestrationPriority enum
public enum RequestOrchestrationPriority {
   CODE_PRIORITY_STAT = "stat",
   CODE_PRIORITY_ROUTINE = "routine",
   CODE_PRIORITY_URGENT = "urgent",
   CODE_PRIORITY_ASAP = "asap"
}

