// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_RESEARCHSTUDY = "http://hl7.org/fhir/StructureDefinition/ResearchStudy";
public const RESOURCE_NAME_RESEARCHSTUDY = "ResearchStudy";

# FHIR ResearchStudy resource record.
#
# + resourceType - The type of the resource describes
# + date - The date (and optionally time) when the ResearchStudy Resource was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the ResearchStudy Resource changes.
# + note - Comments made about the study by the performer, subject or other participants.
# + partOf - A larger research study of which this particular study is a component or step.
# + descriptionSummary - A brief text for explaining the study.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + studyDesign - Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc.
# + description - A detailed and human-readable narrative of the study. E.g., study abstract.
# + focus - The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about.
# + primaryPurposeType - The type of study based upon the intent of the study activities. A classification of the intent of the study.
# + language - The base language in which the resource is written.
# + title - The human readable name of the research study.
# + objective - A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study.
# + result - Link to one or more sets of results generated by the study. Could also link to a research registry holding the results such as ClinicalTrials.gov.
# + protocol - The set of steps expected to be performed as part of the execution of the study.
# + recruitment - Target or actual group of participants enrolled in study.
# + classifier - Additional grouping mechanism or categorization of a research study. Example: FDA regulated device, FDA regulated drug, MPG Paragraph 23b (a German legal requirement), IRB-exempt, etc. Implementation Note: do not use the classifier element to support existing semantics that are already supported thru explicit elements in the resource.
# + outcomeMeasure - An 'outcome measure', 'endpoint', 'effect measure' or 'measure of effect' is a specific measurement or observation used to quantify the effect of experimental variables on the participants in a study, or for observational studies, to describe patterns of diseases or traits or associations with exposures, risk factors or treatment.
# + progressStatus - Status of study with time for that status.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + keyword - Key terms to aid in searching for or filtering the study.
# + phase - The stage in the progression of a therapy from initial experimental use in humans in clinical trials to post-market evaluation.
# + identifier - Identifiers assigned to this research study by the sponsor or other systems.
# + period - Identifies the start date and the expected (or actual, depending on status) end date for the study.
# + whyStopped - A description and/or code explaining the premature termination of the study.
# + relatedArtifact - Citations, references, URLs and other related documents. When using relatedArtifact to share URLs, the relatedArtifact.type will often be set to one of 'documentation' or 'supported-with' and the URL value will often be in relatedArtifact.document.url but another possible location is relatedArtifact.resource when it is a canonical URL.
# + label - Additional names for the study.
# + 'version - The business version for the study record.
# + url - Canonical identifier for this study resource, represented as a globally unique URI.
# + condition - The condition that is the focus of the study. For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion 'healthy volunteer', but the target condition code would be a Lupus SNOMED code.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + site - A facility in which study activities are conducted.
# + comparisonGroup - Describes an expected event or sequence of events for one of the subjects of a study. E.g. for a living subject: exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up. E.g. for a stability study: {store sample from lot A at 25 degrees for 1 month}, {store sample from lot A at 40 degrees for 1 month}.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - Name for this study (computer friendly).
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + region - A country, state or other area where the study is taking place rather than its precise geographic location or address.
# + associatedParty - Sponsors, collaborators, and other parties.
# + status - The publication state of the resource (not of the study).
@r5:ResourceDefinition {
    resourceType: "ResearchStudy",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/ResearchStudy",
    elements: {
        "date" : {
            name: "date",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.date"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.partOf"
        },
        "descriptionSummary" : {
            name: "descriptionSummary",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.descriptionSummary"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.extension"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.modifierExtension"
        },
        "studyDesign" : {
            name: "studyDesign",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.studyDesign",
            valueSet: "http://hl7.org/fhir/ValueSet/study-design"
        },
        "description" : {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.description"
        },
        "focus" : {
            name: "focus",
            dataType: r5:CodeableReference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.focus",
            valueSet: "http://hl7.org/fhir/ValueSet/research-study-focus-type"
        },
        "primaryPurposeType" : {
            name: "primaryPurposeType",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.primaryPurposeType",
            valueSet: "http://hl7.org/fhir/ValueSet/research-study-prim-purp-type"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "title" : {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.title"
        },
        "objective" : {
            name: "objective",
            dataType: ResearchStudyObjective,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.objective"
        },
        "result" : {
            name: "result",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.result"
        },
        "protocol" : {
            name: "protocol",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.protocol"
        },
        "recruitment" : {
            name: "recruitment",
            dataType: ResearchStudyRecruitment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.recruitment"
        },
        "classifier" : {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.classifier",
            valueSet: "http://hl7.org/fhir/ValueSet/research-study-classifiers"
        },
        "outcomeMeasure" : {
            name: "outcomeMeasure",
            dataType: ResearchStudyOutcomeMeasure,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.outcomeMeasure"
        },
        "progressStatus" : {
            name: "progressStatus",
            dataType: ResearchStudyProgressStatus,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.progressStatus"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.text"
        },
        "keyword" : {
            name: "keyword",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.keyword"
        },
        "phase" : {
            name: "phase",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.phase",
            valueSet: "http://hl7.org/fhir/ValueSet/research-study-phase"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.identifier"
        },
        "period" : {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.period"
        },
        "whyStopped" : {
            name: "whyStopped",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.whyStopped",
            valueSet: "http://hl7.org/fhir/ValueSet/research-study-reason-stopped"
        },
        "relatedArtifact" : {
            name: "relatedArtifact",
            dataType: r5:RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.relatedArtifact"
        },
        "label" : {
            name: "label",
            dataType: ResearchStudyLabel,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.label"
        },
        "version" : {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.version"
        },
        "url" : {
            name: "url",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.url"
        },
        "condition" : {
            name: "condition",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.condition",
            valueSet: "http://hl7.org/fhir/ValueSet/condition-code"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.contained"
        },
        "site" : {
            name: "site",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.site"
        },
        "comparisonGroup" : {
            name: "comparisonGroup",
            dataType: ResearchStudyComparisonGroup,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.comparisonGroup"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.meta"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ResearchStudy.implicitRules"
        },
        "region" : {
            name: "region",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.region",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "associatedParty" : {
            name: "associatedParty",
            dataType: ResearchStudyAssociatedParty,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ResearchStudy.associatedParty"
        },
        "status" : {
            name: "status",
            dataType: ResearchStudyStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ResearchStudy.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type ResearchStudy record {|
    *r5:DomainResource;

    RESOURCE_NAME_RESEARCHSTUDY resourceType = RESOURCE_NAME_RESEARCHSTUDY;

    r5:dateTime date?;
    r5:Annotation[] note?;
    r5:Reference[] partOf?;
    r5:markdown descriptionSummary?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] studyDesign?;
    r5:markdown description?;
    r5:CodeableReference[] focus?;
    r5:CodeableConcept primaryPurposeType?;
    r5:code language?;
    string title?;
    ResearchStudyObjective[] objective?;
    r5:Reference[] result?;
    r5:Reference[] protocol?;
    ResearchStudyRecruitment recruitment?;
    r5:CodeableConcept[] classifier?;
    ResearchStudyOutcomeMeasure[] outcomeMeasure?;
    ResearchStudyProgressStatus[] progressStatus?;
    string id?;
    r5:Narrative text?;
    r5:CodeableConcept[] keyword?;
    r5:CodeableConcept phase?;
    r5:Identifier[] identifier?;
    r5:Period period?;
    r5:CodeableConcept whyStopped?;
    r5:RelatedArtifact[] relatedArtifact?;
    ResearchStudyLabel[] label?;
    string 'version?;
    r5:uri url?;
    r5:CodeableConcept[] condition?;
    r5:Resource[] contained?;
    r5:Reference[] site?;
    ResearchStudyComparisonGroup[] comparisonGroup?;
    r5:Meta meta?;
    string name?;
    r5:uri implicitRules?;
    r5:CodeableConcept[] region?;
    ResearchStudyAssociatedParty[] associatedParty?;
    ResearchStudyStatus status;
    r5:Element ...;
|};

# FHIR ResearchStudyLabel datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Kind of name.
# + value - The name.
@r5:DataTypeDefinition {
    name: "ResearchStudyLabel",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.label.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.label.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.label.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Kind of name.",
            path: "ResearchStudy.label.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name.",
            path: "ResearchStudy.label.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyLabel record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept 'type?;
    string value?;
|};

# FHIR ResearchStudyOutcomeMeasure datatype record.
#
# + reference - Structured outcome definition.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - Label for the outcome.
# + description - Description of the outcome.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The parameter or characteristic being assessed as one of the values by which the study is assessed.
@r5:DataTypeDefinition {
    name: "ResearchStudyOutcomeMeasure",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Structured outcome definition.",
            path: "ResearchStudy.outcomeMeasure.reference"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.outcomeMeasure.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.outcomeMeasure.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Label for the outcome.",
            path: "ResearchStudy.outcomeMeasure.name"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the outcome.",
            path: "ResearchStudy.outcomeMeasure.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.outcomeMeasure.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The parameter or characteristic being assessed as one of the values by which the study is assessed.",
            path: "ResearchStudy.outcomeMeasure.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyOutcomeMeasure record {|
    *r5:BackboneElement;

    r5:Reference reference?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string name?;
    r5:markdown description?;
    string id?;
    r5:CodeableConcept[] 'type?;
|};

# FHIR ResearchStudyObjective datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - Unique, human-readable label for this objective of the study.
# + description - Free text description of the objective of the study. This is what the study is trying to achieve rather than how it is going to achieve it (see ResearchStudy.description).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The kind of study objective.
@r5:DataTypeDefinition {
    name: "ResearchStudyObjective",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.objective.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.objective.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique, human-readable label for this objective of the study.",
            path: "ResearchStudy.objective.name"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Free text description of the objective of the study. This is what the study is trying to achieve rather than how it is going to achieve it (see ResearchStudy.description).",
            path: "ResearchStudy.objective.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.objective.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The kind of study objective.",
            path: "ResearchStudy.objective.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyObjective record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string name?;
    r5:markdown description?;
    string id?;
    r5:CodeableConcept 'type?;
|};

# FHIR ResearchStudyRecruitment datatype record.
#
# + actualGroup - Group of participants who were enrolled in study.
# + targetNumber - Estimated total number of participants to be enrolled.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + actualNumber - Actual total number of participants enrolled in study.
# + eligibility - Inclusion and exclusion criteria.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r5:DataTypeDefinition {
    name: "ResearchStudyRecruitment",
    baseType: (),
    elements: {
        "actualGroup": {
            name: "actualGroup",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Group of participants who were enrolled in study.",
            path: "ResearchStudy.recruitment.actualGroup"
        },
        "targetNumber": {
            name: "targetNumber",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated total number of participants to be enrolled.",
            path: "ResearchStudy.recruitment.targetNumber"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.recruitment.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.recruitment.modifierExtension"
        },
        "actualNumber": {
            name: "actualNumber",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "Actual total number of participants enrolled in study.",
            path: "ResearchStudy.recruitment.actualNumber"
        },
        "eligibility": {
            name: "eligibility",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Inclusion and exclusion criteria.",
            path: "ResearchStudy.recruitment.eligibility"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.recruitment.id"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyRecruitment record {|
    *r5:BackboneElement;

    r5:Reference actualGroup?;
    r5:unsignedInt targetNumber?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:unsignedInt actualNumber?;
    r5:Reference eligibility?;
    string id?;
|};

# FHIR ResearchStudyProgressStatus datatype record.
#
# + actual - An indication of whether or not the date is a known date when the state changed or will change. A value of true indicates a known date. A value of false indicates an estimated date.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Date range.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + state - Label for status or state (e.g. recruitment status).
@r5:DataTypeDefinition {
    name: "ResearchStudyProgressStatus",
    baseType: (),
    elements: {
        "actual": {
            name: "actual",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "An indication of whether or not the date is a known date when the state changed or will change. A value of true indicates a known date. A value of false indicates an estimated date.",
            path: "ResearchStudy.progressStatus.actual"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.progressStatus.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date range.",
            path: "ResearchStudy.progressStatus.period"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.progressStatus.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.progressStatus.id"
        },
        "state": {
            name: "state",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Label for status or state (e.g. recruitment status).",
            path: "ResearchStudy.progressStatus.state"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyProgressStatus record {|
    *r5:BackboneElement;

    boolean actual?;
    r5:Extension[] extension?;
    r5:Period period?;
    r5:Extension[] modifierExtension?;
    string id?;
    r5:CodeableConcept state;
|};

# ResearchStudyStatus enum
public enum ResearchStudyStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR ResearchStudyComparisonGroup datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + linkId - Allows the comparisonGroup for the study and the comparisonGroup for the subject to be linked easily.
# + observedGroup - Group of participants who were enrolled in study comparisonGroup.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + intendedExposure - Interventions or exposures in this comparisonGroup or cohort.
# + name - Unique, human-readable label for this comparisonGroup of the study.
# + description - A succinct description of the path through the study that would be followed by a subject adhering to this comparisonGroup.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Categorization of study comparisonGroup, e.g. experimental, active comparator, placebo comparater.
@r5:DataTypeDefinition {
    name: "ResearchStudyComparisonGroup",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.comparisonGroup.extension"
        },
        "linkId": {
            name: "linkId",
            dataType: r5:id,
            min: 0,
            max: 1,
            isArray: false,
            description: "Allows the comparisonGroup for the study and the comparisonGroup for the subject to be linked easily.",
            path: "ResearchStudy.comparisonGroup.linkId"
        },
        "observedGroup": {
            name: "observedGroup",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Group of participants who were enrolled in study comparisonGroup.",
            path: "ResearchStudy.comparisonGroup.observedGroup"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.comparisonGroup.modifierExtension"
        },
        "intendedExposure": {
            name: "intendedExposure",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Interventions or exposures in this comparisonGroup or cohort.",
            path: "ResearchStudy.comparisonGroup.intendedExposure"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Unique, human-readable label for this comparisonGroup of the study.",
            path: "ResearchStudy.comparisonGroup.name"
        },
        "description": {
            name: "description",
            dataType: r5:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "A succinct description of the path through the study that would be followed by a subject adhering to this comparisonGroup.",
            path: "ResearchStudy.comparisonGroup.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.comparisonGroup.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Categorization of study comparisonGroup, e.g. experimental, active comparator, placebo comparater.",
            path: "ResearchStudy.comparisonGroup.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyComparisonGroup record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:id linkId?;
    r5:Reference observedGroup?;
    r5:Extension[] modifierExtension?;
    r5:Reference[] intendedExposure?;
    string name;
    r5:markdown description?;
    string id?;
    r5:CodeableConcept 'type?;
|};

# FHIR ResearchStudyAssociatedParty datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Identifies the start date and the end date of the associated party in the role.
# + role - Type of association.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + classifier - A categorization other than role for the associated party.
# + name - Name of associated party.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + party - Individual or organization associated with study (use practitionerRole to specify their organisation).
@r5:DataTypeDefinition {
    name: "ResearchStudyAssociatedParty",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ResearchStudy.associatedParty.extension"
        },
        "period": {
            name: "period",
            dataType: r5:Period,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the start date and the end date of the associated party in the role.",
            path: "ResearchStudy.associatedParty.period"
        },
        "role": {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Type of association.",
            path: "ResearchStudy.associatedParty.role"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ResearchStudy.associatedParty.modifierExtension"
        },
        "classifier": {
            name: "classifier",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorization other than role for the associated party.",
            path: "ResearchStudy.associatedParty.classifier"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Name of associated party.",
            path: "ResearchStudy.associatedParty.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ResearchStudy.associatedParty.id"
        },
        "party": {
            name: "party",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Individual or organization associated with study (use practitionerRole to specify their organisation).",
            path: "ResearchStudy.associatedParty.party"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type ResearchStudyAssociatedParty record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Period[] period?;
    r5:CodeableConcept role;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept[] classifier?;
    string name?;
    string id?;
    r5:Reference party?;
|};

