// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_SPECIMEN = "http://hl7.org/fhir/StructureDefinition/Specimen";
public const RESOURCE_NAME_SPECIMEN = "Specimen";

# FHIR Specimen resource record.
#
# + resourceType - The type of the resource describes
# + container - The container holding the specimen. The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.
# + accessionIdentifier - The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures.
# + identifier - Id for specimen.
# + note - To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).
# + parent - Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen.
# + request - Details concerning a service request that required a specimen to be collected.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - The role or reason for the specimen in the testing workflow.
# + subject - Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance, a biologically-derived product, or a device.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + collection - Details concerning the specimen collection.
# + 'type - The kind of material that forms the specimen.
# + condition - A mode or state of being that describes the nature of the specimen.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + feature - A physical feature or landmark on a specimen, highlighted for context by the collector of the specimen (e.g. surgeon), that identifies the type of feature as well as its meaning (e.g. the red ink indicating the resection margin of the right lobe of the excised prostate tissue or wire loop at radiologically suspected tumor location).
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + receivedTime - Time when specimen is received by the testing laboratory for processing or testing.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + processing - Details concerning processing and processing steps for the specimen.
# + combined - This element signifies if the specimen is part of a group or pooled.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + status - The availability of the specimen.
@r5:ResourceDefinition {
    resourceType: "Specimen",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Specimen",
    elements: {
        "container" : {
            name: "container",
            dataType: SpecimenContainer,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.container"
        },
        "accessionIdentifier" : {
            name: "accessionIdentifier",
            dataType: r5:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.accessionIdentifier"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.identifier"
        },
        "note" : {
            name: "note",
            dataType: r5:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.note"
        },
        "parent" : {
            name: "parent",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.parent"
        },
        "request" : {
            name: "request",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.request"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.extension"
        },
        "role" : {
            name: "role",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.role",
            valueSet: "http://hl7.org/fhir/ValueSet/specimen-role"
        },
        "subject" : {
            name: "subject",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "collection" : {
            name: "collection",
            dataType: SpecimenCollection,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.collection"
        },
        "type" : {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.type",
            valueSet: "http://terminology.hl7.org/ValueSet/v2-0487"
        },
        "condition" : {
            name: "condition",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.condition",
            valueSet: "http://terminology.hl7.org/ValueSet/v2-0493"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.contained"
        },
        "feature" : {
            name: "feature",
            dataType: SpecimenFeature,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.feature"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.meta"
        },
        "receivedTime" : {
            name: "receivedTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.receivedTime"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.implicitRules"
        },
        "processing" : {
            name: "processing",
            dataType: SpecimenProcessing,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Specimen.processing"
        },
        "combined" : {
            name: "combined",
            dataType: SpecimenCombined,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.combined",
            valueSet: "http://hl7.org/fhir/ValueSet/specimen-combined|5.0.0"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.text"
        },
        "status" : {
            name: "status",
            dataType: SpecimenStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "Specimen.status",
            valueSet: "http://hl7.org/fhir/ValueSet/specimen-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Specimen record {|
    *r5:DomainResource;

    RESOURCE_NAME_SPECIMEN resourceType = RESOURCE_NAME_SPECIMEN;

    SpecimenContainer[] container?;
    r5:Identifier accessionIdentifier?;
    r5:Identifier[] identifier?;
    r5:Annotation[] note?;
    r5:Reference[] parent?;
    r5:Reference[] request?;
    r5:Extension[] extension?;
    r5:CodeableConcept[] role?;
    r5:Reference subject?;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    SpecimenCollection collection?;
    r5:CodeableConcept 'type?;
    r5:CodeableConcept[] condition?;
    r5:Resource[] contained?;
    SpecimenFeature[] feature?;
    r5:Meta meta?;
    r5:dateTime receivedTime?;
    r5:uri implicitRules?;
    SpecimenProcessing[] processing?;
    SpecimenCombined combined?;
    string id?;
    r5:Narrative text?;
    SpecimenStatus status?;
    r5:Element ...;
|};

# FHIR SpecimenFeature datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - Description of the feature of the specimen.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The landmark or feature being highlighted.
@r5:DataTypeDefinition {
    name: "SpecimenFeature",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Specimen.feature.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Specimen.feature.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Description of the feature of the specimen.",
            path: "Specimen.feature.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Specimen.feature.id"
        },
        "type": {
            name: "type",
            dataType: r5:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The landmark or feature being highlighted.",
            path: "Specimen.feature.type"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SpecimenFeature record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string description;
    string id?;
    r5:CodeableConcept 'type;
|};

# SpecimenCombined enum
public enum SpecimenCombined {
   CODE_COMBINED_GROUPED = "grouped",
   CODE_COMBINED_POOLED = "pooled"
}

# SpecimenStatus enum
public enum SpecimenStatus {
   CODE_STATUS_UNAVAILABLE = "unavailable",
   CODE_STATUS_AVAILABLE = "available",
   CODE_STATUS_UNSATISFACTORY = "unsatisfactory",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR SpecimenProcessing datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + method - A coded value specifying the method used to process the specimen.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timePeriod - A record of the time or period when the specimen processing occurred. For example the time of sample fixation or the period of time the sample was in formalin.
# + description - Textual description of procedure.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + timeDateTime - A record of the time or period when the specimen processing occurred. For example the time of sample fixation or the period of time the sample was in formalin.
# + additive - Material used in the processing step.
@r5:DataTypeDefinition {
    name: "SpecimenProcessing",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Specimen.processing.extension"
        },
        "method": {
            name: "method",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded value specifying the method used to process the specimen.",
            path: "Specimen.processing.method"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Specimen.processing.modifierExtension"
        },
        "timePeriod": {
            name: "timePeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "A record of the time or period when the specimen processing occurred. For example the time of sample fixation or the period of time the sample was in formalin.",
            path: "Specimen.processing.time[x]"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Textual description of procedure.",
            path: "Specimen.processing.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Specimen.processing.id"
        },
        "timeDateTime": {
            name: "timeDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "A record of the time or period when the specimen processing occurred. For example the time of sample fixation or the period of time the sample was in formalin.",
            path: "Specimen.processing.time[x]"
        },
        "additive": {
            name: "additive",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Material used in the processing step.",
            path: "Specimen.processing.additive"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SpecimenProcessing record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:CodeableConcept method?;
    r5:Extension[] modifierExtension?;
    r5:Period timePeriod?;
    string description?;
    string id?;
    r5:dateTime timeDateTime?;
    r5:Reference[] additive?;
|};

# FHIR SpecimenContainer datatype record.
#
# + specimenQuantity - The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + location - The location of the container holding the specimen.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + device - The device resource for the the container holding the specimen. If the container is in a holder then the referenced device will point to a parent device.
@r5:DataTypeDefinition {
    name: "SpecimenContainer",
    baseType: (),
    elements: {
        "specimenQuantity": {
            name: "specimenQuantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.",
            path: "Specimen.container.specimenQuantity"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Specimen.container.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Specimen.container.modifierExtension"
        },
        "location": {
            name: "location",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The location of the container holding the specimen.",
            path: "Specimen.container.location"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Specimen.container.id"
        },
        "device": {
            name: "device",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The device resource for the the container holding the specimen. If the container is in a holder then the referenced device will point to a parent device.",
            path: "Specimen.container.device"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SpecimenContainer record {|
    *r5:BackboneElement;

    r5:Quantity specimenQuantity?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Reference location?;
    string id?;
    r5:Reference device;
|};

# FHIR SpecimenCollection datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + fastingStatusDuration - Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.
# + quantity - The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.
# + collectedPeriod - Time when specimen was collected from subject - the physiologically relevant time.
# + method - A coded value specifying the technique that is used to perform the procedure.
# + collectedDateTime - Time when specimen was collected from subject - the physiologically relevant time.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + fastingStatusCodeableConcept - Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.
# + procedure - The procedure event during which the specimen was collected (e.g. the surgery leading to the collection of a pathology sample).
# + collector - Person who collected the specimen.
# + duration - The span of time over which the collection of a specimen occurred.
# + bodySite - Anatomical location from which the specimen was collected (if subject is a patient). This is the target site. This element is not used for environmental specimens.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + device - A coded value specifying the technique that is used to perform the procedure.
@r5:DataTypeDefinition {
    name: "SpecimenCollection",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Specimen.collection.extension"
        },
        "fastingStatusDuration": {
            name: "fastingStatusDuration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.",
            path: "Specimen.collection.fastingStatus[x]"
        },
        "quantity": {
            name: "quantity",
            dataType: r5:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.",
            path: "Specimen.collection.quantity"
        },
        "collectedPeriod": {
            name: "collectedPeriod",
            dataType: r5:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time when specimen was collected from subject - the physiologically relevant time.",
            path: "Specimen.collection.collected[x]"
        },
        "method": {
            name: "method",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded value specifying the technique that is used to perform the procedure.",
            path: "Specimen.collection.method"
        },
        "collectedDateTime": {
            name: "collectedDateTime",
            dataType: r5:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time when specimen was collected from subject - the physiologically relevant time.",
            path: "Specimen.collection.collected[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Specimen.collection.modifierExtension"
        },
        "fastingStatusCodeableConcept": {
            name: "fastingStatusCodeableConcept",
            dataType: r5:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.",
            path: "Specimen.collection.fastingStatus[x]"
        },
        "procedure": {
            name: "procedure",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The procedure event during which the specimen was collected (e.g. the surgery leading to the collection of a pathology sample).",
            path: "Specimen.collection.procedure"
        },
        "collector": {
            name: "collector",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Person who collected the specimen.",
            path: "Specimen.collection.collector"
        },
        "duration": {
            name: "duration",
            dataType: r5:Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "The span of time over which the collection of a specimen occurred.",
            path: "Specimen.collection.duration"
        },
        "bodySite": {
            name: "bodySite",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Anatomical location from which the specimen was collected (if subject is a patient). This is the target site. This element is not used for environmental specimens.",
            path: "Specimen.collection.bodySite"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Specimen.collection.id"
        },
        "device": {
            name: "device",
            dataType: r5:CodeableReference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded value specifying the technique that is used to perform the procedure.",
            path: "Specimen.collection.device"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SpecimenCollection record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Duration fastingStatusDuration?;
    r5:Quantity quantity?;
    r5:Period collectedPeriod?;
    r5:CodeableConcept method?;
    r5:dateTime collectedDateTime?;
    r5:Extension[] modifierExtension?;
    r5:CodeableConcept fastingStatusCodeableConcept?;
    r5:Reference procedure?;
    r5:Reference collector?;
    r5:Duration duration?;
    r5:CodeableReference bodySite?;
    string id?;
    r5:CodeableReference device?;
|};

