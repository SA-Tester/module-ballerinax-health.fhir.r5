// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_SUBSCRIPTION = "http://hl7.org/fhir/StructureDefinition/Subscription";
public const RESOURCE_NAME_SUBSCRIPTION = "Subscription";

# FHIR Subscription resource record.
#
# + resourceType - The type of the resource describes
# + reason - A description of why this subscription is defined.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + channelType - The type of channel to send notifications on.
# + language - The base language in which the resource is written.
# + heartbeatPeriod - If present, a 'heartbeat' notification (keep-alive) is sent via this channel with an interval period equal to this elements integer value in seconds. If not present, a heartbeat notification is not sent.
# + maxCount - If present, the maximum number of events that will be included in a notification bundle. Note that this is not a strict limit on the number of entries in a bundle, as dependent resources can be included.
# + content - How much of the resource content to deliver in the notification payload. The choices are an empty payload, only the resource id, or the full resource content.
# + timeout - If present, the maximum amount of time a server will allow before failing a notification attempt.
# + endpoint - The url that describes the actual end-point to send notifications to.
# + contact - Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.
# + 'parameter - Channel-dependent information to send as part of the notification (e.g., HTTP Headers).
# + end - The time for the server to turn the subscription off.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + contentType - The MIME type to send the payload in - e.g., `application/fhir+xml` or `application/fhir+json`. Note that: * clients may request notifications in a specific FHIR version by using the [FHIR Version Parameter](http.html#version-parameter) - e.g., `application/fhir+json; fhirVersion=4.0`. * additional MIME types can be allowed by channels - e.g., `text/plain` and `text/html` are defined by the Email channel.
# + identifier - A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + filterBy - The filter properties to be applied to narrow the subscription topic stream. When multiple filters are applied, evaluates to true if all the conditions applicable to that resource are met; otherwise it returns false (i.e., logical AND).
# + managingEntity - Entity with authorization to make subsequent revisions to the Subscription and also determines what data the subscription is authorized to disclose.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - A natural language name identifying the subscription.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + topic - The reference to the subscription topic to be notified about.
# + status - The status of the subscription, which marks the server state for managing the subscription.
@r5:ResourceDefinition {
    resourceType: "Subscription",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Subscription",
    elements: {
        "reason" : {
            name: "reason",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.reason"
        },
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.extension"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.modifierExtension"
        },
        "channelType" : {
            name: "channelType",
            dataType: r5:Coding,
            min: 1,
            max: 1,
            isArray: false,
            path: "Subscription.channelType",
            valueSet: "http://hl7.org/fhir/ValueSet/subscription-channel-type"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "heartbeatPeriod" : {
            name: "heartbeatPeriod",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.heartbeatPeriod"
        },
        "maxCount" : {
            name: "maxCount",
            dataType: r5:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.maxCount"
        },
        "content" : {
            name: "content",
            dataType: SubscriptionContent,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.content",
            valueSet: "http://hl7.org/fhir/ValueSet/subscription-payload-content|5.0.0"
        },
        "timeout" : {
            name: "timeout",
            dataType: r5:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.timeout"
        },
        "endpoint" : {
            name: "endpoint",
            dataType: r5:urlType,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.endpoint"
        },
        "contact" : {
            name: "contact",
            dataType: r5:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.contact"
        },
        "parameter" : {
            name: "parameter",
            dataType: SubscriptionParameter,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.parameter"
        },
        "end" : {
            name: "end",
            dataType: r5:instant,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.end"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.text"
        },
        "contentType" : {
            name: "contentType",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.contentType",
            valueSet: "http://hl7.org/fhir/ValueSet/mimetypes|5.0.0"
        },
        "identifier" : {
            name: "identifier",
            dataType: r5:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.identifier"
        },
        "filterBy" : {
            name: "filterBy",
            dataType: SubscriptionFilterBy,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.filterBy"
        },
        "managingEntity" : {
            name: "managingEntity",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.managingEntity"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Subscription.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.meta"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Subscription.implicitRules"
        },
        "topic" : {
            name: "topic",
            dataType: r5:canonical,
            min: 1,
            max: 1,
            isArray: false,
            path: "Subscription.topic"
        },
        "status" : {
            name: "status",
            dataType: SubscriptionStatusOne,
            min: 1,
            max: 1,
            isArray: false,
            path: "Subscription.status",
            valueSet: "http://hl7.org/fhir/ValueSet/subscription-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type Subscription record {|
    *r5:DomainResource;

    RESOURCE_NAME_SUBSCRIPTION resourceType = RESOURCE_NAME_SUBSCRIPTION;

    string reason?;
    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    r5:Coding channelType;
    r5:code language?;
    r5:unsignedInt heartbeatPeriod?;
    r5:positiveInt maxCount?;
    SubscriptionContent content?;
    r5:unsignedInt timeout?;
    r5:urlType endpoint?;
    r5:ContactPoint[] contact?;
    SubscriptionParameter[] 'parameter?;
    r5:instant end?;
    string id?;
    r5:Narrative text?;
    r5:code contentType?;
    r5:Identifier[] identifier?;
    SubscriptionFilterBy[] filterBy?;
    r5:Reference managingEntity?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    string name?;
    r5:uri implicitRules?;
    r5:canonical topic;
    SubscriptionStatusOne status;
    r5:Element ...;
|};

# SubscriptionFilterByModifier enum
public enum SubscriptionFilterByModifier {
   CODE_MODIFIER_IDENTIFIER = "identifier",
   CODE_MODIFIER_OF_TYPE = "of-type",
   CODE_MODIFIER_IN = "in",
   CODE_MODIFIER_BELOW = "below",
   CODE_MODIFIER_TYPE = "type",
   CODE_MODIFIER_CONTAINS = "contains",
   CODE_MODIFIER_NOT = "not",
   CODE_MODIFIER_MISSING = "missing",
   CODE_MODIFIER_EXACT = "exact",
   CODE_MODIFIER_ABOVE = "above",
   CODE_MODIFIER_NOT_IN = "not-in",
   CODE_MODIFIER_TEXT = "text",
   CODE_MODIFIER_TEXT_ADVANCED = "text-advanced",
   CODE_MODIFIER_CODE_TEXT = "code-text",
   CODE_MODIFIER_ITERATE = "iterate"
}

# SubscriptionContent enum
public enum SubscriptionContent {
   CODE_CONTENT_FULL_RESOURCE = "full-resource",
   CODE_CONTENT_EMPTY = "empty",
   CODE_CONTENT_ID_ONLY = "id-only"
}

# SubscriptionFilterByComparator enum
public enum SubscriptionFilterByComparator {
   CODE_COMPARATOR_NE = "ne",
   CODE_COMPARATOR_LT = "lt",
   CODE_COMPARATOR_LE = "le",
   CODE_COMPARATOR_EQ = "eq",
   CODE_COMPARATOR_GT = "gt",
   CODE_COMPARATOR_EB = "eb",
   CODE_COMPARATOR_GE = "ge",
   CODE_COMPARATOR_SA = "sa",
   CODE_COMPARATOR_AP = "ap"
}

# SubscriptionStatusOne enum
public enum SubscriptionStatusOne {
   CODE_STATUS_REQUESTED = "requested",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ERROR = "error",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_OFF = "off"
}

# FHIR SubscriptionParameter datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - Parameter name for information passed to the channel for notifications, for example in the case of a REST hook wanting to pass through an authorization header, the name would be Authorization.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + value - Parameter value for information passed to the channel for notifications, for example in the case of a REST hook wanting to pass through an authorization header, the value would be `Bearer 0193...`.
@r5:DataTypeDefinition {
    name: "SubscriptionParameter",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Subscription.parameter.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Subscription.parameter.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Parameter name for information passed to the channel for notifications, for example in the case of a REST hook wanting to pass through an authorization header, the name would be Authorization.",
            path: "Subscription.parameter.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Subscription.parameter.id"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Parameter value for information passed to the channel for notifications, for example in the case of a REST hook wanting to pass through an authorization header, the value would be `Bearer 0193...`.",
            path: "Subscription.parameter.value"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SubscriptionParameter record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:Extension[] modifierExtension?;
    string name;
    string id?;
    string value;
|};

# FHIR SubscriptionFilterBy datatype record.
#
# + comparator - Comparator applied to this filter parameter.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifier - Modifier applied to this filter parameter.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + filterParameter - The filter as defined in the `SubscriptionTopic.canFilterBy.filterParameter` element.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + value - The literal value or resource path as is legal in search - for example, `Patient/123` or `le1950`.
# + resourceType - A resource listed in the `SubscriptionTopic` this `Subscription` references (`SubscriptionTopic.canFilterBy.resource`). This element can be used to differentiate filters for topics that include more than one resource type.
@r5:DataTypeDefinition {
    name: "SubscriptionFilterBy",
    baseType: (),
    elements: {
        "comparator": {
            name: "comparator",
            dataType: SubscriptionFilterByComparator,
            min: 0,
            max: 1,
            isArray: false,
            description: "Comparator applied to this filter parameter.",
            path: "Subscription.filterBy.comparator"
        },
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Subscription.filterBy.extension"
        },
        "modifier": {
            name: "modifier",
            dataType: SubscriptionFilterByModifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Modifier applied to this filter parameter.",
            path: "Subscription.filterBy.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Subscription.filterBy.modifierExtension"
        },
        "filterParameter": {
            name: "filterParameter",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The filter as defined in the `SubscriptionTopic.canFilterBy.filterParameter` element.",
            path: "Subscription.filterBy.filterParameter"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Subscription.filterBy.id"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The literal value or resource path as is legal in search - for example, `Patient/123` or `le1950`.",
            path: "Subscription.filterBy.value"
        },
        "resourceType": {
            name: "resourceType",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "A resource listed in the `SubscriptionTopic` this `Subscription` references (`SubscriptionTopic.canFilterBy.resource`). This element can be used to differentiate filters for topics that include more than one resource type.",
            path: "Subscription.filterBy.resourceType"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SubscriptionFilterBy record {|
    *r5:BackboneElement;

    SubscriptionFilterByComparator comparator?;
    r5:Extension[] extension?;
    SubscriptionFilterByModifier modifier?;
    r5:Extension[] modifierExtension?;
    string filterParameter;
    string id?;
    string value;
    r5:uri resourceType?;
|};

