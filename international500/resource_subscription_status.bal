// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r5;

public const string PROFILE_BASE_SUBSCRIPTIONSTATUS = "http://hl7.org/fhir/StructureDefinition/SubscriptionStatus";
public const RESOURCE_NAME_SUBSCRIPTIONSTATUS = "SubscriptionStatus";

# FHIR SubscriptionStatus resource record.
#
# + resourceType - The type of the resource describes
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + eventsSinceSubscriptionStart - The total number of actual events which have been generated since the Subscription was created (inclusive of this notification) - regardless of how many have been successfully communicated. This number is NOT incremented for handshake and heartbeat notifications.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + subscription - The reference to the Subscription which generated this notification.
# + 'error - A record of errors that occurred when the server processed a notification.
# + 'type - The type of event being conveyed with this notification.
# + notificationEvent - Detailed information about events relevant to this subscription notification.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + topic - The reference to the SubscriptionTopic for the Subscription which generated this notification.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + status - The status of the subscription, which marks the server state for managing the subscription.
@r5:ResourceDefinition {
    resourceType: "SubscriptionStatus",
    baseType: r5:DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/SubscriptionStatus",
    elements: {
        "extension" : {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SubscriptionStatus.extension"
        },
        "eventsSinceSubscriptionStart" : {
            name: "eventsSinceSubscriptionStart",
            dataType: r5:integer64,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.eventsSinceSubscriptionStart"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SubscriptionStatus.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r5:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.language",
            valueSet: "http://hl7.org/fhir/ValueSet/all-languages|5.0.0"
        },
        "subscription" : {
            name: "subscription",
            dataType: r5:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.subscription"
        },
        "error" : {
            name: "error",
            dataType: r5:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SubscriptionStatus.error",
            valueSet: "http://hl7.org/fhir/ValueSet/subscription-error"
        },
        "type" : {
            name: "type",
            dataType: SubscriptionStatusType,
            min: 1,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.type",
            valueSet: "http://hl7.org/fhir/ValueSet/subscription-notification-type|5.0.0"
        },
        "notificationEvent" : {
            name: "notificationEvent",
            dataType: SubscriptionStatusNotificationEvent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SubscriptionStatus.notificationEvent"
        },
        "contained" : {
            name: "contained",
            dataType: r5:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SubscriptionStatus.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r5:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r5:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.implicitRules"
        },
        "topic" : {
            name: "topic",
            dataType: r5:canonical,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.topic"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.id"
        },
        "text" : {
            name: "text",
            dataType: r5:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.text"
        },
        "status" : {
            name: "status",
            dataType: SubscriptionStatusStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "SubscriptionStatus.status",
            valueSet: "http://hl7.org/fhir/ValueSet/subscription-status|5.0.0"
        }
    },
    serializers: {
        'xml: r5:fhirResourceXMLSerializer,
        'json: r5:fhirResourceJsonSerializer
    }
}
public type SubscriptionStatus record {|
    *r5:DomainResource;

    RESOURCE_NAME_SUBSCRIPTIONSTATUS resourceType = RESOURCE_NAME_SUBSCRIPTIONSTATUS;

    r5:Extension[] extension?;
    r5:integer64 eventsSinceSubscriptionStart?;
    r5:Extension[] modifierExtension?;
    r5:code language?;
    r5:Reference subscription;
    r5:CodeableConcept[] 'error?;
    SubscriptionStatusType 'type;
    SubscriptionStatusNotificationEvent[] notificationEvent?;
    r5:Resource[] contained?;
    r5:Meta meta?;
    r5:uri implicitRules?;
    r5:canonical topic?;
    string id?;
    r5:Narrative text?;
    SubscriptionStatusStatus status?;
    r5:Element ...;
|};

# SubscriptionStatusStatus enum
public enum SubscriptionStatusStatus {
   CODE_STATUS_REQUESTED = "requested",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ERROR = "error",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_OFF = "off"
}

# FHIR SubscriptionStatusNotificationEvent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + eventNumber - Either the sequential number of this event in this subscription context or a relative event number for this notification.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + focus - The focus of this event. While this will usually be a reference to the focus resource of the event, it MAY contain a reference to a non-FHIR object.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + additionalContext - Additional context information for this event. Generally, this will contain references to additional resources included with the event (e.g., the Patient relevant to an Encounter), however it MAY refer to non-FHIR objects.
# + timestamp - The actual time this event occurred on the server.
@r5:DataTypeDefinition {
    name: "SubscriptionStatusNotificationEvent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "SubscriptionStatus.notificationEvent.extension"
        },
        "eventNumber": {
            name: "eventNumber",
            dataType: r5:integer64,
            min: 1,
            max: 1,
            isArray: false,
            description: "Either the sequential number of this event in this subscription context or a relative event number for this notification.",
            path: "SubscriptionStatus.notificationEvent.eventNumber"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r5:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "SubscriptionStatus.notificationEvent.modifierExtension"
        },
        "focus": {
            name: "focus",
            dataType: r5:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The focus of this event. While this will usually be a reference to the focus resource of the event, it MAY contain a reference to a non-FHIR object.",
            path: "SubscriptionStatus.notificationEvent.focus"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "SubscriptionStatus.notificationEvent.id"
        },
        "additionalContext": {
            name: "additionalContext",
            dataType: r5:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Additional context information for this event. Generally, this will contain references to additional resources included with the event (e.g., the Patient relevant to an Encounter), however it MAY refer to non-FHIR objects.",
            path: "SubscriptionStatus.notificationEvent.additionalContext"
        },
        "timestamp": {
            name: "timestamp",
            dataType: r5:instant,
            min: 0,
            max: 1,
            isArray: false,
            description: "The actual time this event occurred on the server.",
            path: "SubscriptionStatus.notificationEvent.timestamp"
        }
    },
    serializers: {
        'xml: r5:complexDataTypeXMLSerializer,
        'json: r5:complexDataTypeJsonSerializer
    }
}
public type SubscriptionStatusNotificationEvent record {|
    *r5:BackboneElement;

    r5:Extension[] extension?;
    r5:integer64 eventNumber;
    r5:Extension[] modifierExtension?;
    r5:Reference focus?;
    string id?;
    r5:Reference[] additionalContext?;
    r5:instant timestamp?;
|};

# SubscriptionStatusType enum
public enum SubscriptionStatusType {
   CODE_TYPE_QUERY_STATUS = "query-status",
   CODE_TYPE_HANDSHAKE = "handshake",
   CODE_TYPE_HEARTBEAT = "heartbeat",
   CODE_TYPE_EVENT_NOTIFICATION = "event-notification",
   CODE_TYPE_QUERY_EVENT = "query-event"
}

